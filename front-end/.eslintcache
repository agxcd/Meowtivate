[{"/home/minty/lighthouse/meowtivate/front-end/src/index.js":"1","/home/minty/lighthouse/meowtivate/front-end/src/components/App.js":"2","/home/minty/lighthouse/meowtivate/front-end/src/helpers/getCurrentDate.js":"3","/home/minty/lighthouse/meowtivate/front-end/src/hooks/useApplicationData.js":"4","/home/minty/lighthouse/meowtivate/front-end/src/components/404.jsx":"5","/home/minty/lighthouse/meowtivate/front-end/src/pages/RegisterPage.jsx":"6","/home/minty/lighthouse/meowtivate/front-end/src/pages/WelcomePage.jsx":"7","/home/minty/lighthouse/meowtivate/front-end/src/pages/LoginPage.jsx":"8","/home/minty/lighthouse/meowtivate/front-end/src/pages/ListsPage.jsx":"9","/home/minty/lighthouse/meowtivate/front-end/src/pages/CatsPage.jsx":"10","/home/minty/lighthouse/meowtivate/front-end/src/pages/ShopPage.jsx":"11","/home/minty/lighthouse/meowtivate/front-end/src/pages/InventoryPage.jsx":"12","/home/minty/lighthouse/meowtivate/front-end/src/pages/AccountPage.jsx":"13","/home/minty/lighthouse/meowtivate/front-end/src/pages/DashboardPage.jsx":"14","/home/minty/lighthouse/meowtivate/front-end/src/helpers/stateHelpers.js":"15","/home/minty/lighthouse/meowtivate/front-end/src/components/NavBar.jsx":"16","/home/minty/lighthouse/meowtivate/front-end/src/components/ShopItem.jsx":"17","/home/minty/lighthouse/meowtivate/front-end/src/components/GalleryContainer.jsx":"18","/home/minty/lighthouse/meowtivate/front-end/src/components/InventoryItem.jsx":"19","/home/minty/lighthouse/meowtivate/front-end/src/components/Weather.js":"20","/home/minty/lighthouse/meowtivate/front-end/src/components/Calendar-import.js":"21","/home/minty/lighthouse/meowtivate/front-end/src/components/ListsContainer.jsx":"22","/home/minty/lighthouse/meowtivate/front-end/src/components/SMSForm.js":"23","/home/minty/lighthouse/meowtivate/front-end/src/components/CatPlant.jsx":"24","/home/minty/lighthouse/meowtivate/front-end/src/components/GalleryItem.js":"25","/home/minty/lighthouse/meowtivate/front-end/src/helpers/calculateChecked.js":"26","/home/minty/lighthouse/meowtivate/front-end/src/components/Menu.jsx":"27","/home/minty/lighthouse/meowtivate/front-end/src/components/Progress.jsx":"28","/home/minty/lighthouse/meowtivate/front-end/src/components/UnlockBadge.jsx":"29","/home/minty/lighthouse/meowtivate/front-end/src/components/ActionList.jsx":"30","/home/minty/lighthouse/meowtivate/front-end/src/components/Popup.jsx":"31"},{"size":248,"mtime":1611546638111,"results":"32","hashOfConfig":"33"},{"size":3860,"mtime":1611613539242,"results":"34","hashOfConfig":"33"},{"size":533,"mtime":1611545201155,"results":"35","hashOfConfig":"33"},{"size":8249,"mtime":1611613539250,"results":"36","hashOfConfig":"33"},{"size":228,"mtime":1611350970315,"results":"37","hashOfConfig":"33"},{"size":2172,"mtime":1611614475859,"results":"38","hashOfConfig":"33"},{"size":2321,"mtime":1611644338728,"results":"39","hashOfConfig":"33"},{"size":1962,"mtime":1611614570155,"results":"40","hashOfConfig":"33"},{"size":461,"mtime":1611546638111,"results":"41","hashOfConfig":"33"},{"size":1566,"mtime":1611546638111,"results":"42","hashOfConfig":"33"},{"size":2295,"mtime":1611631486164,"results":"43","hashOfConfig":"33"},{"size":1477,"mtime":1611624800460,"results":"44","hashOfConfig":"33"},{"size":3234,"mtime":1611637091770,"results":"45","hashOfConfig":"33"},{"size":6661,"mtime":1611615392055,"results":"46","hashOfConfig":"33"},{"size":4871,"mtime":1611613539250,"results":"47","hashOfConfig":"33"},{"size":627,"mtime":1611614969727,"results":"48","hashOfConfig":"33"},{"size":3772,"mtime":1611633265428,"results":"49","hashOfConfig":"33"},{"size":839,"mtime":1611546638111,"results":"50","hashOfConfig":"33"},{"size":1565,"mtime":1611633093679,"results":"51","hashOfConfig":"33"},{"size":2416,"mtime":1611546292749,"results":"52","hashOfConfig":"33"},{"size":3934,"mtime":1611547600466,"results":"53","hashOfConfig":"33"},{"size":5364,"mtime":1611643801740,"results":"54","hashOfConfig":"33"},{"size":3768,"mtime":1611547597157,"results":"55","hashOfConfig":"33"},{"size":2563,"mtime":1611613539246,"results":"56","hashOfConfig":"33"},{"size":1189,"mtime":1611546638111,"results":"57","hashOfConfig":"33"},{"size":375,"mtime":1611350970363,"results":"58","hashOfConfig":"33"},{"size":4672,"mtime":1611615189987,"results":"59","hashOfConfig":"33"},{"size":545,"mtime":1611638035195,"results":"60","hashOfConfig":"33"},{"size":4707,"mtime":1611547698653,"results":"61","hashOfConfig":"33"},{"size":5525,"mtime":1611644404078,"results":"62","hashOfConfig":"33"},{"size":3665,"mtime":1611547611346,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"v3sst6",{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"/home/minty/lighthouse/meowtivate/front-end/src/index.js",[],["135","136"],"/home/minty/lighthouse/meowtivate/front-end/src/components/App.js",["137","138"],"/*\nApp.js is responsible for containing all the routes and passing state as props\n*/\nimport React, { useEffect, useState } from \"react\";\n\nimport \"./styles/App.css\";\nimport \"@fontsource/itim\";\nimport \"@fontsource/varela-round\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport getCurrentDate from \"../helpers/getCurrentDate\";\n\n// Hooks\nimport useApplicationData from \"../hooks/useApplicationData\";\n// import useAuth from \"../hooks/useAuth\";\n\n// Pages imported from src/pages dir\nimport WelcomePage from \"../pages/WelcomePage\";\nimport LoginPage from \"../pages/LoginPage\";\nimport RegisterPage from \"../pages/RegisterPage\";\nimport DashboardPage from \"../pages/DashboardPage\";\nimport ListsPage from \"../pages/ListsPage\";\nimport CatsPage from \"../pages/CatsPage\";\nimport AccountPage from \"../pages/AccountPage\";\nimport InventoryPage from \"../pages/InventoryPage\";\nimport ShopPage from \"../pages/ShopPage\";\n\nimport NotFoundPage from \"./404\";\n\nfunction App() {\n  const {\n    state,\n    actionFunctions,\n    catFunctions,\n    day,\n    setDay,\n    addPot,\n    potFunctions\n   } = useApplicationData();\n  const { unlocked, account } = state;\n  const id = day ? day : 0;\n  // const id = 1;\n\n  const [streak, setStreak] = useState(3); // Hardcode initial streak value\n  const [coins, setCoins] = useState(streak * 100);\n\n\n  // Add 1 to current streak if a cat was unlocked today\n  useEffect(() => {\n    const today = getCurrentDate();\n    // Get array of unlocked dates in \"yyyy-mm-dd\"\n    const currentUnlocked = unlocked.map((obj) =>\n      obj.date_unlocked.slice(0, 10)\n    );\n    if (currentUnlocked.includes(today)) {\n      setStreak((prev) => prev + 1);\n    }\n  }, [unlocked]);\n\n  // Change streak depending on user\n  useEffect(() => {\n    if (id === 2) {\n      setStreak(4);\n    } else if (id === 3) {\n      setStreak(0);\n    }\n  }, [state]);\n\n  // Update streak whenever reloading\n  useEffect(() => {\n    setCoins(streak * 100);\n  }, [streak])\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          {/* Define route paths and nest page components inside */}\n          <Route exact path=\"/\" component={WelcomePage}>\n            <WelcomePage state={state} />\n          </Route>\n          <Route exact path=\"/login\" component={LoginPage}>\n            <LoginPage state={state} />\n          </Route>\n          <Route exact path=\"/register\" component={RegisterPage}>\n            <RegisterPage state={state} />\n          </Route>\n          <Route exact path=\"/dashboard\" component={DashboardPage}>\n            {/* <DashboardPage state={state} /> */}\n            <DashboardPage\n              state={state}\n              streak={streak}\n              day={day}\n              setDay={setDay}\n              id={id}\n              coins={coins}\n              setCoins={setCoins} />\n          </Route>\n          <Route exact path=\"/lists\" component={ListsPage}>\n            <ListsPage\n              state={state}\n              actionFunctions={actionFunctions}\n              catFunctions={catFunctions}\n            />\n          </Route>\n          <Route exact path=\"/cats\" component={CatsPage}>\n            <CatsPage state={state} />\n          </Route>\n          <Route exact path=\"/account\" component={AccountPage}>\n            <AccountPage state={state} />\n          </Route>\n          <Route exact path=\"/inventory\" component={InventoryPage}>\n            <InventoryPage \n              state={state}\n              potFunctions={potFunctions} />\n          </Route>\n          <Route exact path=\"/shop\" component={ShopPage}>\n            <ShopPage \n              state={state}\n              coins={coins}\n              setCoins={setCoins}\n              addPot={addPot} />\n          </Route>\n          <Route exact path=\"*\" component={NotFoundPage} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\nexport default App;\n","/home/minty/lighthouse/meowtivate/front-end/src/helpers/getCurrentDate.js",[],"/home/minty/lighthouse/meowtivate/front-end/src/hooks/useApplicationData.js",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/404.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/pages/RegisterPage.jsx",["139"],"import TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport DoubleArrowRoundedIcon from '@material-ui/icons/DoubleArrowRounded';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: \"Varela Round\",\n    '& > *': {\n      margin: theme.spacing(3),\n    },\n  },\n  container: {\n    display: 'inline-flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    backgroundColor: 'rgb(201,188,200, 0.4)',\n    borderRadius: '2rem',\n    width: '80vw',\n    paddingTop: '5em',\n    paddingBottom: '5em',\n    marginTop: '15vh'   \n  },\n  logo: {\n    fontFamily: \"itim\",\n    letterSpacing: \"8px\",\n    fontSize: '4em',\n    color: 'antiquewhite',\n    lineHeight: '0',\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n    color: 'grey',\n  },\n  loginButton: {\n    fontFamily: \"Varela Round\",\n\n    backgroundColor: '#a0cdca',\n    '&:hover': {\n      backgroundColor: '#78aca8',\n    }\n  },\n  icon: {\n    color: 'white',\n    fontSize: '2.7em',\n    paddingLeft: '1rem',\n    paddingRight: '1rem',\n  }\n}));\n\nexport default function RegisterPage(props) {\n  const classes = useStyles();\n  const { state } = props;\n\n  return (\n    <div className={classes.container}>\n      <h1 className={classes.logo}>MEOWTIVATE</h1>\n      <h2 className={classes.header}>REGISTER</h2>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" />\n        </div>\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" />\n        </div>\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" />\n        </div>\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" />\n        </div>\n        <Button\n        className={classes.loginButton}\n        variant=\"contained\" \n        component={Link}\n        to='/dashboard'>\n        <DoubleArrowRoundedIcon className={classes.icon}/>\n      </Button>\n      </form>\n    </div>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/pages/WelcomePage.jsx",["140"],"/home/minty/lighthouse/meowtivate/front-end/src/pages/LoginPage.jsx",["141"],"import TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport DoubleArrowRoundedIcon from '@material-ui/icons/DoubleArrowRounded';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: \"Varela Round\",\n    '& > *': {\n      margin: theme.spacing(3),\n    },\n  },\n  container: {\n    display: 'inline-flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    backgroundColor: 'rgb(201,188,200, 0.4)',\n    borderRadius: '2rem',\n    width: '80vw',\n    paddingTop: '5em',\n    paddingBottom: '5em',\n    marginTop: '15vh'   \n  },\n  logo: {\n    fontFamily: \"itim\",\n    letterSpacing: \"8px\",\n    fontSize: '4em',\n    color: 'antiquewhite',\n    lineHeight: '0',\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n    color: 'grey',\n  },\n  loginButton: {\n    fontFamily: \"Varela Round\",\n\n    backgroundColor: '#a0cdca',\n    '&:hover': {\n      backgroundColor: '#78aca8',\n    }\n  },\n  icon: {\n    color: 'white',\n    fontSize: '2.7em',\n    paddingLeft: '1rem',\n    paddingRight: '1rem',\n  }\n}));\n\nexport default function LoginPage(props) {\n  const classes = useStyles();\n  const { state } = props;\n\n  return (\n    <div className={classes.container}>\n      <h2 className={classes.logo}>MEOWTIVATE</h2>\n      <h2 className={classes.header}>LOGIN</h2>\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <div>\n        <TextField id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" value=\"Pawthos\" />\n      </div>\n      <div>\n      <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" value=\"****\"/>\n      </div>\n      <Button\n        className={classes.loginButton}\n        variant=\"contained\" \n        component={Link}\n        to='/dashboard'>\n        <DoubleArrowRoundedIcon className={classes.icon}/>\n      </Button>\n    </form>\n    </div>\n  )\n};","/home/minty/lighthouse/meowtivate/front-end/src/pages/ListsPage.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/pages/CatsPage.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/pages/ShopPage.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/pages/InventoryPage.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/pages/AccountPage.jsx",["142","143","144","145"],"/home/minty/lighthouse/meowtivate/front-end/src/pages/DashboardPage.jsx",["146","147","148","149","150"],"/home/minty/lighthouse/meowtivate/front-end/src/helpers/stateHelpers.js",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/NavBar.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/ShopItem.jsx",["151"],"/home/minty/lighthouse/meowtivate/front-end/src/components/GalleryContainer.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/InventoryItem.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/Weather.js",["152"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./styles/weather.css\";\n\nconst api = {\n  key: process.env.REACT_APP_WEATHER_API_KEY,\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\n// api.openweathermap.org/data/2.5/\n// weather?lat={lat}&lon={lon}&appid={API key}\n\nexport const Weather = () => {\n  // const [city, setCity] = useState(\"\");\n  const [weather, setWeather] = useState(\"\");\n\n  // const search = (event) => {\n  //   if (event.key === \"Enter\") {\n  //     fetch(`${api.base}weather?q=${city}&units=metric&APPID=${api.key}`)\n  //       .then((res) => res.json())\n  //       .then((result) => {\n  //         setWeather(result);\n  //         console.log(result);\n  //       });\n  //   }\n  // };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      fetch(`${api.base}weather?lat=${position.coords.latitude}&lon=${position.coords.longitude}&units=metric&appid=${api.key}`)\n      .then((res) => res.json())\n      .then((result) => {\n        setWeather(result);\n        // console.log(result);\n      });\n    });\n  }, [])\n  return (\n    <div\n      className={\n        typeof weather.main != \"undefined\"\n          ? weather.weather[0].main.includes(\"Cloud\")\n            ? \"weather Clouds\"\n            : \"weather\"\n          : \"weather\"\n      }\n    >\n      <section className=\"weather\">\n        {/* <div className=\"weather-search-box\">\n          <input\n            type=\"text\"\n            className=\"city-search-bar\"\n            placeholder=\"City...\"\n            onChange={(e) => setCity(e.target.value)}\n            value={city}\n            onKeyPress={search}\n          />\n        </div> */}\n        {typeof weather.main != \"undefined\" ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location\">\n                {weather.name}, {weather.sys.country}\n              </div>\n            </div>\n            <div className=\"temp\">{Math.round(weather.main.temp)}&deg;c</div>\n            <div className=\"weather\">{weather.weather[0].main}</div>\n            <div><img \n            className={weather.weather[0].main} \n            style={{display: 'block'}} \n            src={`https://meowtivate.s3-us-west-2.amazonaws.com/weather/${weather.weather[0].main}.png`} \n            alt=\"weather-image\"/>\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </section>\n    </div>\n  );\n};\n","/home/minty/lighthouse/meowtivate/front-end/src/components/Calendar-import.js",["153","154"],"import React, { useState, useEffect } from \"react\";\n\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\nimport { Calendar } from \"react-modern-calendar-datepicker\";\nimport \"./styles/calendar.css\";\nimport getCurrentDate from \"../helpers/getCurrentDate\";\n\nexport const CalendarApp = (props) => {\n  // const defaultValue = {\n  //   year: 2021,\n  //   month: 1,\n  //   day: 1,\n  // };\n  // const [selectedDay, setSelectedDay] = useState(defaultValue);\n  // console.log(\"calender\", props.items);\n\n  // const logDatas = { props };\n  // console.log(\"logDatas\", logDatas);\n  // const date = props.items.filter((item) => item.is_completed === true);\n  // let dayDates = date.map((item) => item.date_created.substring(8, 10));\n  // const parseIntDayArray = dayDates.map((item) => parseInt(item));\n\n  // // [\n  // // here we add some CSS classes\n  // //   { year: 2021, month: 1, day: 4, className: \"purpleDay\" },\n  // // ]\n\n  // let dayObject = parseIntDayArray.map((item) => ({\n  //   year: 2021,\n  //   month: 1,\n  //   day: item,\n  //   className: \"purpleDay\",\n  // }));\n\n  // return (\n  //   <>\n  //     <Calendar\n  //       value={selectedDay}\n  //       onChange={setSelectedDay}\n  //       shouldHighlightWeekends\n  //       customDaysClassName={dayObject}\n  //     />\n  //   </>\n\n  // Show different streak length depending on user id\n  const { state, day } = props;\n  // console.log(\"state in calendar\", state);\n  const { account, unlocked } = state;\n  // console.log(\"account\", account)\n  const id = day ? day : 0;\n  // const id = 4;\n\n  const streak1 = {\n    from: {\n      year: 2021,\n      month: 1,\n      day: 24,\n    },\n    to: {\n      year: 2021,\n      month: 1,\n      day: 26,\n    },\n  };\n  const streak1Add = {\n    from: {\n      year: 2021,\n      month: 1,\n      day: 24,\n    },\n    to: {\n      year: 2021,\n      month: 1,\n      day: 27,\n    },\n  };\n  const streak2 = {\n    from: {\n      year: 2021,\n      month: 1,\n      day: 24,\n    },\n    to: {\n      year: 2021,\n      month: 1,\n      day: 27,\n    },\n  };\n  const streak3 = [];\n  const streaksArray = [streak1, streak2, streak3, streak1Add];\n  const initialStreak = streaksArray[id - 1];\n\n  // Show different today selection depending on user id\n  const today1 = { year: 2021, month: 1, day: 27, className: \"todaySelect\" };\n  const today2 = { year: 2021, month: 1, day: 28, className: \"todaySelect\" };\n  const today3 = { year: 2021, month: 1, day: 29, className: \"todaySelect\" };\n  const todayArray = [today1, today2, today3];\n  const initialToday = todayArray[id - 1];\n\n  useEffect(() => {\n    setSelectedDayRange(streaksArray[id - 1]);\n    setToday(todayArray[id - 1]);\n    // console.log(\"id in useEffect\", id);\n  }, [account]);\n\n  const [selectedDayRange, setSelectedDayRange] = useState(initialStreak);\n  const [today, setToday] = useState(initialToday);\n\n  useEffect(() => {\n    const today = getCurrentDate();\n    const currentUnlocked = unlocked.map((obj) =>\n      obj.date_unlocked.slice(0, 10)\n    );\n    const todayUnlockExists = currentUnlocked.includes(today);\n\n    // console.log(\"calendar id\", id === 1);\n    // console.log(\"calendar todayUnlockExists\", todayUnlockExists);\n    if (id === 1 && todayUnlockExists) {\n      setSelectedDayRange(streak1Add);\n    }\n  }, [unlocked]);\n\n  return (\n    <Calendar\n      value={selectedDayRange}\n      onChange={setSelectedDayRange}\n      // colorPrimary=\"#0fbcf9\" // Range start and end\n      // colorPrimaryLight=\"rgba(75, 207, 250, 0.4)\" // Range middle\n      calendarTodayClassName=\"custom-today-day\"\n      shouldHighlightWeekends\n      customDaysClassName={[\n        // here we add some CSS classes\n        today,\n      ]}\n      renderFooter={() => (\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            padding: \"1rem 2rem\",\n          }}\n          className=\"footer\"\n        >\n          🌱 CURRENT STREAK\n        </div>\n      )}\n    />\n  );\n};\n","/home/minty/lighthouse/meowtivate/front-end/src/components/ListsContainer.jsx",["155","156","157","158","159","160","161"],"/home/minty/lighthouse/meowtivate/front-end/src/components/SMSForm.js",["162","163","164","165"],"import React, { Component, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport \"./SMSForm.css\";\n\nclass SMSForm extends Component {\n  constructor(props) {\n    // console.log(\"props\", props);\n    super(props);\n\n    this.state = {\n      tasks: [],\n      timer: \"\",\n      message: {\n        to: \"\",\n        body: \"\",\n      },\n      submitting: false,\n      error: false,\n      currentTime: \"\",\n      alarmTime: \"\",\n    };\n    // this.onSubmit = this.onSubmit.bind(this);\n    this.setAlarmTime = this.setAlarmTime.bind(this);\n  }\n  componentDidMount() {\n    axios.get(`/api/actions/1`).then((res) => {\n      // console.log(res.data);\n      const tasks = [...res.data];\n      const undone = tasks.filter((item) => item.is_completed !== true);\n      const undoneList = undone.map((item) => \"\\n 🐈 \" + item.action_name);\n      const msg =\n        \"_________________\" +\n        \"\\n ⏰  Reminder from Meowtivate. 🐈  \\nHere are your \" +\n        undoneList.length +\n        \" unfinished tasks for today: \" +\n        undoneList;\n      this.setState({\n        message: { ...this.state.message, body: msg },\n      });\n    });\n    this.clock = setInterval(() => this.setCurrentTime(), 1000);\n    this.interval = setInterval(() => this.checkAlarmClock(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.clock);\n    clearInterval(this.interval);\n  }\n\n  setCurrentTime() {\n    this.setState({\n      currentTime: new Date().toLocaleTimeString(\"en-US\", { hour12: false }),\n    });\n  }\n\n  setAlarmTime(event) {\n    event.preventDefault();\n    const inputAlarmTimeModified = event.target.value + \":00\";\n    this.setState({\n      alarmTime: inputAlarmTimeModified,\n    });\n  }\n\n  checkAlarmClock() {\n    if (this.state.alarmTime == \"undefined\" || !this.state.alarmTime) {\n      this.alarmMessage = \"If you want a reminder, you can set up time here:\";\n    } else {\n      this.alarmMessage = \"Your alarm is set for \" + this.state.alarmTime + \".\";\n      if (this.state.currentTime === this.state.alarmTime) {\n        this.setState({ submitting: true });\n        fetch(\"/api/messages\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(this.state.message),\n        })\n          .then((res) => res.json())\n          .then((data) => {\n            if (data.success) {\n              this.setState({\n                error: false,\n                submitting: false,\n                message: {\n                  body: \"\",\n                },\n              });\n            } else {\n              this.setState({\n                error: true,\n                submitting: false,\n              });\n            }\n          });\n        alert(this.state.message.body);\n      } else {\n        // console.log(\"Still have some time\");\n      }\n    }\n  }\n\n  render() {\n    const { tasks } = this.state;\n    const undone = tasks.filter((item) => item.is_completed !== true);\n    // console.log(\"undone\", undone);\n    // console.log(\"this.setState\", this.state.message);\n    // console.log(JSON.stringify(this.state.message));\n    const undoneList = undone.length ? (\n      undone.map((item) => {\n        return (\n          <div>\n            <li key={item.id}>{item.action_name}</li>\n          </div>\n        );\n      })\n    ) : (\n      <div>All done for today</div>\n    );\n    return (\n      <form\n        onSubmit={this.onSubmit}\n        className={this.state.error ? \"error sms-form\" : \"sms-form\"}\n      >\n        <div>\n          <h2>Current Time {this.state.currentTime}.</h2>\n          <p>{this.alarmMessage}</p>\n          <form>\n            <input type=\"time\" onChange={this.setAlarmTime}></input>\n          </form>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default SMSForm;\n","/home/minty/lighthouse/meowtivate/front-end/src/components/CatPlant.jsx",["166","167"],"import React, { useEffect} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles(theme => ({\n  pot: {\n    display: 'block',\n    width: '12vw',\n    position:'absolute',\n    bottom: '0px',\n    left: 'calc(50% - 6vw)',\n    zIndex: 2,\n  },\n  plant: {\n    opacity: 0,\n    width: '13vw',\n    position:'relative',\n    zIndex: 1,\n  },\n  plantContainer: {\n  position: 'relative',\n\n  },\n  animatedItem: {\n    animation: `$myEffect 1500ms ${theme.transitions.easing.easeInOut}`,\n\n  },\n\n  \"@keyframes myEffect\": {\n    '0%': {\n      transform: 'translateY(30%)',\n      opacity: 0,\n\n    },\n    '16%': {\n      transform: 'translateY(-3%)',\n      opacity: 1,\n\n    },\n    '28%': {\n      transform: 'translateY(5%)',\n\n    },\n    '44%': {\n      transform: 'translateY(-2%)'\n    },\n    '59%': {\n      transform: 'translateY(0%)'\n    },\n    '73%': {\n      transform: 'translateY(0%)'\n    },\n    '88%': {\n      transform: 'translateY(0%)'\n    },\n    '100%': {\n      transform: 'translateY(0%)'\n    }, \n  }\n}));\n\nexport default function CatPlant(props) {\n  const classes = useStyles();\n  const { actions } = props;\n  const [start, setStart] = React.useState(false);\n  let timer;\n\n  // Calculate percentage\n  const totalAmount = actions.length;\n  const totalCompleted = actions.filter(obj => obj.is_completed === true).length;\n  const initial = ( totalCompleted / totalAmount ) * 100;\n  const num = Math.floor(initial / 10) * 10;\n\n  // const [percentage, setPercentage] = useState(initial);\n  \n  useEffect(() => {\n    setStart(true);\n    timer = setTimeout(() => setStart(false), 1500);\n  }, [actions])\n\n  useEffect(() => {\n    return () => clearInterval(timer);\n  }, [start])\n\n  return (\n      <div className={classes.plantContainer}>\n        <img className={clsx(classes.plant,\n          {[classes.animatedItem]: start}\n        )} src={`https://meowtivate.s3-us-west-2.amazonaws.com/plants/${num}plant.png`} alt=\"plant\" style={{opacity: 1}}/>\n        <img className={classes.pot} src=\"https://meowtivate.s3-us-west-2.amazonaws.com/pots/01pot.png\" alt=\"pot\"/>\n      </div>\n);\n}","/home/minty/lighthouse/meowtivate/front-end/src/components/GalleryItem.js",[],"/home/minty/lighthouse/meowtivate/front-end/src/helpers/calculateChecked.js",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/Menu.jsx",["168","169"],"/home/minty/lighthouse/meowtivate/front-end/src/components/Progress.jsx",["170","171","172"],"/home/minty/lighthouse/meowtivate/front-end/src/components/UnlockBadge.jsx",["173","174","175"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport getCurrentDate from '../helpers/getCurrentDate';\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    maxHeight: \"20rem\",\n    position: \"absolute\",\n    top: \"calc(50% - 10rem)\",\n    left: \"calc(50% - 10rem)\",\n    zIndex: 100,\n  },\n  cat: {\n    height: \"15rem\",\n    position: \"absolute\",\n    top: \"calc(50% - 7rem)\",\n    left: \"calc(50% - 5rem)\",\n    zIndex: 101,\n  },\n  text: {\n    color: \"#a0cdca\",\n    fontFamily: \"Itim\",\n    fontSize: \"3.5em\",\n    position: \"absolute\",\n    top: \"calc(50% + 3rem)\",\n    left: \"calc(50% - 4.25em)\",\n    zIndex: 102,\n    WebkitTextStroke: 'darksalmon',\n    WebkitTextStrokeWidth: 'thin',\n  },\n  animatedItem: {\n    animation: `$myEffect 10000ms infinite linear`,\n\n  },\n  \"@keyframes myEffect\": {\n    '0%': {\n      transform: 'rotate(0deg)',\n    },\n    '100%': {\n      transform: 'rotate(360deg)',\n    }, \n  }\n}));\n\nexport default function UnlockBadge(props) {\n  const classes = useStyles();\n  const { state, catFunctions } = props;\n  const { actions, unlocked, allCats } = state;\n  const { addUnlocked } = catFunctions;\n  const [display, setDisplay] = useState({ display: \"none\" });\n  const [catID, setCatID] = useState(\"01\");\n\n  //click away hook\n  const [open, setOpen] = React.useState(false);\n\n  // Calculate percentage of actions done\n  const totalAmount = actions.length;\n  const totalCompleted = actions.filter((obj) => obj.is_completed === true)\n    .length;\n  const initial = (totalCompleted / totalAmount) * 100;\n  const percentage = Math.floor(initial / 10) * 10;\n\n  // Get current date\n  // let today = new Date();\n  // const dd = String(today.getDate()).padStart(2, \"0\");\n  // const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0\n  // const yyyy = today.getFullYear();\n  // today = `${yyyy}-${mm}-${dd}`;\n  // let today = new Date();\n  // const dd = String(today.getDate()).padStart(2, '0');\n  // const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0\n  // const yyyy = today.getFullYear();\n  // today = `${yyyy}-${mm}-${dd}`;\n  const today = getCurrentDate();\n\n  // console.log(\"date (unlocked)\", today)\n  // console.log(\"unlocked\", unlocked);\n\n  const currentUnlocked = unlocked.map((obj) => obj.date_unlocked.slice(0, 10));\n  const todayUnlockExists = currentUnlocked.includes(today);\n\n  //Decide whether to display badge\n  const decideDisplay = (percentage) => {\n    console.log(\"does unlock exist today?\", todayUnlockExists);\n\n    // If 100% complete and an unlock for today doesn't exist, unlock a cat\n    if (percentage === 100 && !todayUnlockExists) {\n      // Get locked cats IDs array\n      const unlockedCatsIDs = unlocked.map((obj) => obj.id);\n      const lockedCats = allCats.filter(\n        (obj) => !unlockedCatsIDs.includes(obj.id)\n      );\n      const lockedCatsIDs = lockedCats.map((obj) => obj.id);\n\n      // Randomly choose one from a range\n      const randomCatID =\n        lockedCatsIDs[Math.floor(Math.random() * lockedCatsIDs.length)];\n\n      // If cat_id is single digit, convert to string with 0 in front\n      if (randomCatID <= 9) {\n        setCatID(`0${randomCatID.toString()}`);\n      } else {\n        setCatID(randomCatID.toString());\n      }\n\n      setDisplay({ display: \"block\" });\n      setOpen(true);\n\n      // console.log(\"catID\", catID);\n      // console.log(\"display\", display);\n    }\n  };\n\n  // Run function to decide display\n  useEffect(() => {\n    // console.log(\"CURRENT PERCENTAGE IN USEEFFECT\", percentage);\n    if (percentage < 100) {\n      setDisplay({ display: \"none\" });\n    }\n    decideDisplay(percentage);\n  }, [actions]);\n\n  useEffect(() => {\n    // Call function to send POST req + change 'unlocked' state\n    // Takes in a cat_id and user_id\n    // console.log(\"display in useEffect\", display);\n    if (display.display === \"block\") {\n      addUnlocked(Number(catID), 1);\n    }\n  }, [display]);\n\n  const handleClickAway = () => {\n    setOpen(false);\n  };\n\n  return (\n    <ClickAwayListener onClickAway={handleClickAway}>\n      <div className={classes.display} style={display}>\n      {open ? (<>\n        <img \n          className={clsx(classes.root,classes.animatedItem)} \n          src='https://meowtivate.s3-us-west-2.amazonaws.com/unlock_badge.png' \n          alt='unlock_badge'/>\n        <img \n          className={classes.cat} \n          src={`https://meowtivate.s3-us-west-2.amazonaws.com/${catID}cat.png`}/>\n        <h2 className={classes.text}> CONGRATULATIONS!</h2>\n        </>) : null}\n      </div>\n    </ClickAwayListener>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/components/ActionList.jsx",["176","177"],"/home/minty/lighthouse/meowtivate/front-end/src/components/Popup.jsx",[],{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":39,"column":21,"nodeType":"184","messageId":"185","endLine":39,"endColumn":28},{"ruleId":"186","severity":1,"message":"187","line":66,"column":6,"nodeType":"188","endLine":66,"endColumn":13,"suggestions":"189"},{"ruleId":"182","severity":1,"message":"190","line":55,"column":11,"nodeType":"184","messageId":"185","endLine":55,"endColumn":16},{"ruleId":"182","severity":1,"message":"191","line":61,"column":9,"nodeType":"184","messageId":"185","endLine":61,"endColumn":14},{"ruleId":"182","severity":1,"message":"190","line":55,"column":11,"nodeType":"184","messageId":"185","endLine":55,"endColumn":16},{"ruleId":"182","severity":1,"message":"192","line":1,"column":27,"nodeType":"184","messageId":"185","endLine":1,"endColumn":36},{"ruleId":"182","severity":1,"message":"193","line":6,"column":8,"nodeType":"184","messageId":"185","endLine":6,"endColumn":12},{"ruleId":"182","severity":1,"message":"194","line":7,"column":8,"nodeType":"184","messageId":"185","endLine":7,"endColumn":19},{"ruleId":"182","severity":1,"message":"195","line":11,"column":10,"nodeType":"184","messageId":"185","endLine":11,"endColumn":17},{"ruleId":"182","severity":1,"message":"196","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"197","line":11,"column":8,"nodeType":"184","messageId":"185","endLine":11,"endColumn":15},{"ruleId":"182","severity":1,"message":"198","line":14,"column":8,"nodeType":"184","messageId":"185","endLine":14,"endColumn":22},{"ruleId":"182","severity":1,"message":"199","line":129,"column":11,"nodeType":"184","messageId":"185","endLine":129,"endColumn":19},{"ruleId":"186","severity":1,"message":"200","line":144,"column":6,"nodeType":"188","endLine":144,"endColumn":10,"suggestions":"201"},{"ruleId":"182","severity":1,"message":"192","line":1,"column":27,"nodeType":"184","messageId":"185","endLine":1,"endColumn":36},{"ruleId":"202","severity":1,"message":"203","line":68,"column":18,"nodeType":"204","endLine":72,"endColumn":34},{"ruleId":"186","severity":1,"message":"205","line":104,"column":6,"nodeType":"188","endLine":104,"endColumn":15,"suggestions":"206"},{"ruleId":"186","severity":1,"message":"207","line":121,"column":6,"nodeType":"188","endLine":121,"endColumn":16,"suggestions":"208"},{"ruleId":"182","severity":1,"message":"193","line":6,"column":8,"nodeType":"184","messageId":"185","endLine":6,"endColumn":12},{"ruleId":"182","severity":1,"message":"194","line":7,"column":8,"nodeType":"184","messageId":"185","endLine":7,"endColumn":19},{"ruleId":"182","severity":1,"message":"209","line":51,"column":49,"nodeType":"184","messageId":"185","endLine":51,"endColumn":53},{"ruleId":"182","severity":1,"message":"199","line":52,"column":35,"nodeType":"184","messageId":"185","endLine":52,"endColumn":43},{"ruleId":"182","severity":1,"message":"210","line":52,"column":45,"nodeType":"184","messageId":"185","endLine":52,"endColumn":52},{"ruleId":"182","severity":1,"message":"211","line":52,"column":54,"nodeType":"184","messageId":"185","endLine":52,"endColumn":62},{"ruleId":"182","severity":1,"message":"212","line":69,"column":9,"nodeType":"184","messageId":"185","endLine":69,"endColumn":21},{"ruleId":"182","severity":1,"message":"196","line":1,"column":28,"nodeType":"184","messageId":"185","endLine":1,"endColumn":36},{"ruleId":"182","severity":1,"message":"192","line":1,"column":38,"nodeType":"184","messageId":"185","endLine":1,"endColumn":47},{"ruleId":"213","severity":1,"message":"214","line":66,"column":30,"nodeType":"215","messageId":"216","endLine":66,"endColumn":32},{"ruleId":"182","severity":1,"message":"217","line":109,"column":11,"nodeType":"184","messageId":"185","endLine":109,"endColumn":21},{"ruleId":"186","severity":1,"message":"218","line":78,"column":13,"nodeType":"219","endLine":78,"endColumn":52},{"ruleId":"186","severity":1,"message":"220","line":83,"column":6,"nodeType":"188","endLine":83,"endColumn":13,"suggestions":"221"},{"ruleId":"182","severity":1,"message":"222","line":29,"column":10,"nodeType":"184","messageId":"185","endLine":29,"endColumn":18},{"ruleId":"182","severity":1,"message":"223","line":29,"column":20,"nodeType":"184","messageId":"185","endLine":29,"endColumn":31},{"ruleId":"182","severity":1,"message":"224","line":9,"column":5,"nodeType":"184","messageId":"185","endLine":9,"endColumn":20},{"ruleId":"182","severity":1,"message":"225","line":10,"column":5,"nodeType":"184","messageId":"185","endLine":10,"endColumn":16},{"ruleId":"182","severity":1,"message":"226","line":11,"column":5,"nodeType":"184","messageId":"185","endLine":11,"endColumn":19},{"ruleId":"186","severity":1,"message":"227","line":124,"column":6,"nodeType":"188","endLine":124,"endColumn":15,"suggestions":"228"},{"ruleId":"186","severity":1,"message":"229","line":133,"column":6,"nodeType":"188","endLine":133,"endColumn":15,"suggestions":"230"},{"ruleId":"231","severity":1,"message":"232","line":147,"column":9,"nodeType":"204","endLine":149,"endColumn":82},{"ruleId":"182","severity":1,"message":"233","line":12,"column":8,"nodeType":"184","messageId":"185","endLine":12,"endColumn":29},{"ruleId":"182","severity":1,"message":"234","line":26,"column":7,"nodeType":"184","messageId":"185","endLine":26,"endColumn":13},"no-native-reassign",["235"],"no-negated-in-lhs",["236"],"no-unused-vars","'account' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["237"],"'state' is assigned a value but never used.","'login' is assigned a value but never used.","'useEffect' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'Widgets' is defined but never used.","'useState' is defined but never used.","'SMSForm' is defined but never used.","'getCurrentDate' is defined but never used.","'unlocked' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setCoins'. Either include it or remove the dependency array.",["238"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'id', 'streaksArray', and 'todayArray'. Either include them or remove the dependency array.",["239"],"React Hook useEffect has missing dependencies: 'id' and 'streak1Add'. Either include them or remove the dependency array.",["240"],"'user' is assigned a value but never used.","'streaks' is assigned a value but never used.","'logDatas' is assigned a value but never used.","'undoneAmount' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'undoneList' is assigned a value but never used.","Assignments to the 'timer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has a missing dependency: 'timer'. Either include it or remove the dependency array.",["241"],"'anchorEl' is assigned a value but never used.","'setAnchorEl' is assigned a value but never used.","'completedAmount' is assigned a value but never used.","'totalAmount' is assigned a value but never used.","'currentStreaks' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'decideDisplay' and 'percentage'. Either include them or remove the dependency array.",["242"],"React Hook useEffect has missing dependencies: 'addUnlocked' and 'catID'. Either include them or remove the dependency array.",["243"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'UnfoldMoreRoundedIcon' is defined but never used.","'styles' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},"Update the dependencies array to be: [id, state]",{"range":"258","text":"259"},"Update the dependencies array to be: [id, setCoins]",{"range":"260","text":"261"},"Update the dependencies array to be: [account, id, streaksArray, todayArray]",{"range":"262","text":"263"},"Update the dependencies array to be: [id, streak1Add, unlocked]",{"range":"264","text":"265"},"Update the dependencies array to be: [start, timer]",{"range":"266","text":"267"},"Update the dependencies array to be: [actions, decideDisplay, percentage]",{"range":"268","text":"269"},"Update the dependencies array to be: [addUnlocked, catID, display]",{"range":"270","text":"271"},[1860,1867],"[id, state]",[3657,3661],"[id, setCoins]",[2690,2699],"[account, id, streaksArray, todayArray]",[3250,3260],"[id, streak1Add, unlocked]",[1714,1721],"[start, timer]",[3776,3785],"[actions, decideDisplay, percentage]",[4050,4059],"[addUnlocked, catID, display]"]