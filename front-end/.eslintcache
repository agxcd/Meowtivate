[{"/Users/ag/lighthouse/meowtivate/front-end/src/index.js":"1","/Users/ag/lighthouse/meowtivate/front-end/src/components/reportWebVitals.js":"2","/Users/ag/lighthouse/meowtivate/front-end/src/components/App.js":"3","/Users/ag/lighthouse/meowtivate/front-end/src/hooks/useApplicationData.js":"4","/Users/ag/lighthouse/meowtivate/front-end/src/components/404.jsx":"5","/Users/ag/lighthouse/meowtivate/front-end/src/pages/LoginPage.jsx":"6","/Users/ag/lighthouse/meowtivate/front-end/src/pages/DashboardPage.jsx":"7","/Users/ag/lighthouse/meowtivate/front-end/src/pages/WelcomePage.jsx":"8","/Users/ag/lighthouse/meowtivate/front-end/src/pages/CatsPage.jsx":"9","/Users/ag/lighthouse/meowtivate/front-end/src/pages/AccountPage.jsx":"10","/Users/ag/lighthouse/meowtivate/front-end/src/pages/ListsPage.jsx":"11","/Users/ag/lighthouse/meowtivate/front-end/src/components/Weather.js":"12","/Users/ag/lighthouse/meowtivate/front-end/src/components/Calendar-import.js":"13","/Users/ag/lighthouse/meowtivate/front-end/src/components/NavBar.jsx":"14","/Users/ag/lighthouse/meowtivate/front-end/src/components/GalleryContainer.jsx":"15","/Users/ag/lighthouse/meowtivate/front-end/src/components/ListsContainer.jsx":"16","/Users/ag/lighthouse/meowtivate/front-end/src/components/GalleryItem.js":"17","/Users/ag/lighthouse/meowtivate/front-end/src/components/Menu.jsx":"18","/Users/ag/lighthouse/meowtivate/front-end/src/components/ActionList.jsx":"19","/Users/ag/lighthouse/meowtivate/front-end/src/components/AddItemForm.jsx":"20","/Users/ag/lighthouse/meowtivate/front-end/src/components/Popup.jsx":"21","/Users/ag/lighthouse/meowtivate/front-end/src/components/Progress.jsx":"22","/Users/ag/lighthouse/meowtivate/front-end/src/pages/RegisterPage.jsx":"23","/Users/ag/lighthouse/meowtivate/front-end/src/components/CatPlant.jsx":"24","/Users/ag/lighthouse/meowtivate/front-end/src/helpers/stateHelpers.js":"25","/Users/ag/lighthouse/meowtivate/front-end/src/components/UnlockBadge.jsx":"26","/Users/ag/lighthouse/meowtivate/front-end/src/helpers/calculateChecked.js":"27"},{"size":540,"mtime":1611342275021,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1610857214451,"results":"30","hashOfConfig":"29"},{"size":2020,"mtime":1611282449640,"results":"31","hashOfConfig":"29"},{"size":4842,"mtime":1611343236659,"results":"32","hashOfConfig":"29"},{"size":228,"mtime":1611210454057,"results":"33","hashOfConfig":"29"},{"size":1278,"mtime":1611343084943,"results":"34","hashOfConfig":"29"},{"size":1788,"mtime":1611300420835,"results":"35","hashOfConfig":"29"},{"size":1411,"mtime":1611216833416,"results":"36","hashOfConfig":"29"},{"size":876,"mtime":1611292224149,"results":"37","hashOfConfig":"29"},{"size":2197,"mtime":1611303093273,"results":"38","hashOfConfig":"29"},{"size":556,"mtime":1611343236659,"results":"39","hashOfConfig":"29"},{"size":2143,"mtime":1611208835900,"results":"40","hashOfConfig":"29"},{"size":1094,"mtime":1611301457530,"results":"41","hashOfConfig":"29"},{"size":596,"mtime":1611281414278,"results":"42","hashOfConfig":"29"},{"size":808,"mtime":1611292141369,"results":"43","hashOfConfig":"29"},{"size":3105,"mtime":1611343236658,"results":"44","hashOfConfig":"29"},{"size":1164,"mtime":1611292098047,"results":"45","hashOfConfig":"29"},{"size":1408,"mtime":1611210454061,"results":"46","hashOfConfig":"29"},{"size":5222,"mtime":1611343084942,"results":"47","hashOfConfig":"29"},{"size":169,"mtime":1611118163873,"results":"48","hashOfConfig":"29"},{"size":3821,"mtime":1611343084943,"results":"49","hashOfConfig":"29"},{"size":948,"mtime":1611342353205,"results":"50","hashOfConfig":"29"},{"size":1519,"mtime":1611216833415,"results":"51","hashOfConfig":"29"},{"size":3269,"mtime":1611291374317,"results":"52","hashOfConfig":"29"},{"size":1611,"mtime":1611282449641,"results":"53","hashOfConfig":"29"},{"size":1316,"mtime":1611302706727,"results":"54","hashOfConfig":"29"},{"size":375,"mtime":1611343084943,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1523fzl",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ag/lighthouse/meowtivate/front-end/src/index.js",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/reportWebVitals.js",[],["121","122"],"/Users/ag/lighthouse/meowtivate/front-end/src/components/App.js",["123"],"/*\nApp.js is responsible for containing all the routes and passing state as props\n*/\n\nimport \"./styles/App.css\";\n\nimport \"@fontsource/itim\";\nimport \"@fontsource/varela-round\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n\n// Hooks\nimport useApplicationData from \"../hooks/useApplicationData\";\n\n// Pages imported from src/pages dir\nimport WelcomePage from \"../pages/WelcomePage\";\nimport LoginPage from \"../pages/LoginPage\";\nimport RegisterPage from \"../pages/RegisterPage\";\nimport DashboardPage from \"../pages/DashboardPage\";\nimport ListsPage from \"../pages/ListsPage\";\nimport CatsPage from \"../pages/CatsPage\";\nimport AccountPage from \"../pages/AccountPage\";\nimport NotFoundPage from \"./404\";\n\nfunction App() {\n  const { state, actionFunctions } = useApplicationData();\n\n  console.log(\"app.js is_completed\", state.account);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          {/* Define route paths and nest page components inside */}\n          <Route exact path=\"/\" component={WelcomePage}>\n            <WelcomePage state={state} />\n          </Route>\n          <Route exact path=\"/login\" component={LoginPage}>\n            <LoginPage state={state} />\n          </Route>\n          <Route exact path=\"/register\" component={RegisterPage}>\n            <RegisterPage state={state} />\n          </Route>\n          <Route exact path=\"/dashboard\" component={DashboardPage}>\n            <DashboardPage state={state} />\n          </Route>\n          <Route exact path=\"/lists\" component={ListsPage}>\n            <ListsPage state={state} actionFunctions={actionFunctions}/>\n          </Route>\n          <Route exact path=\"/cats\" component={CatsPage}>\n            <CatsPage state={state} />\n          </Route>\n          <Route exact path=\"/account\" component={AccountPage}>\n            <AccountPage state={state} />\n          </Route>\n          <Route exact path=\"*\" component={NotFoundPage} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\nexport default App;\n","/Users/ag/lighthouse/meowtivate/front-end/src/hooks/useApplicationData.js",["124","125"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  removeFromActions,\n  addToActions,\n  getActionProperty,\n  modifyActionWith,\n} from \"../helpers/stateHelpers\";\n\nexport default function useApplicationDate() {\n  const [state, setState] = useState({\n    unlocked: [],\n    todos: [],\n    habits: [],\n    actions: [],\n    allCats: [],\n    logDatas: [],\n    streaks: [],\n  });\n\n  useEffect(() => {\n    console.log(\"Current state:\", state)\n  }, [state])\n\n  // console.log(\"useApplicationDate correct is_completed state\", state);\n\n  const addAction = (action_name, categoryID) => {\n    console.log(\"action_name in useApp\", action_name);\n\n    if (categoryID === 1) {\n      // TODOS\n<<<<<<< HEAD\n      return axios.post(\"/api/todos/\", { action_name }).then((res) => {\n        const actions = addToActions(res.data, state); // res.data contains the action obj\n        const todos = actions.filter((obj) => obj.category_id === 1);\n=======\n      return axios.post(\"/api/todos/\", { action_name }).then(res => {\n        const actions = addToActions(res.data, state); // res.data contains the action obj\n        const todos = actions.filter(obj => obj.category_id === 1);\n>>>>>>> ddf0188910875b71ef6a72124ff939102a5f7d98\n\n        console.log(\"updatedActions\", actions);\n        // console.log(\"updatedHabits\", habits);\n        console.log(\"updatedTodos\", todos);\n\n        setState({\n          ...state,\n          actions,\n          todos,\n        });\n      });\n    } else if (categoryID === 2) {\n      // HABITS\n<<<<<<< HEAD\n      return axios.post(\"/api/habits/\", { action_name }).then((res) => {\n=======\n      return axios.post(\"/api/habits/\", { action_name }).then(res => {\n>>>>>>> ddf0188910875b71ef6a72124ff939102a5f7d98\n        const actions = addToActions(res.data, state);\n        const habits = actions.filter((obj) => obj.category_id === 2);\n\n        console.log(\"updatedActions\", actions);\n        console.log(\"updatedHabits\", habits);\n        // console.log(\"updatedTodos\", todos);\n\n        setState({\n          ...state,\n          actions,\n          habits,\n        });\n      });\n    }\n  };\n\n  const deleteAction = actionID => {\n    // Get updated actions\n    const actions = removeFromActions(actionID, state);\n    const habits = actions.filter((obj) => obj.category_id === 2);\n    const todos = actions.filter((obj) => obj.category_id === 1);\n\n    // Delete action in db and update state\n    return axios.delete(`/api/actions/${actionID}`).then(() => {\n      setState({\n        ...state,\n        todos,\n        habits,\n        actions,\n      });\n    });\n  };\n\n  const editActionName = (id, action_name) => {\n    // Get the action's current is_completed bool\n    const is_completed = getActionProperty(id, \"is_completed\", state);\n\n    // Pass to modifyActionWith function\n    const actions = modifyActionWith(action_name, \"action_name\", id, state);\n    const habits = actions.filter((obj) => obj.category_id === 2);\n    const todos = actions.filter((obj) => obj.category_id === 1);\n\n    console.log(\"updatedActions\", actions);\n    console.log(\"updatedHabits\", habits);\n    console.log(\"updatedTodos\", todos);\n\n    // Update action_name of action in db and update state\n    return axios\n      .put(`/api/actions/${id}`, { id, action_name, is_completed })\n      .then(() => {\n        setState({\n          ...state,\n          actions,\n          habits,\n          todos,\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  // Update state when checkboxes are clicked\n  const editCompletedState = (id, is_completed) => {\n    // Get the action's current action_name\n    const action_name = getActionProperty(id, \"action_name\", state);\n\n    // Pass to modifyActionWith function\n    const actions = modifyActionWith(is_completed, \"is_completed\", id, state);\n    const habits = actions.filter((obj) => obj.category_id === 2);\n    const todos = actions.filter((obj) => obj.category_id === 1);\n\n    console.log(\"updatedActions\", actions);\n    console.log(\"updatedHabits\", habits);\n    console.log(\"updatedTodos\", todos);\n\n    // Update is_completed of action in db and update state\n    return axios\n      .put(`/api/actions/${id}`, { id, action_name, is_completed })\n      .then(() => {\n        setState({\n          ...state,\n          actions,\n          habits,\n          todos,\n        });\n      });\n  };\n\n  const actionFunctions = {\n    addAction,\n    deleteAction,\n    editActionName,\n    editCompletedState\n  };\n\n  useEffect(() => {\n    Promise.all([\n      axios.get(\"/api/collections/1\"),\n      axios.get(\"/api/todos/1\"),\n      axios.get(\"/api/habits/1\"),\n      axios.get(\"/api/actions/1\"),\n      axios.get(\"/api/collections\"),\n      axios.get(\"/api/streaks/logdata/1\"),\n      axios.get(\"/api/streaks/1\"),\n    ])\n      .then(res => {\n        // console.log(\"res.data in useAppDate promise.all:\", res.data);\n\n        setState(prev => ({\n          ...prev,\n          unlocked: res[0].data,\n          todos: res[1].data,\n          habits: res[2].data,\n          actions: res[3].data,\n          allCats: res[4].data,\n          logDatas: res[5].data,\n          streaks: res[6].data,\n        }));\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }, []);\n\n  return { state, actionFunctions };\n}\n","/Users/ag/lighthouse/meowtivate/front-end/src/components/404.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/pages/LoginPage.jsx",["126"],"import TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: \"Varela Round\",\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  logo: {\n    fontFamily: \"itim\",\n    letterSpacing: \"8px\",\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n  },\n  button: {\n    fontFamily: \"Varela Round\",\n    textDecoration: \"none\",\n  },\n}));\n\nexport default function LoginPage(props) {\n  const classes = useStyles();\n  const { state } = props;\n\n  return (\n    <div className=\"Login\">\n      <h1 className={classes.header}>Meowtivate!</h1>\n      <h2 className={classes.header}>Login</h2>\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <div>\n        <TextField id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" />\n      </div>\n      <div>\n      <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" />\n      </div>\n      <Button \n        variant=\"contained\" \n        color=\"secondary\"\n        component={Link}\n        to='/lists'>\n      Login\n      </Button>\n    </form>\n    </div>\n  )\n};","/Users/ag/lighthouse/meowtivate/front-end/src/pages/DashboardPage.jsx",["127"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Weather } from \"../components/Weather\";\nimport { CalendarApp } from \"../components/Calendar-import\";\nimport NavBar from \"../components/NavBar\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { StarRateSharp } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: \"5vw\",\n    paddingRight: \"5vw\",\n    margin: \"auto\",\n  },\n}));\n\nexport default function DashboardPage(props) {\n  const { state } = props;\n  const classes = useStyles();\n  // console.log(\"dashboard\", state.logDatas);\n\n  return (\n    <div>\n      <NavBar />\n      <Grid container spacing={3} className={classes.root}>\n        <Grid item xs={4}>\n          <CalendarApp items={state.logDatas} />\n        </Grid>\n        <Grid item xs={4}>\n          <Card>\n            <CardContent>\n              <Grid item>\n                <Button component={Link} to=\"/lists\">\n                  My Lists\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button component={Link} to=\"/cats\">\n                  My Collection\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button component={Link} to=\"/account\">\n                  My Account\n                </Button>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={4}>\n          <Card>\n            <CardContent>\n              <Weather />\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/ag/lighthouse/meowtivate/front-end/src/pages/WelcomePage.jsx",["128"],"import axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: \"Varela Round\",\n  },\n  logo: {\n    fontFamily: \"itim\",\n    letterSpacing: \"8px\",\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n  },\n  button: {\n    fontFamily: \"Varela Round\",\n    textDecoration: \"none\",\n  },\n}));\n\nexport default function WelcomePage(props) {\n  let history = useHistory();\n\n  const login = () => {\n    axios.get(\"/api/login/1\").then((res) => {\n      console.log(res);\n      history.push(\"/dashboard\");\n    });\n  };\n  // const { state } = props;\n  const classes = useStyles();\n\n  return (\n    <div className=\"Welcome\">\n      <h2 className={classes.header}>Welcome to </h2>\n      <h1 className={classes.logo}>Meowtivate!</h1>\n      <div>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          component={Link}\n          to=\"/register\"\n        >\n          Sign Up\n        </Button>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"secondary\"\n          component={Link}\n          to=\"/login\"\n        >\n          Login\n        </Button>\n      </div>\n    </div>\n  );\n}\n","/Users/ag/lighthouse/meowtivate/front-end/src/pages/CatsPage.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/pages/AccountPage.jsx",["129"],"import React, { useState, useEffect } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport NavBar from \"../components/NavBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport SaveRoundedIcon from \"@material-ui/icons/SaveRounded\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n  },\n}));\n\nexport default function AccountPage(props) {\n  // const user = props.state.account[0];\n  // console.log(\"AccountPage\", user);\n  // const { username, email } = user;\n\n  const classes = useStyles();\n\n  // Toggle between VIEW and EDIT modes\n  const [isEditable, setIsEditable] = useState(false);\n  const modeToggle = () => setIsEditable(!isEditable);\n\n  return (\n    <div className={classes.root}>\n      <NavBar />\n      <header>\n        <h2 className={classes.header}>my Account</h2>\n      </header>\n      <Card>\n        <CardContent>\n          <h5>Username: Pawthos</h5>\n          <h5>Email: pawthos@gmail.com</h5>\n          <h5>Password: ********* </h5>\n        </CardContent>\n      </Card>\n      <IconButton onClick={modeToggle}>\n        <EditRoundedIcon />\n      </IconButton>\n      {isEditable && (\n        <div>\n          Hello\n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <div>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Username\"\n                variant=\"outlined\"\n              />\n            </div>\n            <div>\n              <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" />\n            </div>\n\n            <div>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Password\"\n                variant=\"outlined\"\n              />\n            </div>\n            <IconButton>\n              <SaveRoundedIcon onClick={modeToggle} />\n            </IconButton>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n}\n","/Users/ag/lighthouse/meowtivate/front-end/src/pages/ListsPage.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/Weather.js",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/Calendar-import.js",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/NavBar.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/GalleryContainer.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/ListsContainer.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/GalleryItem.js",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/Menu.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/ActionList.jsx",["130","131"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport DeleteRoundedIcon from \"@material-ui/icons/DeleteRounded\";\nimport UnfoldMoreRoundedIcon from \"@material-ui/icons/UnfoldMoreRounded\";\nimport SaveRoundedIcon from \"@material-ui/icons/SaveRounded\";\nimport Popup from \"./Popup\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    fontFamily: \"Varela Round\",\n  },\n}));\n\nexport default function ActionList(props) {\n  const { items, category, actionFunctions, initChecked } = props;\n  const { \n    deleteAction, \n    addAction, \n    editActionName, \n    editCompletedState } = actionFunctions; // State changing funcs from useApplicationData\n  const classes = useStyles();\n\n  console.log(\"checked in ActionList\", initChecked);\n\n  // Toggle between VIEW and EDIT modes\n  const [isEditable, setIsEditable] = useState(false);\n  const modeToggle = () => setIsEditable(!isEditable);\n\n  // Toggle checkbox\n  // checked is an array of numbers that represent checked actionIDs\n  const [checked, setChecked] = useState(initChecked);\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n    let is_completed = false;\n\n    if (currentIndex === -1) { // if value isn't in checked, add it\n      newChecked.push(value);\n      is_completed = true;\n    } else {\n      newChecked.splice(currentIndex, 1); // else remove from checked\n      is_completed = false;\n    }\n\n    setChecked(newChecked);\n    editCompletedState(value, is_completed); // Update state\n  };\n\n  // Popup state\n  const [popupState, setPopupState] = useState({\n    open: false,\n    type: \"\",\n    actionID: 0, // action_id for EDITING, otherwise 0 for ADDING\n    actionName: \"\",\n  });\n\n  // Popup functions\n  const handleClickOpen = (type, id, name) => {\n    setPopupState((prev) => ({\n      ...prev,\n      open: true,\n      type: type,\n      actionID: id,\n      actionName: name,\n    }));\n  };\n\n  const cancel = () => {\n    setPopupState((prev) => ({\n      ...prev,\n      open: false,\n    }));\n  };\n\n  const confirmDelete = (actionID) => {\n    deleteAction(actionID);\n    setPopupState((prev) => ({\n      ...prev,\n      open: false,\n    }));\n  };\n\n  const confirmAdd = (name, categoryID) => {\n    addAction(name, categoryID);\n    setPopupState((prev) => ({\n      ...prev,\n      open: false,\n    }));\n  };\n\n  const confirmEdit = (actionID, name) => {\n    editActionName(actionID, name);\n    setPopupState((prev) => ({\n      ...prev,\n      open: false,\n    }));\n  }\n\n  return (\n    <List className={classes.root}>\n      {items.map((obj) => {\n        const labelId = `checkbox-list-label-${obj.id}`;\n        return (\n          <ListItem\n            key={obj.id}\n            role={undefined}\n            dense\n            button\n            onClick={handleToggle(obj.id)}\n          >\n            <ListItemIcon>\n              <Checkbox\n                edge=\"start\"\n                checked={checked.indexOf(obj.id) !== -1}\n                tabIndex={-1}\n                disableRipple\n                inputProps={{ \"aria-labelledby\": labelId }}\n              />\n            </ListItemIcon>\n            <ListItemText id={labelId} primary={obj.action_name} />\n            {isEditable && (\n              <ListItemSecondaryAction>\n                <IconButton edge=\"end\" aria-label=\"drag\">\n                  <UnfoldMoreRoundedIcon />\n                </IconButton>\n                <IconButton edge=\"end\" aria-label=\"delete\">\n                  <DeleteRoundedIcon\n                    onClick={() =>\n                      handleClickOpen(\"Delete\", obj.id, obj.action_name)\n                    }\n                  />\n                </IconButton>\n                <IconButton edge=\"end\" aria-label=\"edit\">\n                  <EditRoundedIcon\n                    onClick={() =>\n                      handleClickOpen(\"Edit\", obj.id, obj.action_name)\n                    }\n                  />\n                </IconButton>\n              </ListItemSecondaryAction>\n            )}\n          </ListItem>\n        );\n      })}\n\n      {isEditable ? (\n        <>\n          <IconButton>\n            <AddCircleIcon onClick={() => handleClickOpen(\"Add\", 0, \"\")} />\n          </IconButton>\n          <IconButton onClick={modeToggle}>\n            <SaveRoundedIcon />\n          </IconButton>\n        </>\n      ) : (\n        <IconButton onClick={modeToggle}>\n          <EditRoundedIcon />\n        </IconButton>\n      )}\n\n      <Popup\n        cancel={cancel}\n        confirmDelete={confirmDelete}\n        confirmAdd={confirmAdd}\n        confirmEdit={confirmEdit}\n        popupState={popupState}\n        category={category}\n      />\n    </List>\n  );\n}\n","/Users/ag/lighthouse/meowtivate/front-end/src/components/AddItemForm.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/Popup.jsx",["132"],"import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nexport default function Popup(props) {\n  const { popupDelete, cancel, popupState, category } = props;\n  const { open, type, actionID, actionName } = popupState;\n  const listType = category === 1 ? \"to-do\" : \"habit\";\n\n  // Making form a controlled component\n  const [name, setName] = useState(actionName);\n\n  // Prevent stale props by re-rendering when actionName changes in parent\n  useEffect(() => {\n    setName(actionName)\n  }, [actionName])\n\n  console.log(\"actionName\", actionName);\n\n  return (\n    <div>\n      { type === \"Delete\" ? (\n              <Dialog\n              open={open}\n              onClose={cancel}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">{type} {listType}?</DialogTitle>\n              <DialogContent>\n                {/* <DialogContentText>\n                {actionID}\n                </DialogContentText> */}\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={() => popupDelete(actionID)} color=\"primary\">\n                  Confirm\n                </Button>\n                <Button onClick={cancel} color=\"primary\" autoFocus>\n                  Cancel\n                </Button>\n              </DialogActions>\n            </Dialog>\n      ) : (\n        <Dialog open={open} onClose={cancel} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">{type} a {listType}</DialogTitle>\n        <DialogContent>\n          {/* <DialogContentText>\n            {actionID}\n          </DialogContentText> */}\n          <form autoComplete=\"off\" onSubmit={(event) => event.preventDefault()}>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={(event) => setName(event.target.value)}\n              fullWidth\n            />\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={cancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={cancel} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n      )}\n    </div>\n  );\n}\n","/Users/ag/lighthouse/meowtivate/front-end/src/components/Progress.jsx",["133"],"/Users/ag/lighthouse/meowtivate/front-end/src/pages/RegisterPage.jsx",["134"],"import TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: \"Varela Round\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  logo: {\n    fontFamily: \"itim\",\n    letterSpacing: \"8px\",\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n  },\n  button: {\n    fontFamily: \"Varela Round\",\n    textDecoration: \"none\",\n  },\n}));\n\nexport default function RegisterPage(props) {\n  const classes = useStyles();\n  const { state } = props;\n\n  return (\n    <div className=\"Register\">\n      <h1 className={classes.header}>Meowtivate!</h1>\n      <h2 className={classes.header}>Register</h2>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" />\n        </div>\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" />\n        </div>\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" />\n        </div>\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" />\n        </div>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          component={Link}\n          to=\"/dashboard\"\n        >\n          Register\n        </Button>\n      </form>\n    </div>\n  );\n}\n","/Users/ag/lighthouse/meowtivate/front-end/src/components/CatPlant.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/helpers/stateHelpers.js",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/UnlockBadge.jsx",["135"],"import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  display: {\n    display: 'none',\n  },\n  root: {\n    flexGrow: 1,\n    maxHeight: '20rem',\n    position: 'absolute',\n    top: 'calc(50% - 10rem)',\n    left: 'calc(50% - 10rem)',\n    zIndex: 100,\n  },\n  cat: {\n    height: '15rem',\n    position: 'absolute',\n    top: 'calc(50% - 7rem)',\n    left: 'calc(50% - 5rem)',\n    zIndex: 101,\n  },\n  text: {\n    color: '#a0cdca',\n    fontFamily: 'Itim',\n    fontSize: '3.5em',\n    position: 'absolute',\n    top: 'calc(50% + 3rem)',\n    left: 'calc(50% - 4.25em)',\n    zIndex: 102,\n    WebkitTextStroke: 'darksalmon',\n    WebkitTextStrokeWidth: 'thin',\n  }\n}));\n\n\nexport default function UnlockBadge(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.display}>\n      <img className={classes.root} src='https://meowtivate.s3-us-west-2.amazonaws.com/unlock_badge.png' alt='unlock_badge'/>\n      {/* replace cat src with the props.image_url */}\n      <img className={classes.cat} src='https://meowtivate.s3-us-west-2.amazonaws.com/01cat.png'/>\n      {/* <img className={classes.cat} src='https://meowtivate.s3-us-west-2.amazonaws.com/02cat.png'/> */}\n      <h2 className={classes.text}> CONGRATULATIONS!</h2>\n    </div>\n  );\n}\n","/Users/ag/lighthouse/meowtivate/front-end/src/helpers/calculateChecked.js",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":9,"column":50,"nodeType":"142","messageId":"143","endLine":9,"endColumn":54},{"ruleId":"140","severity":1,"message":"144","line":1,"column":21,"nodeType":"142","messageId":"143","endLine":1,"endColumn":31},{"ruleId":"140","severity":1,"message":"145","line":108,"column":9,"nodeType":"142","messageId":"143","endLine":108,"endColumn":27},{"ruleId":"140","severity":1,"message":"146","line":29,"column":11,"nodeType":"142","messageId":"143","endLine":29,"endColumn":16},{"ruleId":"140","severity":1,"message":"147","line":11,"column":10,"nodeType":"142","messageId":"143","endLine":11,"endColumn":23},{"ruleId":"140","severity":1,"message":"148","line":28,"column":9,"nodeType":"142","messageId":"143","endLine":28,"endColumn":14},{"ruleId":"140","severity":1,"message":"149","line":1,"column":27,"nodeType":"142","messageId":"143","endLine":1,"endColumn":36},{"ruleId":"140","severity":1,"message":"149","line":1,"column":27,"nodeType":"142","messageId":"143","endLine":1,"endColumn":36},{"ruleId":"140","severity":1,"message":"150","line":16,"column":8,"nodeType":"142","messageId":"143","endLine":16,"endColumn":26},{"ruleId":"140","severity":1,"message":"151","line":8,"column":8,"nodeType":"142","messageId":"143","endLine":8,"endColumn":25},{"ruleId":"140","severity":1,"message":"152","line":5,"column":29,"nodeType":"142","messageId":"143","endLine":5,"endColumn":37},{"ruleId":"140","severity":1,"message":"146","line":29,"column":11,"nodeType":"142","messageId":"143","endLine":29,"endColumn":16},{"ruleId":"153","severity":1,"message":"154","line":44,"column":7,"nodeType":"155","endLine":44,"endColumn":99},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useReducer' is defined but never used.","'editCompletedState' is assigned a value but never used.","'state' is assigned a value but never used.","'StarRateSharp' is defined but never used.","'login' is assigned a value but never used.","'useEffect' is defined but never used.","'useApplicationData' is defined but never used.","'DialogContentText' is defined but never used.","'logDatas' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]