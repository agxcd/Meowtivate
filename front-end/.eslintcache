[{"/home/minty/lighthouse/meowtivate/front-end/src/index.js":"1","/home/minty/lighthouse/meowtivate/front-end/src/components/App.js":"2","/home/minty/lighthouse/meowtivate/front-end/src/components/reportWebVitals.js":"3","/home/minty/lighthouse/meowtivate/front-end/src/components/Weather.js":"4","/home/minty/lighthouse/meowtivate/front-end/src/components/Calendar-import.js":"5","/home/minty/lighthouse/meowtivate/front-end/src/components/404.jsx":"6","/home/minty/lighthouse/meowtivate/front-end/src/pages/LoginPage.jsx":"7","/home/minty/lighthouse/meowtivate/front-end/src/pages/WelcomePage.jsx":"8","/home/minty/lighthouse/meowtivate/front-end/src/pages/RegisterPage.jsx":"9","/home/minty/lighthouse/meowtivate/front-end/src/hooks/useApplicationData.js":"10","/home/minty/lighthouse/meowtivate/front-end/src/pages/DashboardPage.jsx":"11","/home/minty/lighthouse/meowtivate/front-end/src/pages/AccountPage.jsx":"12","/home/minty/lighthouse/meowtivate/front-end/src/pages/ListsPage.jsx":"13","/home/minty/lighthouse/meowtivate/front-end/src/pages/CatsPage.jsx":"14","/home/minty/lighthouse/meowtivate/front-end/src/helpers/stateHelpers.js":"15","/home/minty/lighthouse/meowtivate/front-end/src/components/NavBar.jsx":"16","/home/minty/lighthouse/meowtivate/front-end/src/components/GalleryContainer.jsx":"17","/home/minty/lighthouse/meowtivate/front-end/src/components/ListsContainer.jsx":"18","/home/minty/lighthouse/meowtivate/front-end/src/components/GalleryItem.js":"19","/home/minty/lighthouse/meowtivate/front-end/src/components/Menu.jsx":"20","/home/minty/lighthouse/meowtivate/front-end/src/components/Progress.jsx":"21","/home/minty/lighthouse/meowtivate/front-end/src/components/UnlockBadge.jsx":"22","/home/minty/lighthouse/meowtivate/front-end/src/components/ActionList.jsx":"23","/home/minty/lighthouse/meowtivate/front-end/src/components/CatPlant.jsx":"24","/home/minty/lighthouse/meowtivate/front-end/src/components/Popup.jsx":"25","/home/minty/lighthouse/meowtivate/front-end/src/helpers/calculateChecked.js":"26"},{"size":540,"mtime":1611350970383,"results":"27","hashOfConfig":"28"},{"size":2020,"mtime":1611364666858,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1610847643437,"results":"30","hashOfConfig":"28"},{"size":2416,"mtime":1611350970363,"results":"31","hashOfConfig":"28"},{"size":857,"mtime":1611364666858,"results":"32","hashOfConfig":"28"},{"size":228,"mtime":1611350970315,"results":"33","hashOfConfig":"28"},{"size":1278,"mtime":1611350970399,"results":"34","hashOfConfig":"28"},{"size":1411,"mtime":1611350970399,"results":"35","hashOfConfig":"28"},{"size":1519,"mtime":1611350970399,"results":"36","hashOfConfig":"28"},{"size":4716,"mtime":1611364666858,"results":"37","hashOfConfig":"28"},{"size":1664,"mtime":1611364666858,"results":"38","hashOfConfig":"28"},{"size":2180,"mtime":1611364666858,"results":"39","hashOfConfig":"28"},{"size":385,"mtime":1611364666858,"results":"40","hashOfConfig":"28"},{"size":732,"mtime":1611364666858,"results":"41","hashOfConfig":"28"},{"size":1611,"mtime":1611350970363,"results":"42","hashOfConfig":"28"},{"size":596,"mtime":1611350970363,"results":"43","hashOfConfig":"28"},{"size":796,"mtime":1611364666858,"results":"44","hashOfConfig":"28"},{"size":2989,"mtime":1611388479657,"results":"45","hashOfConfig":"28"},{"size":1210,"mtime":1611364666858,"results":"46","hashOfConfig":"28"},{"size":1408,"mtime":1611350970355,"results":"47","hashOfConfig":"28"},{"size":1457,"mtime":1611364666858,"results":"48","hashOfConfig":"28"},{"size":2230,"mtime":1611364811946,"results":"49","hashOfConfig":"28"},{"size":5192,"mtime":1611364666858,"results":"50","hashOfConfig":"28"},{"size":2126,"mtime":1611391263991,"results":"51","hashOfConfig":"28"},{"size":3821,"mtime":1611350970363,"results":"52","hashOfConfig":"28"},{"size":375,"mtime":1611350970363,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"v3sst6",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/home/minty/lighthouse/meowtivate/front-end/src/index.js",[],["116","117"],"/home/minty/lighthouse/meowtivate/front-end/src/components/App.js",["118"],"/*\nApp.js is responsible for containing all the routes and passing state as props\n*/\n\nimport \"./styles/App.css\";\n\nimport \"@fontsource/itim\";\nimport \"@fontsource/varela-round\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n\n// Hooks\nimport useApplicationData from \"../hooks/useApplicationData\";\n\n// Pages imported from src/pages dir\nimport WelcomePage from \"../pages/WelcomePage\";\nimport LoginPage from \"../pages/LoginPage\";\nimport RegisterPage from \"../pages/RegisterPage\";\nimport DashboardPage from \"../pages/DashboardPage\";\nimport ListsPage from \"../pages/ListsPage\";\nimport CatsPage from \"../pages/CatsPage\";\nimport AccountPage from \"../pages/AccountPage\";\nimport NotFoundPage from \"./404\";\n\nfunction App() {\n  const { state, actionFunctions } = useApplicationData();\n\n  console.log(\"app.js is_completed\", state.account);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          {/* Define route paths and nest page components inside */}\n          <Route exact path=\"/\" component={WelcomePage}>\n            <WelcomePage state={state} />\n          </Route>\n          <Route exact path=\"/login\" component={LoginPage}>\n            <LoginPage state={state} />\n          </Route>\n          <Route exact path=\"/register\" component={RegisterPage}>\n            <RegisterPage state={state} />\n          </Route>\n          <Route exact path=\"/dashboard\" component={DashboardPage}>\n            <DashboardPage state={state} />\n          </Route>\n          <Route exact path=\"/lists\" component={ListsPage}>\n            <ListsPage state={state} actionFunctions={actionFunctions}/>\n          </Route>\n          <Route exact path=\"/cats\" component={CatsPage}>\n            <CatsPage state={state} />\n          </Route>\n          <Route exact path=\"/account\" component={AccountPage}>\n            <AccountPage state={state} />\n          </Route>\n          <Route exact path=\"*\" component={NotFoundPage} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\nexport default App;\n","/home/minty/lighthouse/meowtivate/front-end/src/components/reportWebVitals.js",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/Weather.js",["119","120"],"import React from \"react\";\nimport { useState } from \"react\";\nimport \"./styles/weather.css\";\n\nconst api = {\n  key: process.env.REACT_APP_WEATHER_API_KEY,\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\n// api.openweathermap.org/data/2.5/\n// weather?lat={lat}&lon={lon}&appid={API key}\n\nexport const Weather = () => {\n  const [city, setCity] = useState(\"\");\n  const [weather, setWeather] = useState(\"\");\n\n  const search = (event) => {\n    if (event.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${city}&units=metric&APPID=${api.key}`)\n        .then((res) => res.json())\n        .then((result) => {\n          setWeather(result);\n          console.log(result);\n        });\n    }\n  };\n\n  return (\n    <div\n      className={\n        typeof weather.main != \"undefined\"\n          ? weather.weather[0].main.includes(\"Cloud\")\n            ? \"weather cloudy\"\n            : \"weather\"\n          : \"weather\"\n      }\n    >\n      <section className=\"weather\">\n        <div className=\"weather-search-box\">\n          <input\n            type=\"text\"\n            className=\"city-search-bar\"\n            placeholder=\"City...\"\n            onChange={(e) => setCity(e.target.value)}\n            value={city}\n            onKeyPress={search}\n          />\n        </div>\n        {typeof weather.main != \"undefined\" ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location\">\n                {weather.name}, {weather.sys.country}\n              </div>\n            </div>\n            <div className=\"temp\">{Math.round(weather.main.temp)}&deg;c</div>\n            <div className=\"weather\">{weather.weather[0].main}</div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </section>\n    </div>\n  );\n};\n","/home/minty/lighthouse/meowtivate/front-end/src/components/Calendar-import.js",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/404.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/pages/LoginPage.jsx",["121"],"import TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: \"Varela Round\",\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  logo: {\n    fontFamily: \"itim\",\n    letterSpacing: \"8px\",\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n  },\n  button: {\n    fontFamily: \"Varela Round\",\n    textDecoration: \"none\",\n  },\n}));\n\nexport default function LoginPage(props) {\n  const classes = useStyles();\n  const { state } = props;\n\n  return (\n    <div className=\"Login\">\n      <h1 className={classes.header}>Meowtivate!</h1>\n      <h2 className={classes.header}>Login</h2>\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <div>\n        <TextField id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" />\n      </div>\n      <div>\n      <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" />\n      </div>\n      <Button \n        variant=\"contained\" \n        color=\"secondary\"\n        component={Link}\n        to='/lists'>\n      Login\n      </Button>\n    </form>\n    </div>\n  )\n};","/home/minty/lighthouse/meowtivate/front-end/src/pages/WelcomePage.jsx",["122"],"import axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: \"Varela Round\",\n  },\n  logo: {\n    fontFamily: \"itim\",\n    letterSpacing: \"8px\",\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n  },\n  button: {\n    fontFamily: \"Varela Round\",\n    textDecoration: \"none\",\n  },\n}));\n\nexport default function WelcomePage(props) {\n  let history = useHistory();\n\n  const login = () => {\n    axios.get(\"/api/login/1\").then((res) => {\n      console.log(res);\n      history.push(\"/dashboard\");\n    });\n  };\n  // const { state } = props;\n  const classes = useStyles();\n\n  return (\n    <div className=\"Welcome\">\n      <h2 className={classes.header}>Welcome to </h2>\n      <h1 className={classes.logo}>Meowtivate!</h1>\n      <div>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          component={Link}\n          to=\"/dashboard\"\n        >\n          Sign Up\n        </Button>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"secondary\"\n          component={Link}\n          to=\"/login\">\n          Login\n        </Button>\n      </div>\n    </div>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/pages/RegisterPage.jsx",["123"],"import TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: \"Varela Round\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  logo: {\n    fontFamily: \"itim\",\n    letterSpacing: \"8px\",\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n  },\n  button: {\n    fontFamily: \"Varela Round\",\n    textDecoration: \"none\",\n  },\n}));\n\nexport default function RegisterPage(props) {\n  const classes = useStyles();\n  const { state } = props;\n\n  return (\n    <div className=\"Register\">\n      <h1 className={classes.header}>Meowtivate!</h1>\n      <h2 className={classes.header}>Register</h2>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" />\n        </div>\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" />\n        </div>\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" />\n        </div>\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" />\n        </div>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          component={Link}\n          to=\"/dashboard\"\n        >\n          Register\n        </Button>\n      </form>\n    </div>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/hooks/useApplicationData.js",["124"],"import { useEffect, useReducer, useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function useApplicationDate() {\n  const [state, setState] = useState({\n    collections: [],\n    todos: [],\n    habits: [],\n  });\n\n  useEffect(() => {\n    Promise.all([\n      axios.get(\"/api/collections/1\"),\n      axios.get(\"/api/todos/1\"),\n      axios.get(\"/api/habits/1\"),\n    ])\n      .then((res) => {\n        console.log(\"res.data in cats collection:\", res.data);\n        setState((prev) => ({\n          ...prev,\n          collections: res[0].data,\n          todos: res[1].data,\n          habits: res[2].data,\n        }));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return { state };\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/pages/DashboardPage.jsx",["125"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Weather } from \"../components/Weather\";\nimport { CalendarApp } from \"../components/Calendar-import\";\nimport NavBar from '../components/NavBar';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: '5vw',\n    paddingRight: '5vw',\n    margin: 'auto',\n  },\n}));\n\nexport default function DashboardPage(props) {\n  const { state } = props;\n  const classes = useStyles();\n\n  return (\n    <div>\n      <NavBar />\n      <Grid container spacing={3} className={classes.root}>\n        <Grid item xs={4}>\n          <CalendarApp />\n        </Grid>\n        <Grid item xs={4}>\n          <Card>\n            <CardContent>\n              <Grid item>\n                <Button component={Link} to=\"/lists\">\n                  My Lists\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button component={Link} to=\"/cats\">\n                  My Collection\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button component={Link} to=\"/account\">\n                  My Account\n                </Button>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={4}>\n          <Card>\n            <CardContent>\n              <Weather />\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}","/home/minty/lighthouse/meowtivate/front-end/src/pages/AccountPage.jsx",["126"],"import React, { useState, useEffect } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport NavBar from \"../components/NavBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport SaveRoundedIcon from \"@material-ui/icons/SaveRounded\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n  },\n}));\n\nexport default function AccountPage(props) {\n  const user = props.state.account[0];\n  console.log(\"AccountPage\", user);\n  const { username, email } = user;\n\n  const classes = useStyles();\n\n  // Toggle between VIEW and EDIT modes\n  const [isEditable, setIsEditable] = useState(false);\n  const modeToggle = () => setIsEditable(!isEditable);\n\n  return (\n    <div className={classes.root}>\n      <NavBar/>\n      <header>\n        <h2 className={classes.header}>my Account</h2>\n      </header>\n      <Card>\n        <CardContent>\n          <h5>Username: {username}</h5>\n          <h5>Email: {email}</h5>\n          <h5>Password: ********* </h5>\n        </CardContent>\n      </Card>\n      <IconButton onClick={modeToggle}>\n        <EditRoundedIcon />\n      </IconButton>\n      {isEditable && (\n        <div>\n          Hello\n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <div>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Username\"\n                variant=\"outlined\"\n              />\n            </div>\n            <div>\n              <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" />\n            </div>\n\n            <div>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Password\"\n                variant=\"outlined\"\n              />\n            </div>\n            <IconButton>\n              <SaveRoundedIcon onClick={modeToggle} />\n            </IconButton>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/pages/ListsPage.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/pages/CatsPage.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/helpers/stateHelpers.js",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/NavBar.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/GalleryContainer.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/ListsContainer.jsx",["127"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ActionList from \"./ActionList\";\nimport CatPlant from './CatPlant'\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Progress from \"./Progress\";\nimport UnlockBadge from \"./UnlockBadge\";\nimport calculateChecked from \"../helpers/calculateChecked\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    minWidth: '10vw',\n    minHeight: '25vh',\n    paddingLeft: '5vw',\n    paddingRight: '5vw',\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"8px\",\n  },\n  plantbox: {\n    position:'static',\n    zIndex: 1,\n    minWidth: '10vw',\n    minHeight: '40vh',\n    paddingLeft: '5vw',\n    paddingRight: '5vw',\n  },\n  lists: {\n    minWidth: '10vw',\n    minHeight: '50vh',\n  }\n\n}));\n\nexport default function ListContainer(props) {\n  const { state, actionFunctions } = props;\n  const { actions, todos, habits, unlocked } = state;\n  const classes = useStyles();\n\n  console.log(\"habits in ListsContainer\", habits);\n\n  const completed = actions.filter(obj => obj.is_completed === true);\n  const checkedHabits = completed.filter(obj => obj.category_id === 2);\n  const checkedTodos = completed.filter(obj => obj.category_id === 1);\n  const habitIDs = calculateChecked(checkedHabits);\n  const todoIDs = calculateChecked(checkedTodos);\n\n  console.log(\"completed\", completed)\n  console.log(\"checkedHabits\", checkedHabits);\n  console.log(\"checkedTodos\", checkedTodos);\n  \n  return (\n    <>\n    <UnlockBadge state={state}/>\n    <div className={classes.root}>\n      <h2 className={classes.header}>LET'S GET LOTS DONE TODAY</h2>\n      <Grid container spacing={4}>\n        <Grid item xs={4}>\n          <Card className={classes.lists}>\n            <CardContent>\n              <h3>Daily Habits</h3>\n              <ActionList \n                items={habits} \n                category={2} \n                actionFunctions={actionFunctions}\n                initChecked={habitIDs} />\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={4}>\n          <Card className={classes.lists}>\n            <CardContent>\n              <h3>To-Do Today</h3>\n              <ActionList \n                items={todos} \n                category={1} \n                actionFunctions={actionFunctions}\n                initChecked={todoIDs} />\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={4}>\n          <Card>\n            <CardContent>\n              {/* <div>\n              </div> */}\n              <div className={classes.plantbox}>\n                <h3>Today's Progress</h3>\n                <CatPlant actions={actions} />\n              </div>\n            </CardContent>\n          </Card>\n        </Grid>\n      <Progress\n        todos={todos}\n        habits={habits}\n        actions={actions}\n        />\n        </Grid>\n    </div>\n    </>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/components/GalleryItem.js",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/Menu.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/Progress.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/UnlockBadge.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/ActionList.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/CatPlant.jsx",["128","129","130"],"/home/minty/lighthouse/meowtivate/front-end/src/components/Popup.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/helpers/calculateChecked.js",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":9,"column":50,"nodeType":"137","messageId":"138","endLine":9,"endColumn":54},{"ruleId":"135","severity":1,"message":"139","line":2,"column":31,"nodeType":"137","messageId":"138","endLine":2,"endColumn":40},{"ruleId":"140","severity":1,"message":"141","line":68,"column":18,"nodeType":"142","endLine":72,"endColumn":34},{"ruleId":"135","severity":1,"message":"143","line":29,"column":11,"nodeType":"137","messageId":"138","endLine":29,"endColumn":16},{"ruleId":"135","severity":1,"message":"144","line":28,"column":9,"nodeType":"137","messageId":"138","endLine":28,"endColumn":14},{"ruleId":"135","severity":1,"message":"143","line":29,"column":11,"nodeType":"137","messageId":"138","endLine":29,"endColumn":16},{"ruleId":"135","severity":1,"message":"145","line":1,"column":21,"nodeType":"137","messageId":"138","endLine":1,"endColumn":31},{"ruleId":"135","severity":1,"message":"143","line":21,"column":11,"nodeType":"137","messageId":"138","endLine":21,"endColumn":16},{"ruleId":"135","severity":1,"message":"146","line":1,"column":27,"nodeType":"137","messageId":"138","endLine":1,"endColumn":36},{"ruleId":"135","severity":1,"message":"147","line":41,"column":35,"nodeType":"137","messageId":"138","endLine":41,"endColumn":43},{"ruleId":"135","severity":1,"message":"148","line":1,"column":16,"nodeType":"137","messageId":"138","endLine":1,"endColumn":24},{"ruleId":"149","severity":1,"message":"150","line":78,"column":13,"nodeType":"151","endLine":78,"endColumn":52},{"ruleId":"149","severity":1,"message":"152","line":83,"column":6,"nodeType":"153","endLine":83,"endColumn":13,"suggestions":"154"},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'className' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'state' is assigned a value but never used.","'login' is assigned a value but never used.","'useReducer' is defined but never used.","'useEffect' is defined but never used.","'unlocked' is assigned a value but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'timer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has a missing dependency: 'timer'. Either include it or remove the dependency array.","ArrayExpression",["157"],"no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},"Update the dependencies array to be: [start, timer]",{"range":"160","text":"161"},[1723,1730],"[start, timer]"]
