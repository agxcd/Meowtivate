[{"/Users/ag/lighthouse/meowtivate/front-end/src/index.js":"1","/Users/ag/lighthouse/meowtivate/front-end/src/components/reportWebVitals.js":"2","/Users/ag/lighthouse/meowtivate/front-end/src/components/App.js":"3","/Users/ag/lighthouse/meowtivate/front-end/src/hooks/useApplicationData.js":"4","/Users/ag/lighthouse/meowtivate/front-end/src/components/404.jsx":"5","/Users/ag/lighthouse/meowtivate/front-end/src/pages/LoginPage.jsx":"6","/Users/ag/lighthouse/meowtivate/front-end/src/pages/DashboardPage.jsx":"7","/Users/ag/lighthouse/meowtivate/front-end/src/pages/WelcomePage.jsx":"8","/Users/ag/lighthouse/meowtivate/front-end/src/pages/CatsPage.jsx":"9","/Users/ag/lighthouse/meowtivate/front-end/src/pages/AccountPage.jsx":"10","/Users/ag/lighthouse/meowtivate/front-end/src/pages/ListsPage.jsx":"11","/Users/ag/lighthouse/meowtivate/front-end/src/components/Weather.js":"12","/Users/ag/lighthouse/meowtivate/front-end/src/components/Calendar-import.js":"13","/Users/ag/lighthouse/meowtivate/front-end/src/components/NavBar.jsx":"14","/Users/ag/lighthouse/meowtivate/front-end/src/components/GalleryContainer.jsx":"15","/Users/ag/lighthouse/meowtivate/front-end/src/components/ListsContainer.jsx":"16","/Users/ag/lighthouse/meowtivate/front-end/src/components/GalleryItem.js":"17","/Users/ag/lighthouse/meowtivate/front-end/src/components/Menu.jsx":"18","/Users/ag/lighthouse/meowtivate/front-end/src/components/ActionList.jsx":"19","/Users/ag/lighthouse/meowtivate/front-end/src/components/AddItemForm.jsx":"20","/Users/ag/lighthouse/meowtivate/front-end/src/components/Popup.jsx":"21","/Users/ag/lighthouse/meowtivate/front-end/src/components/Progress.jsx":"22","/Users/ag/lighthouse/meowtivate/front-end/src/pages/RegisterPage.jsx":"23","/Users/ag/lighthouse/meowtivate/front-end/src/components/CatPlant.jsx":"24","/Users/ag/lighthouse/meowtivate/front-end/src/helpers/stateHelpers.js":"25","/Users/ag/lighthouse/meowtivate/front-end/src/components/UnlockBadge.jsx":"26"},{"size":540,"mtime":1611016983531,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1610857214451,"results":"29","hashOfConfig":"28"},{"size":2020,"mtime":1611282449640,"results":"30","hashOfConfig":"28"},{"size":4738,"mtime":1611303022015,"results":"31","hashOfConfig":"28"},{"size":228,"mtime":1611210454057,"results":"32","hashOfConfig":"28"},{"size":1250,"mtime":1611210454065,"results":"33","hashOfConfig":"28"},{"size":1788,"mtime":1611300420835,"results":"34","hashOfConfig":"28"},{"size":1411,"mtime":1611216833416,"results":"35","hashOfConfig":"28"},{"size":876,"mtime":1611292224149,"results":"36","hashOfConfig":"28"},{"size":2197,"mtime":1611303093273,"results":"37","hashOfConfig":"28"},{"size":519,"mtime":1611301898561,"results":"38","hashOfConfig":"28"},{"size":2143,"mtime":1611208835900,"results":"39","hashOfConfig":"28"},{"size":1094,"mtime":1611301457530,"results":"40","hashOfConfig":"28"},{"size":596,"mtime":1611281414278,"results":"41","hashOfConfig":"28"},{"size":808,"mtime":1611292141369,"results":"42","hashOfConfig":"28"},{"size":2419,"mtime":1611303573321,"results":"43","hashOfConfig":"28"},{"size":1164,"mtime":1611292098047,"results":"44","hashOfConfig":"28"},{"size":1408,"mtime":1611210454061,"results":"45","hashOfConfig":"28"},{"size":5155,"mtime":1611282449639,"results":"46","hashOfConfig":"28"},{"size":169,"mtime":1611118163873,"results":"47","hashOfConfig":"28"},{"size":3667,"mtime":1611282449640,"results":"48","hashOfConfig":"28"},{"size":948,"mtime":1611303759580,"results":"49","hashOfConfig":"28"},{"size":1519,"mtime":1611216833415,"results":"50","hashOfConfig":"28"},{"size":3269,"mtime":1611291374317,"results":"51","hashOfConfig":"28"},{"size":1611,"mtime":1611282449641,"results":"52","hashOfConfig":"28"},{"size":1316,"mtime":1611302706727,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1523fzl",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ag/lighthouse/meowtivate/front-end/src/index.js",[],["110","111"],"/Users/ag/lighthouse/meowtivate/front-end/src/components/reportWebVitals.js",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/App.js",["112"],"/Users/ag/lighthouse/meowtivate/front-end/src/hooks/useApplicationData.js",["113","114"],"/Users/ag/lighthouse/meowtivate/front-end/src/components/404.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/pages/LoginPage.jsx",["115"],"import TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: \"Varela Round\",\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  logo: {\n    fontFamily: \"itim\",\n    letterSpacing: \"8px\",\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n  },\n  button: {\n    fontFamily: \"Varela Round\",\n    textDecoration: \"none\",\n  },\n}));\n\nexport default function LoginPage(props) {\n  const classes = useStyles();\n  const { state } = props;\n\n  return (\n    <div className=\"Login\">\n      <h1 className={classes.header}>Meowtivate!</h1>\n      <h2 className={classes.header}>Login</h2>\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <div>\n        <TextField id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" />\n      </div>\n      <div>\n      <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" />\n      </div>\n      <Button \n        variant=\"contained\" \n        color=\"secondary\"\n        component={Link}\n        to='/lists'>\n      Login\n      </Button>\n    </form>\n    </div>\n  )\n};","/Users/ag/lighthouse/meowtivate/front-end/src/pages/DashboardPage.jsx",["116"],"/Users/ag/lighthouse/meowtivate/front-end/src/pages/WelcomePage.jsx",["117"],"/Users/ag/lighthouse/meowtivate/front-end/src/pages/CatsPage.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/pages/AccountPage.jsx",["118"],"/Users/ag/lighthouse/meowtivate/front-end/src/pages/ListsPage.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/Weather.js",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/Calendar-import.js",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/NavBar.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/GalleryContainer.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/ListsContainer.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/GalleryItem.js",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/Menu.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/ActionList.jsx",["119"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport DeleteRoundedIcon from \"@material-ui/icons/DeleteRounded\";\nimport UnfoldMoreRoundedIcon from \"@material-ui/icons/UnfoldMoreRounded\";\nimport SaveRoundedIcon from \"@material-ui/icons/SaveRounded\";\nimport Popup from \"./Popup\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport useApplicationData from \"../hooks/useApplicationData\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: \"10vw\",\n    paddingRight: \"10vw\",\n  },\n  item: {\n    fontFamily: \"Varela Round\",\n  },\n}));\n\nexport default function ActionList(props) {\n  const { deleteAction } = useApplicationData();\n  const { items, category } = props;\n  const classes = useStyles();\n\n  // Toggle between VIEW and EDIT modes\n  const [isEditable, setIsEditable] = useState(false);\n  const modeToggle = () => setIsEditable(!isEditable);\n\n  // Toggle checkbox\n  // checked is an array of numbers that represent checked actionIDs\n  const [checked, setChecked] = useState([]);\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      // check if value is in checked\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1); // remove from checked\n    }\n\n    setChecked(newChecked);\n  };\n\n  console.log(\"checked\", checked);\n  // Logging value of checked whenever it's updated\n  // useEffect(() => {\n  //   console.log(\"what's checked:\", checked);\n  // }, [checked])\n\n  // Popup state\n  const [popupState, setPopupState] = useState({\n    open: false,\n    type: \"\",\n    actionID: 0, // action_id for EDITING, otherwise 0 for ADDING\n    actionName: \"\",\n  });\n\n  const handleClickOpen = (type, id, name) => {\n    setPopupState((prev) => ({\n      ...prev,\n      open: true,\n      type: type,\n      actionID: id,\n      actionName: name,\n    }));\n  };\n\n  const popupDelete = (actionID) => {\n    deleteAction(actionID);\n    setPopupState((prev) => ({\n      ...prev,\n      open: false,\n    }));\n  };\n\n  const cancel = () => {\n    setPopupState((prev) => ({\n      ...prev,\n      open: false,\n    }));\n  };\n\n  return (\n    <List className={classes.root}>\n      {items.map((obj) => {\n        const labelId = `checkbox-list-label-${obj.id}`;\n        return (\n          <ListItem\n            key={obj.id}\n            role={undefined}\n            dense\n            button\n            onClick={handleToggle(obj.id)}\n          >\n            <ListItemIcon>\n              <Checkbox\n                edge=\"start\"\n                checked={checked.indexOf(obj.id) !== -1}\n                tabIndex={-1}\n                disableRipple\n                inputProps={{ \"aria-labelledby\": labelId }}\n              />\n            </ListItemIcon>\n            <ListItemText id={labelId} primary={obj.action_name} />\n            {isEditable && (\n              <ListItemSecondaryAction>\n                <IconButton edge=\"end\" aria-label=\"drag\">\n                  <UnfoldMoreRoundedIcon />\n                </IconButton>\n                <IconButton edge=\"end\" aria-label=\"delete\">\n                  <DeleteRoundedIcon\n                    onClick={() =>\n                      handleClickOpen(\"Delete\", obj.id, obj.action_name)\n                    }\n                  />\n                </IconButton>\n                <IconButton edge=\"end\" aria-label=\"edit\">\n                  <EditRoundedIcon\n                    onClick={() =>\n                      handleClickOpen(\"Edit\", obj.id, obj.action_name)\n                    }\n                  />\n                </IconButton>\n              </ListItemSecondaryAction>\n            )}\n          </ListItem>\n        );\n      })}\n\n      {isEditable ? (\n        <>\n          <IconButton>\n            <AddCircleIcon onClick={() => handleClickOpen(\"Add\", 0, \"\")} />\n          </IconButton>\n          <IconButton onClick={modeToggle}>\n            <SaveRoundedIcon />\n          </IconButton>\n        </>\n      ) : (\n        <IconButton onClick={modeToggle}>\n          <EditRoundedIcon />\n        </IconButton>\n      )}\n\n      <Popup\n        cancel={cancel}\n        popupDelete={popupDelete}\n        popupState={popupState}\n        category={category}\n      />\n    </List>\n  );\n}\n","/Users/ag/lighthouse/meowtivate/front-end/src/components/AddItemForm.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/Popup.jsx",["120"],"import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nexport default function Popup(props) {\n  const { popupDelete, cancel, popupState, category } = props;\n  const { open, type, actionID, actionName } = popupState;\n  const listType = category === 1 ? \"to-do\" : \"habit\";\n\n  // Making form a controlled component\n  const [name, setName] = useState(actionName);\n\n  // Prevent stale props by re-rendering when actionName changes in parent\n  useEffect(() => {\n    setName(actionName)\n  }, [actionName])\n\n  console.log(\"actionName\", actionName);\n\n  return (\n    <div>\n      { type === \"Delete\" ? (\n              <Dialog\n              open={open}\n              onClose={cancel}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">{type} {listType}?</DialogTitle>\n              <DialogContent>\n                {/* <DialogContentText>\n                {actionID}\n                </DialogContentText> */}\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={() => popupDelete(actionID)} color=\"primary\">\n                  Confirm\n                </Button>\n                <Button onClick={cancel} color=\"primary\" autoFocus>\n                  Cancel\n                </Button>\n              </DialogActions>\n            </Dialog>\n      ) : (\n        <Dialog open={open} onClose={cancel} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">{type} a {listType}</DialogTitle>\n        <DialogContent>\n          {/* <DialogContentText>\n            {actionID}\n          </DialogContentText> */}\n          <form autoComplete=\"off\" onSubmit={(event) => event.preventDefault()}>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={(event) => setName(event.target.value)}\n              fullWidth\n            />\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={cancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={cancel} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n      )}\n    </div>\n  );\n}\n","/Users/ag/lighthouse/meowtivate/front-end/src/components/Progress.jsx",["121"],"/Users/ag/lighthouse/meowtivate/front-end/src/pages/RegisterPage.jsx",["122"],"/Users/ag/lighthouse/meowtivate/front-end/src/components/CatPlant.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/helpers/stateHelpers.js",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/UnlockBadge.jsx",["123"],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":9,"column":50,"nodeType":"130","messageId":"131","endLine":9,"endColumn":54},{"ruleId":"128","severity":1,"message":"132","line":1,"column":21,"nodeType":"130","messageId":"131","endLine":1,"endColumn":31},{"ruleId":"128","severity":1,"message":"133","line":108,"column":9,"nodeType":"130","messageId":"131","endLine":108,"endColumn":27},{"ruleId":"128","severity":1,"message":"134","line":29,"column":11,"nodeType":"130","messageId":"131","endLine":29,"endColumn":16},{"ruleId":"128","severity":1,"message":"135","line":11,"column":10,"nodeType":"130","messageId":"131","endLine":11,"endColumn":23},{"ruleId":"128","severity":1,"message":"136","line":28,"column":9,"nodeType":"130","messageId":"131","endLine":28,"endColumn":14},{"ruleId":"128","severity":1,"message":"137","line":1,"column":27,"nodeType":"130","messageId":"131","endLine":1,"endColumn":36},{"ruleId":"128","severity":1,"message":"137","line":1,"column":27,"nodeType":"130","messageId":"131","endLine":1,"endColumn":36},{"ruleId":"128","severity":1,"message":"138","line":8,"column":8,"nodeType":"130","messageId":"131","endLine":8,"endColumn":25},{"ruleId":"128","severity":1,"message":"139","line":5,"column":29,"nodeType":"130","messageId":"131","endLine":5,"endColumn":37},{"ruleId":"128","severity":1,"message":"134","line":29,"column":11,"nodeType":"130","messageId":"131","endLine":29,"endColumn":16},{"ruleId":"140","severity":1,"message":"141","line":44,"column":7,"nodeType":"142","endLine":44,"endColumn":99},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useReducer' is defined but never used.","'editCompletedState' is assigned a value but never used.","'state' is assigned a value but never used.","'StarRateSharp' is defined but never used.","'login' is assigned a value but never used.","'useEffect' is defined but never used.","'DialogContentText' is defined but never used.","'logDatas' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]