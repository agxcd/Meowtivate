[{"/Users/ag/lighthouse/meowtivate/front-end/src/index.js":"1","/Users/ag/lighthouse/meowtivate/front-end/src/components/App.js":"2","/Users/ag/lighthouse/meowtivate/front-end/src/components/SMSForm.js":"3","/Users/ag/lighthouse/meowtivate/front-end/src/hooks/useApplicationData.js":"4","/Users/ag/lighthouse/meowtivate/front-end/src/components/404.jsx":"5","/Users/ag/lighthouse/meowtivate/front-end/src/pages/LoginPage.jsx":"6","/Users/ag/lighthouse/meowtivate/front-end/src/pages/RegisterPage.jsx":"7","/Users/ag/lighthouse/meowtivate/front-end/src/pages/WelcomePage.jsx":"8","/Users/ag/lighthouse/meowtivate/front-end/src/pages/AccountPage.jsx":"9","/Users/ag/lighthouse/meowtivate/front-end/src/pages/ListsPage.jsx":"10","/Users/ag/lighthouse/meowtivate/front-end/src/pages/DashboardPage.jsx":"11","/Users/ag/lighthouse/meowtivate/front-end/src/pages/CatsPage.jsx":"12","/Users/ag/lighthouse/meowtivate/front-end/src/helpers/stateHelpers.js":"13","/Users/ag/lighthouse/meowtivate/front-end/src/components/Calendar-import.js":"14","/Users/ag/lighthouse/meowtivate/front-end/src/components/Weather.js":"15","/Users/ag/lighthouse/meowtivate/front-end/src/components/NavBar.jsx":"16","/Users/ag/lighthouse/meowtivate/front-end/src/components/ListsContainer.jsx":"17","/Users/ag/lighthouse/meowtivate/front-end/src/components/GalleryContainer.jsx":"18","/Users/ag/lighthouse/meowtivate/front-end/src/helpers/calculateChecked.js":"19","/Users/ag/lighthouse/meowtivate/front-end/src/components/GalleryItem.js":"20","/Users/ag/lighthouse/meowtivate/front-end/src/components/Menu.jsx":"21","/Users/ag/lighthouse/meowtivate/front-end/src/components/UnlockBadge.jsx":"22","/Users/ag/lighthouse/meowtivate/front-end/src/components/ActionList.jsx":"23","/Users/ag/lighthouse/meowtivate/front-end/src/components/CatPlant.jsx":"24","/Users/ag/lighthouse/meowtivate/front-end/src/components/Progress.jsx":"25","/Users/ag/lighthouse/meowtivate/front-end/src/components/Popup.jsx":"26"},{"size":248,"mtime":1611450602246,"results":"27","hashOfConfig":"28"},{"size":2465,"mtime":1611468274562,"results":"29","hashOfConfig":"28"},{"size":3309,"mtime":1611475045670,"results":"30","hashOfConfig":"28"},{"size":6333,"mtime":1611463770539,"results":"31","hashOfConfig":"28"},{"size":228,"mtime":1611210454057,"results":"32","hashOfConfig":"28"},{"size":1278,"mtime":1611343084943,"results":"33","hashOfConfig":"28"},{"size":1519,"mtime":1611216833415,"results":"34","hashOfConfig":"28"},{"size":1411,"mtime":1611450408690,"results":"35","hashOfConfig":"28"},{"size":2243,"mtime":1611345639937,"results":"36","hashOfConfig":"28"},{"size":461,"mtime":1611453462373,"results":"37","hashOfConfig":"28"},{"size":1794,"mtime":1611453390391,"results":"38","hashOfConfig":"28"},{"size":876,"mtime":1611292224149,"results":"39","hashOfConfig":"28"},{"size":3367,"mtime":1611463974551,"results":"40","hashOfConfig":"28"},{"size":1145,"mtime":1611358260446,"results":"41","hashOfConfig":"28"},{"size":2416,"mtime":1611351086010,"results":"42","hashOfConfig":"28"},{"size":596,"mtime":1611281414278,"results":"43","hashOfConfig":"28"},{"size":5015,"mtime":1611475683065,"results":"44","hashOfConfig":"28"},{"size":808,"mtime":1611292141369,"results":"45","hashOfConfig":"28"},{"size":375,"mtime":1611343084943,"results":"46","hashOfConfig":"28"},{"size":1164,"mtime":1611292098047,"results":"47","hashOfConfig":"28"},{"size":1408,"mtime":1611210454061,"results":"48","hashOfConfig":"28"},{"size":3899,"mtime":1611452520915,"results":"49","hashOfConfig":"28"},{"size":5317,"mtime":1611425999723,"results":"50","hashOfConfig":"28"},{"size":2126,"mtime":1611434789306,"results":"51","hashOfConfig":"28"},{"size":569,"mtime":1611347181298,"results":"52","hashOfConfig":"28"},{"size":3821,"mtime":1611343084943,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1523fzl",{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"56"},"/Users/ag/lighthouse/meowtivate/front-end/src/index.js",[],["118","119"],"/Users/ag/lighthouse/meowtivate/front-end/src/components/App.js",["120","121"],"/*\nApp.js is responsible for containing all the routes and passing state as props\n*/\n\nimport \"./styles/App.css\";\n\nimport \"@fontsource/itim\";\nimport \"@fontsource/varela-round\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n\n// Hooks\nimport useApplicationData from \"../hooks/useApplicationData\";\n// import useAuth from \"../hooks/useAuth\";\n\n// Pages imported from src/pages dir\nimport WelcomePage from \"../pages/WelcomePage\";\nimport LoginPage from \"../pages/LoginPage\";\nimport RegisterPage from \"../pages/RegisterPage\";\nimport DashboardPage from \"../pages/DashboardPage\";\nimport ListsPage from \"../pages/ListsPage\";\nimport CatsPage from \"../pages/CatsPage\";\nimport AccountPage from \"../pages/AccountPage\";\nimport NotFoundPage from \"./404\";\nimport SMSForm from \"./SMSForm\";\n\n// react-notification\nimport ReactNotification from \"react-notifications-component\";\nimport \"react-notifications-component/dist/theme.css\";\nimport { store } from \"react-notifications-component\";\n\nfunction App() {\n  const { state, actionFunctions, catFunctions } = useApplicationData();\n  // const { user } = useAuth();\n  console.log(\"app.js is_completed\");\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          {/* Define route paths and nest page components inside */}\n          <Route exact path=\"/\" component={WelcomePage}>\n            <WelcomePage state={state} />\n          </Route>\n          <Route exact path=\"/login\" component={LoginPage}>\n            <LoginPage state={state} />\n          </Route>\n          <Route exact path=\"/register\" component={RegisterPage}>\n            <RegisterPage state={state} />\n          </Route>\n          <Route exact path=\"/dashboard\" component={DashboardPage}>\n            <DashboardPage state={state} />\n            <SMSForm />\n          </Route>\n          <Route exact path=\"/lists\" component={ListsPage}>\n            <ReactNotification />\n\n            <ListsPage\n              state={state}\n              actionFunctions={actionFunctions}\n              catFunctions={catFunctions}\n            />\n          </Route>\n          <Route exact path=\"/cats\" component={CatsPage}>\n            <CatsPage state={state} />\n          </Route>\n          <Route exact path=\"/account\" component={AccountPage}>\n            <AccountPage state={state} />\n          </Route>\n          <Route exact path=\"*\" component={NotFoundPage} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\nexport default App;\n","/Users/ag/lighthouse/meowtivate/front-end/src/components/SMSForm.js",["122","123","124"],"/Users/ag/lighthouse/meowtivate/front-end/src/hooks/useApplicationData.js",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/404.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/pages/LoginPage.jsx",["125"],"import TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: \"Varela Round\",\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  logo: {\n    fontFamily: \"itim\",\n    letterSpacing: \"8px\",\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n  },\n  button: {\n    fontFamily: \"Varela Round\",\n    textDecoration: \"none\",\n  },\n}));\n\nexport default function LoginPage(props) {\n  const classes = useStyles();\n  const { state } = props;\n\n  return (\n    <div className=\"Login\">\n      <h1 className={classes.header}>Meowtivate!</h1>\n      <h2 className={classes.header}>Login</h2>\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <div>\n        <TextField id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" value=\"Pawthos\" />\n      </div>\n      <div>\n      <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" value=\"****\"/>\n      </div>\n      <Button \n        variant=\"contained\" \n        color=\"secondary\"\n        component={Link}\n        to='/lists'>\n      Login\n      </Button>\n    </form>\n    </div>\n  )\n};","/Users/ag/lighthouse/meowtivate/front-end/src/pages/RegisterPage.jsx",["126"],"import TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: \"Varela Round\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  logo: {\n    fontFamily: \"itim\",\n    letterSpacing: \"8px\",\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n  },\n  button: {\n    fontFamily: \"Varela Round\",\n    textDecoration: \"none\",\n  },\n}));\n\nexport default function RegisterPage(props) {\n  const classes = useStyles();\n  const { state } = props;\n\n  return (\n    <div className=\"Register\">\n      <h1 className={classes.header}>Meowtivate!</h1>\n      <h2 className={classes.header}>Register</h2>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" />\n        </div>\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" />\n        </div>\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" />\n        </div>\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" />\n        </div>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          component={Link}\n          to=\"/dashboard\"\n        >\n          Register\n        </Button>\n      </form>\n    </div>\n  );\n}\n","/Users/ag/lighthouse/meowtivate/front-end/src/pages/WelcomePage.jsx",["127"],"import axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: \"Varela Round\",\n  },\n  logo: {\n    fontFamily: \"itim\",\n    letterSpacing: \"8px\",\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n  },\n  button: {\n    fontFamily: \"Varela Round\",\n    textDecoration: \"none\",\n  },\n}));\n\nexport default function WelcomePage(props) {\n  let history = useHistory();\n\n  const login = () => {\n    axios.get(\"/api/login/1\").then((res) => {\n      console.log(res);\n      history.push(\"/dashboard\");\n    });\n  };\n  // const { state } = props;\n  const classes = useStyles();\n\n  return (\n    <div className=\"Welcome\">\n      <h2 className={classes.header}>Welcome to </h2>\n      <h1 className={classes.logo}>Meowtivate!</h1>\n      <div>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          component={Link}\n          to=\"/register\"\n        >\n          Sign Up\n        </Button>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"secondary\"\n          component={Link}\n          to=\"/login\"\n        >\n          Login\n        </Button>\n      </div>\n    </div>\n  );\n}\n","/Users/ag/lighthouse/meowtivate/front-end/src/pages/AccountPage.jsx",["128"],"import React, { useState, useEffect } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport NavBar from \"../components/NavBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport SaveRoundedIcon from \"@material-ui/icons/SaveRounded\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n  },\n}));\n\nexport default function AccountPage(props) {\n  // const user = props.state.account[0];\n  // console.log(\"AccountPage\", user);\n  // const { username, email } = user;\n\n  const classes = useStyles();\n\n  // Toggle between VIEW and EDIT modes\n  const [isEditable, setIsEditable] = useState(false);\n  const modeToggle = () => setIsEditable(!isEditable);\n\n  return (\n    <div className={classes.root}>\n      <NavBar />\n      <header>\n        <h2 className={classes.header}>my Account</h2>\n      </header>\n      <Card>\n        {props && (\n          <CardContent>\n            <h5>Username: Pawthos</h5>\n            <h5>Email: pawthos@gmail.com</h5>\n            <h5>Password: ********* </h5>{\" \"}\n          </CardContent>\n        )}\n      </Card>\n      <IconButton onClick={modeToggle}>\n        <EditRoundedIcon />\n      </IconButton>\n      {isEditable && (\n        <div>\n          Hello\n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <div>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Username\"\n                variant=\"outlined\"\n              />\n            </div>\n            <div>\n              <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" />\n            </div>\n\n            <div>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Password\"\n                variant=\"outlined\"\n              />\n            </div>\n            <IconButton>\n              <SaveRoundedIcon onClick={modeToggle} />\n            </IconButton>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n}\n","/Users/ag/lighthouse/meowtivate/front-end/src/pages/ListsPage.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/pages/DashboardPage.jsx",["129","130"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Weather } from \"../components/Weather\";\nimport { CalendarApp } from \"../components/Calendar-import\";\nimport NavBar from \"../components/NavBar\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { StarRateSharp } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: \"5vw\",\n    paddingRight: \"5vw\",\n    margin: \"auto\",\n  },\n}));\n\nexport default function DashboardPage(props) {\n  const { state, user } = props;\n  const classes = useStyles();\n  // console.log(\"dashboard\", state.logDatas);\n\n  return (\n    <div>\n      <NavBar />\n      <Grid container spacing={3} className={classes.root}>\n        <Grid item xs={4}>\n          <CalendarApp items={state.logDatas} />\n        </Grid>\n        <Grid item xs={4}>\n          <Card>\n            <CardContent>\n              <Grid item>\n                <Button component={Link} to=\"/lists\">\n                  My Lists\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button component={Link} to=\"/cats\">\n                  My Collection\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button component={Link} to=\"/account\">\n                  My Account\n                </Button>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={4}>\n          <Card>\n            <CardContent>\n              <Weather />\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/ag/lighthouse/meowtivate/front-end/src/pages/CatsPage.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/helpers/stateHelpers.js",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/Calendar-import.js",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/Weather.js",["131","132"],"import React from \"react\";\nimport { useState, useEffect, className } from \"react\";\nimport \"./styles/weather.css\";\n\nconst api = {\n  key: process.env.REACT_APP_WEATHER_API_KEY,\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\n// api.openweathermap.org/data/2.5/\n// weather?lat={lat}&lon={lon}&appid={API key}\n\nexport const Weather = () => {\n  // const [city, setCity] = useState(\"\");\n  const [weather, setWeather] = useState(\"\");\n\n  // const search = (event) => {\n  //   if (event.key === \"Enter\") {\n  //     fetch(`${api.base}weather?q=${city}&units=metric&APPID=${api.key}`)\n  //       .then((res) => res.json())\n  //       .then((result) => {\n  //         setWeather(result);\n  //         console.log(result);\n  //       });\n  //   }\n  // };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      fetch(`${api.base}weather?lat=${position.coords.latitude}&lon=${position.coords.longitude}&units=metric&appid=${api.key}`)\n      .then((res) => res.json())\n      .then((result) => {\n        setWeather(result);\n        console.log(result);\n      });\n    });\n  }, [])\n  return (\n    <div\n      className={\n        typeof weather.main != \"undefined\"\n          ? weather.weather[0].main.includes(\"Cloud\")\n            ? \"weather Clouds\"\n            : \"weather\"\n          : \"weather\"\n      }\n    >\n      <section className=\"weather\">\n        {/* <div className=\"weather-search-box\">\n          <input\n            type=\"text\"\n            className=\"city-search-bar\"\n            placeholder=\"City...\"\n            onChange={(e) => setCity(e.target.value)}\n            value={city}\n            onKeyPress={search}\n          />\n        </div> */}\n        {typeof weather.main != \"undefined\" ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location\">\n                {weather.name}, {weather.sys.country}\n              </div>\n            </div>\n            <div className=\"temp\">{Math.round(weather.main.temp)}&deg;c</div>\n            <div className=\"weather\">{weather.weather[0].main}</div>\n            <div><img \n            className={weather.weather[0].main} \n            style={{display: 'block'}} \n            src={`https://meowtivate.s3-us-west-2.amazonaws.com/${weather.weather[0].main}.png`} \n            alt=\"weather-image\"/>\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </section>\n    </div>\n  );\n};\n","/Users/ag/lighthouse/meowtivate/front-end/src/components/NavBar.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/ListsContainer.jsx",["133","134","135","136","137","138","139"],"/Users/ag/lighthouse/meowtivate/front-end/src/components/GalleryContainer.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/helpers/calculateChecked.js",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/GalleryItem.js",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/Menu.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/UnlockBadge.jsx",["140","141","142"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  // display: {\n  //   display: 'block',\n  // },\n  root: {\n    flexGrow: 1,\n    maxHeight: \"20rem\",\n    position: \"absolute\",\n    top: \"calc(50% - 10rem)\",\n    left: \"calc(50% - 10rem)\",\n    zIndex: 100,\n  },\n  cat: {\n    height: \"15rem\",\n    position: \"absolute\",\n    top: \"calc(50% - 7rem)\",\n    left: \"calc(50% - 5rem)\",\n    zIndex: 101,\n  },\n  text: {\n    color: \"#a0cdca\",\n    fontFamily: \"Itim\",\n    fontSize: \"3.5em\",\n    position: \"absolute\",\n    top: \"calc(50% + 3rem)\",\n    left: \"calc(50% - 4.25em)\",\n    zIndex: 102,\n    WebkitTextStroke: \"darksalmon\",\n    WebkitTextStrokeWidth: \"thin\",\n  },\n}));\n\nexport default function UnlockBadge(props) {\n  const classes = useStyles();\n  const { state, catFunctions } = props;\n  const { actions, unlocked, allCats } = state;\n  const { addUnlocked } = catFunctions;\n  const [display, setDisplay] = useState({ display: \"none\" });\n  const [catID, setCatID] = useState(\"01\");\n\n  // Calculate percentage of actions done\n  const totalAmount = actions.length;\n  const totalCompleted = actions.filter((obj) => obj.is_completed === true)\n    .length;\n  const initial = (totalCompleted / totalAmount) * 100;\n  const percentage = Math.floor(initial / 10) * 10;\n\n  // Get current date\n  let today = new Date();\n  const dd = String(today.getDate()).padStart(2, \"0\");\n  const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0\n  const yyyy = today.getFullYear();\n  today = `${yyyy}-${mm}-${dd}`;\n\n  // console.log(\"date (unlocked)\", today)\n  // console.log(\"unlocked\", unlocked);\n\n  const currentUnlocked = unlocked.map((obj) => obj.date_unlocked.slice(0, 10));\n  const todayUnlockExists = currentUnlocked.includes(today);\n\n  //Decide whether to display badge\n  const decideDisplay = (percentage) => {\n    console.log(\"does unlock exist today?\", todayUnlockExists);\n\n    // If 100% complete and an unlock for today doesn't exist, unlock a cat\n    if (percentage === 100 && !todayUnlockExists) {\n      // Get locked cats IDs array\n      const unlockedCatsIDs = unlocked.map((obj) => obj.id);\n      const lockedCats = allCats.filter(\n        (obj) => !unlockedCatsIDs.includes(obj.id)\n      );\n      const lockedCatsIDs = lockedCats.map((obj) => obj.id);\n\n      // Randomly choose one from a range\n      const randomCatID =\n        lockedCatsIDs[Math.floor(Math.random() * lockedCatsIDs.length)];\n\n      // If cat_id is single digit, convert to string with 0 in front\n      if (randomCatID <= 9) {\n        setCatID(`0${randomCatID.toString()}`);\n      } else {\n        setCatID(randomCatID.toString());\n      }\n\n      setDisplay({ display: \"block\" });\n\n      // console.log(\"catID\", catID);\n      // console.log(\"display\", display);\n    }\n  };\n\n  // Run function to decide display\n  useEffect(() => {\n    // console.log(\"CURRENT PERCENTAGE IN USEEFFECT\", percentage);\n    if (percentage < 100) {\n      setDisplay({ display: \"none\" });\n    }\n    decideDisplay(percentage);\n  }, [actions]);\n\n  useEffect(() => {\n    // Call function to send POST req + change 'unlocked' state\n    // Takes in a cat_id and user_id\n    // console.log(\"display in useEffect\", display);\n    if (display.display === \"block\") {\n      addUnlocked(Number(catID), 1);\n    }\n  }, [display]);\n\n  return (\n    <div className={classes.display} style={display}>\n      <img\n        className={classes.root}\n        src=\"https://meowtivate.s3-us-west-2.amazonaws.com/unlock_badge.png\"\n        alt=\"unlock_badge\"\n      />\n      <img\n        className={classes.cat}\n        src={`https://meowtivate.s3-us-west-2.amazonaws.com/${catID}cat.png`}\n      />\n      {/* <img className={classes.cat} src='https://meowtivate.s3-us-west-2.amazonaws.com/02cat.]'/> */}\n      <h2 className={classes.text}> CONGRATULATIONS!</h2>\n    </div>\n  );\n}\n","/Users/ag/lighthouse/meowtivate/front-end/src/components/ActionList.jsx",["143"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport DeleteRoundedIcon from \"@material-ui/icons/DeleteRounded\";\nimport UnfoldMoreRoundedIcon from \"@material-ui/icons/UnfoldMoreRounded\";\nimport SaveRoundedIcon from \"@material-ui/icons/SaveRounded\";\nimport Popup from \"./Popup\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    fontFamily: \"Varela Round\",\n  },\n}));\n\nexport default function ActionList(props) {\n  const { items, category, actionFunctions, initChecked } = props;\n  const {\n    deleteAction,\n    addAction,\n    editActionName,\n    editCompletedState,\n  } = actionFunctions; // State changing funcs from useApplicationData\n  const classes = useStyles();\n\n  console.log(\"checked in ActionList\", initChecked);\n\n  // Toggle between VIEW and EDIT modes\n  const [isEditable, setIsEditable] = useState(false);\n  const modeToggle = () => setIsEditable(!isEditable);\n\n  // Toggle checkbox\n  // checked is an array of numbers that represent checked actionIDs\n  const [checked, setChecked] = useState(initChecked);\n\n  const handleToggle = (value, evt) => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      // if value isn't in checked, add it\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1); // else remove from checked\n    }\n\n    setChecked(newChecked);\n    editCompletedState(value, evt.target.checked); // Update state\n  };\n\n  // Popup state\n  const [popupState, setPopupState] = useState({\n    open: false,\n    type: \"\",\n    actionID: 0, // action_id for EDITING, otherwise 0 for ADDING\n    actionName: \"\",\n  });\n\n  // Popup functions\n  const handleClickOpen = (type, id, name) => {\n    setPopupState((prev) => ({\n      ...prev,\n      open: true,\n      type: type,\n      actionID: id,\n      actionName: name,\n    }));\n  };\n\n  const cancel = () => {\n    setPopupState((prev) => ({\n      ...prev,\n      open: false,\n    }));\n  };\n\n  const confirmDelete = (actionID) => {\n    deleteAction(actionID);\n    setPopupState((prev) => ({\n      ...prev,\n      open: false,\n    }));\n  };\n\n  const confirmAdd = (name, categoryID) => {\n    addAction(name, categoryID);\n    setPopupState((prev) => ({\n      ...prev,\n      open: false,\n    }));\n  };\n\n  const confirmEdit = (actionID, name) => {\n    editActionName(actionID, name);\n    setPopupState((prev) => ({\n      ...prev,\n      open: false,\n    }));\n  };\n\n  return (\n    <List className={classes.root}>\n      {items\n        .sort(function (a, b) {\n          return a.id - b.id;\n        })\n        .map((obj) => {\n          const labelId = `checkbox-list-label-${obj.id}`;\n          return (\n            <ListItem\n              key={obj.id}\n              role={undefined}\n              dense\n              button\n              onClick={(evt) => handleToggle(obj.id, evt)}\n            >\n              <ListItemIcon>\n                <Checkbox\n                  edge=\"start\"\n                  checked={obj.is_completed}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ \"aria-labelledby\": labelId }}\n                />\n              </ListItemIcon>\n              <ListItemText id={labelId} primary={obj.action_name} />\n              {isEditable && (\n                <ListItemSecondaryAction>\n                  <IconButton edge=\"end\" aria-label=\"drag\">\n                    <UnfoldMoreRoundedIcon />\n                  </IconButton>\n                  <IconButton edge=\"end\" aria-label=\"delete\">\n                    <DeleteRoundedIcon\n                      onClick={() =>\n                        handleClickOpen(\"Delete\", obj.id, obj.action_name)\n                      }\n                    />\n                  </IconButton>\n                  <IconButton edge=\"end\" aria-label=\"edit\">\n                    <EditRoundedIcon\n                      onClick={() =>\n                        handleClickOpen(\"Edit\", obj.id, obj.action_name)\n                      }\n                    />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              )}\n            </ListItem>\n          );\n        })}\n\n      {isEditable ? (\n        <>\n          <IconButton>\n            <AddCircleIcon onClick={() => handleClickOpen(\"Add\", 0, \"\")} />\n          </IconButton>\n          <IconButton onClick={modeToggle}>\n            <SaveRoundedIcon />\n          </IconButton>\n        </>\n      ) : (\n        <IconButton onClick={modeToggle}>\n          <EditRoundedIcon />\n        </IconButton>\n      )}\n\n      <Popup\n        cancel={cancel}\n        confirmDelete={confirmDelete}\n        confirmAdd={confirmAdd}\n        confirmEdit={confirmEdit}\n        popupState={popupState}\n        category={category}\n      />\n    </List>\n  );\n}\n","/Users/ag/lighthouse/meowtivate/front-end/src/components/CatPlant.jsx",["144","145","146"],"import React, {useState, useEffect} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles(theme => ({\n  pot: {\n    display: 'block',\n    width: '12vw',\n    position:'absolute',\n    bottom: '0px',\n    left: 'calc(50% - 6vw)',\n    zIndex: 2,\n  },\n  plant: {\n    opacity: 0,\n    width: '13vw',\n    position:'relative',\n    zIndex: 1,\n  },\n  plantContainer: {\n  position: 'relative',\n\n  },\n  animatedItem: {\n    animation: `$myEffect 3000ms ${theme.transitions.easing.easeInOut}`,\n\n  },\n\n  \"@keyframes myEffect\": {\n    '0%': {\n      transform: 'translateY(30%)',\n      opacity: 0,\n\n    },\n    '16%': {\n      transform: 'translateY(-3%)',\n      opacity: 1,\n\n    },\n    '28%': {\n      transform: 'translateY(5%)',\n\n    },\n    '44%': {\n      transform: 'translateY(-2%)'\n    },\n    '59%': {\n      transform: 'translateY(0%)'\n    },\n    '73%': {\n      transform: 'translateY(0%)'\n    },\n    '88%': {\n      transform: 'translateY(0%)'\n    },\n    '100%': {\n      transform: 'translateY(0%)'\n    }, \n  }\n}));\n\nexport default function CatPlant(props) {\n  const classes = useStyles();\n  const { actions } = props;\n  const [start, setStart] = React.useState(false);\n  let timer;\n\n  // Calculate percentage\n  const totalAmount = actions.length;\n  const totalCompleted = actions.filter(obj => obj.is_completed === true).length;\n  const initial = ( totalCompleted / totalAmount ) * 100;\n  const num = Math.floor(initial / 10) * 10;\n\n  // const [percentage, setPercentage] = useState(initial);\n  \n  useEffect(() => {\n    setStart(true);\n    timer = setTimeout(() => setStart(false), 3000);\n  }, [actions])\n\n  useEffect(() => {\n    return () => clearInterval(timer);\n  }, [start])\n\n  return (\n      <div className={classes.plantContainer}>\n        <img className={clsx(classes.plant,\n          {[classes.animatedItem]: start}\n        )} src={`https://meowtivate.s3-us-west-2.amazonaws.com/plants/${num}plant.png`} alt=\"plant\" style={{opacity: 1}}/>\n        <img className={classes.pot} src=\"https://meowtivate.s3-us-west-2.amazonaws.com/pot.png\" alt=\"pot\"/>\n      </div>\n);\n}","/Users/ag/lighthouse/meowtivate/front-end/src/components/Progress.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/Popup.jsx",["147"],"import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nexport default function Popup(props) {\n  const { \n    confirmDelete, \n    confirmAdd, \n    confirmEdit, \n    cancel, \n    popupState, \n    category } = props;\n  const { open, type, actionID, actionName } = popupState;\n  const listType = category === 1 ? \"to-do\" : \"habit\";\n\n  // Making form a controlled component\n  const [name, setName] = useState(actionName);\n\n  // Prevent stale props by re-rendering when actionName changes in parent\n  useEffect(() => {\n    setName(actionName)\n  }, [actionName])\n\n  const clearAndCancel = () => {\n    setName(\"\");\n    cancel();\n  }\n\n  const clearAndConfirmAdd = () => {\n    setName(\"\");\n    confirmAdd(name, category);\n  }\n\n  console.log(\"actionName\", actionName);\n\n  return (\n    <div>\n      { type === \"Delete\" && (\n        <Dialog\n        open={open}\n        onClose={cancel}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{type} {listType}?</DialogTitle>\n        <DialogContent>\n          {/* <DialogContentText>\n          {actionID}\n          </DialogContentText> */}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => confirmDelete(actionID)} color=\"primary\">\n            Confirm\n          </Button>\n          <Button onClick={cancel} color=\"primary\" autoFocus>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n      )}\n\n      { type === \"Edit\" && (\n        <Dialog open={open} onClose={cancel} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">{type} a {listType}</DialogTitle>\n        <DialogContent>\n          {/* <DialogContentText>\n            {actionID}\n          </DialogContentText> */}\n          <form autoComplete=\"off\" onSubmit={(event) => event.preventDefault()}>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={(event) => setName(event.target.value)}\n              fullWidth\n            />\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={cancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={() => confirmEdit(actionID, name)} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n      )}\n\n      { type === \"Add\" && (\n        <Dialog open={open} onClose={cancel} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">{type} a {listType}</DialogTitle>\n        <DialogContent>\n          {/* <DialogContentText>\n            {actionID}\n          </DialogContentText> */}\n          <form autoComplete=\"off\" onSubmit={(event) => event.preventDefault()}>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={(event) => setName(event.target.value)}\n              fullWidth\n            />\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={clearAndCancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={clearAndConfirmAdd} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n      )}\n    </div>\n  );\n}\n",{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":9,"column":50,"nodeType":"154","messageId":"155","endLine":9,"endColumn":54},{"ruleId":"152","severity":1,"message":"156","line":29,"column":10,"nodeType":"154","messageId":"155","endLine":29,"endColumn":15},{"ruleId":"152","severity":1,"message":"157","line":1,"column":28,"nodeType":"154","messageId":"155","endLine":1,"endColumn":36},{"ruleId":"152","severity":1,"message":"158","line":1,"column":38,"nodeType":"154","messageId":"155","endLine":1,"endColumn":47},{"ruleId":"152","severity":1,"message":"159","line":5,"column":10,"nodeType":"154","messageId":"155","endLine":5,"endColumn":32},{"ruleId":"152","severity":1,"message":"160","line":29,"column":11,"nodeType":"154","messageId":"155","endLine":29,"endColumn":16},{"ruleId":"152","severity":1,"message":"160","line":29,"column":11,"nodeType":"154","messageId":"155","endLine":29,"endColumn":16},{"ruleId":"152","severity":1,"message":"161","line":28,"column":9,"nodeType":"154","messageId":"155","endLine":28,"endColumn":14},{"ruleId":"152","severity":1,"message":"158","line":1,"column":27,"nodeType":"154","messageId":"155","endLine":1,"endColumn":36},{"ruleId":"152","severity":1,"message":"162","line":11,"column":10,"nodeType":"154","messageId":"155","endLine":11,"endColumn":23},{"ruleId":"152","severity":1,"message":"163","line":22,"column":18,"nodeType":"154","messageId":"155","endLine":22,"endColumn":22},{"ruleId":"152","severity":1,"message":"164","line":2,"column":31,"nodeType":"154","messageId":"155","endLine":2,"endColumn":40},{"ruleId":"165","severity":1,"message":"166","line":68,"column":18,"nodeType":"167","endLine":72,"endColumn":34},{"ruleId":"152","severity":1,"message":"158","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":26},{"ruleId":"152","severity":1,"message":"157","line":1,"column":28,"nodeType":"154","messageId":"155","endLine":1,"endColumn":36},{"ruleId":"152","severity":1,"message":"163","line":39,"column":49,"nodeType":"154","messageId":"155","endLine":39,"endColumn":53},{"ruleId":"152","severity":1,"message":"168","line":40,"column":35,"nodeType":"154","messageId":"155","endLine":40,"endColumn":43},{"ruleId":"152","severity":1,"message":"169","line":43,"column":11,"nodeType":"154","messageId":"155","endLine":43,"endColumn":22},{"ruleId":"152","severity":1,"message":"170","line":43,"column":24,"nodeType":"154","messageId":"155","endLine":43,"endColumn":36},{"ruleId":"152","severity":1,"message":"171","line":57,"column":9,"nodeType":"154","messageId":"155","endLine":57,"endColumn":21},{"ruleId":"172","severity":1,"message":"173","line":102,"column":6,"nodeType":"174","endLine":102,"endColumn":15,"suggestions":"175"},{"ruleId":"172","severity":1,"message":"176","line":111,"column":6,"nodeType":"174","endLine":111,"endColumn":15,"suggestions":"177"},{"ruleId":"178","severity":1,"message":"179","line":120,"column":7,"nodeType":"167","endLine":123,"endColumn":9},{"ruleId":"152","severity":1,"message":"158","line":1,"column":27,"nodeType":"154","messageId":"155","endLine":1,"endColumn":36},{"ruleId":"152","severity":1,"message":"157","line":1,"column":16,"nodeType":"154","messageId":"155","endLine":1,"endColumn":24},{"ruleId":"172","severity":1,"message":"180","line":78,"column":13,"nodeType":"181","endLine":78,"endColumn":52},{"ruleId":"172","severity":1,"message":"182","line":83,"column":6,"nodeType":"174","endLine":83,"endColumn":13,"suggestions":"183"},{"ruleId":"152","severity":1,"message":"184","line":8,"column":8,"nodeType":"154","messageId":"155","endLine":8,"endColumn":25},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'store' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'ContactSupportOutlined' is defined but never used.","'state' is assigned a value but never used.","'login' is assigned a value but never used.","'StarRateSharp' is defined but never used.","'user' is assigned a value but never used.","'className' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'unlocked' is assigned a value but never used.","'postLogData' is assigned a value but never used.","'updateStreak' is assigned a value but never used.","'undoneAmount' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'decideDisplay' and 'percentage'. Either include them or remove the dependency array.","ArrayExpression",["187"],"React Hook useEffect has missing dependencies: 'addUnlocked' and 'catID'. Either include them or remove the dependency array.",["188"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","Assignments to the 'timer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has a missing dependency: 'timer'. Either include it or remove the dependency array.",["189"],"'DialogContentText' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},"Update the dependencies array to be: [actions, decideDisplay, percentage]",{"range":"196","text":"197"},"Update the dependencies array to be: [addUnlocked, catID, display]",{"range":"198","text":"199"},"Update the dependencies array to be: [start, timer]",{"range":"200","text":"201"},[3079,3088],"[actions, decideDisplay, percentage]",[3353,3362],"[addUnlocked, catID, display]",[1723,1730],"[start, timer]"]