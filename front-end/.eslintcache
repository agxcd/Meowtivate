[{"/home/minty/lighthouse/meowtivate/front-end/src/index.js":"1","/home/minty/lighthouse/meowtivate/front-end/src/components/App.js":"2","/home/minty/lighthouse/meowtivate/front-end/src/components/reportWebVitals.js":"3","/home/minty/lighthouse/meowtivate/front-end/src/components/Weather.js":"4","/home/minty/lighthouse/meowtivate/front-end/src/components/Calendar-import.js":"5","/home/minty/lighthouse/meowtivate/front-end/src/components/404.jsx":"6","/home/minty/lighthouse/meowtivate/front-end/src/pages/LoginPage.jsx":"7","/home/minty/lighthouse/meowtivate/front-end/src/pages/WelcomePage.jsx":"8","/home/minty/lighthouse/meowtivate/front-end/src/pages/RegisterPage.jsx":"9","/home/minty/lighthouse/meowtivate/front-end/src/hooks/useApplicationData.js":"10","/home/minty/lighthouse/meowtivate/front-end/src/pages/DashboardPage.jsx":"11","/home/minty/lighthouse/meowtivate/front-end/src/pages/AccountPage.jsx":"12","/home/minty/lighthouse/meowtivate/front-end/src/pages/ListsPage.jsx":"13","/home/minty/lighthouse/meowtivate/front-end/src/pages/CatsPage.jsx":"14","/home/minty/lighthouse/meowtivate/front-end/src/helpers/stateHelpers.js":"15","/home/minty/lighthouse/meowtivate/front-end/src/components/NavBar.jsx":"16","/home/minty/lighthouse/meowtivate/front-end/src/components/GalleryContainer.jsx":"17","/home/minty/lighthouse/meowtivate/front-end/src/components/ListsContainer.jsx":"18","/home/minty/lighthouse/meowtivate/front-end/src/components/GalleryItem.js":"19","/home/minty/lighthouse/meowtivate/front-end/src/components/Menu.jsx":"20","/home/minty/lighthouse/meowtivate/front-end/src/components/Progress.jsx":"21","/home/minty/lighthouse/meowtivate/front-end/src/components/UnlockBadge.jsx":"22","/home/minty/lighthouse/meowtivate/front-end/src/components/ActionList.jsx":"23","/home/minty/lighthouse/meowtivate/front-end/src/components/CatPlant.jsx":"24","/home/minty/lighthouse/meowtivate/front-end/src/components/Popup.jsx":"25","/home/minty/lighthouse/meowtivate/front-end/src/helpers/calculateChecked.js":"26","/home/minty/lighthouse/meowtivate/front-end/src/pages/InventoryPage.jsx":"27","/home/minty/lighthouse/meowtivate/front-end/src/components/InventoryItem.jsx":"28","/home/minty/lighthouse/meowtivate/front-end/src/pages/ShopPage.jsx":"29","/home/minty/lighthouse/meowtivate/front-end/src/components/ShopItem.jsx":"30","/home/minty/lighthouse/meowtivate/front-end/src/helpers/getCurrentDate.js":"31"},{"size":540,"mtime":1611350970383,"results":"32","hashOfConfig":"33"},{"size":3312,"mtime":1611515443366,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1610847643437,"results":"35","hashOfConfig":"33"},{"size":2416,"mtime":1611350970363,"results":"36","hashOfConfig":"33"},{"size":2858,"mtime":1611515443294,"results":"37","hashOfConfig":"33"},{"size":228,"mtime":1611350970315,"results":"38","hashOfConfig":"33"},{"size":1278,"mtime":1611350970399,"results":"39","hashOfConfig":"33"},{"size":1411,"mtime":1611350970399,"results":"40","hashOfConfig":"33"},{"size":1519,"mtime":1611350970399,"results":"41","hashOfConfig":"33"},{"size":5908,"mtime":1611515608295,"results":"42","hashOfConfig":"33"},{"size":2803,"mtime":1611524945505,"results":"43","hashOfConfig":"33"},{"size":2180,"mtime":1611441420568,"results":"44","hashOfConfig":"33"},{"size":435,"mtime":1611455651466,"results":"45","hashOfConfig":"33"},{"size":1513,"mtime":1611455651466,"results":"46","hashOfConfig":"33"},{"size":1980,"mtime":1611455651466,"results":"47","hashOfConfig":"33"},{"size":596,"mtime":1611350970363,"results":"48","hashOfConfig":"33"},{"size":828,"mtime":1611455651466,"results":"49","hashOfConfig":"33"},{"size":3044,"mtime":1611455651466,"results":"50","hashOfConfig":"33"},{"size":1189,"mtime":1611455651466,"results":"51","hashOfConfig":"33"},{"size":1633,"mtime":1611456790091,"results":"52","hashOfConfig":"33"},{"size":1457,"mtime":1611441420568,"results":"53","hashOfConfig":"33"},{"size":4424,"mtime":1611527872198,"results":"54","hashOfConfig":"33"},{"size":5192,"mtime":1611455553951,"results":"55","hashOfConfig":"33"},{"size":2133,"mtime":1611515443366,"results":"56","hashOfConfig":"33"},{"size":3821,"mtime":1611350970363,"results":"57","hashOfConfig":"33"},{"size":375,"mtime":1611350970363,"results":"58","hashOfConfig":"33"},{"size":1045,"mtime":1611478561009,"results":"59","hashOfConfig":"33"},{"size":1201,"mtime":1611478377716,"results":"60","hashOfConfig":"33"},{"size":1118,"mtime":1611478350291,"results":"61","hashOfConfig":"33"},{"size":1178,"mtime":1611517565841,"results":"62","hashOfConfig":"33"},{"size":533,"mtime":1611515443302,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"v3sst6",{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/minty/lighthouse/meowtivate/front-end/src/index.js",[],["135","136"],"/home/minty/lighthouse/meowtivate/front-end/src/components/App.js",["137","138","139"],"/home/minty/lighthouse/meowtivate/front-end/src/components/reportWebVitals.js",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/Weather.js",["140","141"],"import React from \"react\";\nimport { useState } from \"react\";\nimport \"./styles/weather.css\";\n\nconst api = {\n  key: process.env.REACT_APP_WEATHER_API_KEY,\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\n// api.openweathermap.org/data/2.5/\n// weather?lat={lat}&lon={lon}&appid={API key}\n\nexport const Weather = () => {\n  const [city, setCity] = useState(\"\");\n  const [weather, setWeather] = useState(\"\");\n\n  const search = (event) => {\n    if (event.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${city}&units=metric&APPID=${api.key}`)\n        .then((res) => res.json())\n        .then((result) => {\n          setWeather(result);\n          console.log(result);\n        });\n    }\n  };\n\n  return (\n    <div\n      className={\n        typeof weather.main != \"undefined\"\n          ? weather.weather[0].main.includes(\"Cloud\")\n            ? \"weather cloudy\"\n            : \"weather\"\n          : \"weather\"\n      }\n    >\n      <section className=\"weather\">\n        <div className=\"weather-search-box\">\n          <input\n            type=\"text\"\n            className=\"city-search-bar\"\n            placeholder=\"City...\"\n            onChange={(e) => setCity(e.target.value)}\n            value={city}\n            onKeyPress={search}\n          />\n        </div>\n        {typeof weather.main != \"undefined\" ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location\">\n                {weather.name}, {weather.sys.country}\n              </div>\n            </div>\n            <div className=\"temp\">{Math.round(weather.main.temp)}&deg;c</div>\n            <div className=\"weather\">{weather.weather[0].main}</div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </section>\n    </div>\n  );\n};\n","/home/minty/lighthouse/meowtivate/front-end/src/components/Calendar-import.js",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/404.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/pages/LoginPage.jsx",["142"],"import TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: \"Varela Round\",\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  logo: {\n    fontFamily: \"itim\",\n    letterSpacing: \"8px\",\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n  },\n  button: {\n    fontFamily: \"Varela Round\",\n    textDecoration: \"none\",\n  },\n}));\n\nexport default function LoginPage(props) {\n  const classes = useStyles();\n  const { state } = props;\n\n  return (\n    <div className=\"Login\">\n      <h1 className={classes.header}>Meowtivate!</h1>\n      <h2 className={classes.header}>Login</h2>\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <div>\n        <TextField id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" />\n      </div>\n      <div>\n      <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" />\n      </div>\n      <Button \n        variant=\"contained\" \n        color=\"secondary\"\n        component={Link}\n        to='/lists'>\n      Login\n      </Button>\n    </form>\n    </div>\n  )\n};","/home/minty/lighthouse/meowtivate/front-end/src/pages/WelcomePage.jsx",["143"],"import axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: \"Varela Round\",\n  },\n  logo: {\n    fontFamily: \"itim\",\n    letterSpacing: \"8px\",\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n  },\n  button: {\n    fontFamily: \"Varela Round\",\n    textDecoration: \"none\",\n  },\n}));\n\nexport default function WelcomePage(props) {\n  let history = useHistory();\n\n  const login = () => {\n    axios.get(\"/api/login/1\").then((res) => {\n      console.log(res);\n      history.push(\"/dashboard\");\n    });\n  };\n  // const { state } = props;\n  const classes = useStyles();\n\n  return (\n    <div className=\"Welcome\">\n      <h2 className={classes.header}>Welcome to </h2>\n      <h1 className={classes.logo}>Meowtivate!</h1>\n      <div>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          component={Link}\n          to=\"/dashboard\"\n        >\n          Sign Up\n        </Button>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"secondary\"\n          component={Link}\n          to=\"/login\">\n          Login\n        </Button>\n      </div>\n    </div>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/pages/RegisterPage.jsx",["144"],"import TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: \"Varela Round\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  logo: {\n    fontFamily: \"itim\",\n    letterSpacing: \"8px\",\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n  },\n  button: {\n    fontFamily: \"Varela Round\",\n    textDecoration: \"none\",\n  },\n}));\n\nexport default function RegisterPage(props) {\n  const classes = useStyles();\n  const { state } = props;\n\n  return (\n    <div className=\"Register\">\n      <h1 className={classes.header}>Meowtivate!</h1>\n      <h2 className={classes.header}>Register</h2>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" />\n        </div>\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" />\n        </div>\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" />\n        </div>\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" />\n        </div>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          component={Link}\n          to=\"/dashboard\"\n        >\n          Register\n        </Button>\n      </form>\n    </div>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/hooks/useApplicationData.js",[],"/home/minty/lighthouse/meowtivate/front-end/src/pages/DashboardPage.jsx",["145","146"],"/home/minty/lighthouse/meowtivate/front-end/src/pages/AccountPage.jsx",["147"],"import React, { useState, useEffect } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport NavBar from \"../components/NavBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport SaveRoundedIcon from \"@material-ui/icons/SaveRounded\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n  },\n}));\n\nexport default function AccountPage(props) {\n  const user = props.state.account[0];\n  console.log(\"AccountPage\", user);\n  const { username, email } = user;\n\n  const classes = useStyles();\n\n  // Toggle between VIEW and EDIT modes\n  const [isEditable, setIsEditable] = useState(false);\n  const modeToggle = () => setIsEditable(!isEditable);\n\n  return (\n    <div className={classes.root}>\n      <NavBar/>\n      <header>\n        <h2 className={classes.header}>my Account</h2>\n      </header>\n      <Card>\n        <CardContent>\n          <h5>Username: {username}</h5>\n          <h5>Email: {email}</h5>\n          <h5>Password: ********* </h5>\n        </CardContent>\n      </Card>\n      <IconButton onClick={modeToggle}>\n        <EditRoundedIcon />\n      </IconButton>\n      {isEditable && (\n        <div>\n          Hello\n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <div>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Username\"\n                variant=\"outlined\"\n              />\n            </div>\n            <div>\n              <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" />\n            </div>\n\n            <div>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Password\"\n                variant=\"outlined\"\n              />\n            </div>\n            <IconButton>\n              <SaveRoundedIcon onClick={modeToggle} />\n            </IconButton>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/pages/ListsPage.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/pages/CatsPage.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/helpers/stateHelpers.js",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/NavBar.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/GalleryContainer.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/ListsContainer.jsx",["148"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ActionList from \"./ActionList\";\nimport CatPlant from './CatPlant'\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Progress from \"./Progress\";\nimport UnlockBadge from \"./UnlockBadge\";\nimport calculateChecked from \"../helpers/calculateChecked\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    minWidth: '10vw',\n    minHeight: '25vh',\n    paddingLeft: '5vw',\n    paddingRight: '5vw',\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"8px\",\n  },\n  plantbox: {\n    position:'static',\n    zIndex: 1,\n    minWidth: '10vw',\n    minHeight: '40vh',\n    paddingLeft: '5vw',\n    paddingRight: '5vw',\n  },\n  lists: {\n    minWidth: '10vw',\n    minHeight: '50vh',\n  }\n\n}));\n\nexport default function ListContainer(props) {\n  const { state, actionFunctions } = props;\n  const { actions, todos, habits, unlocked } = state;\n  const classes = useStyles();\n\n  console.log(\"habits in ListsContainer\", habits);\n\n  const completed = actions.filter(obj => obj.is_completed === true);\n  const checkedHabits = completed.filter(obj => obj.category_id === 2);\n  const checkedTodos = completed.filter(obj => obj.category_id === 1);\n  const habitIDs = calculateChecked(checkedHabits);\n  const todoIDs = calculateChecked(checkedTodos);\n\n  console.log(\"completed\", completed)\n  console.log(\"checkedHabits\", checkedHabits);\n  console.log(\"checkedTodos\", checkedTodos);\n  \n  return (\n    <>\n    <UnlockBadge state={state}/>\n    <div className={classes.root}>\n      <h2 className={classes.header}>LET'S GET LOTS DONE TODAY</h2>\n      <Grid container spacing={4}>\n        <Grid item xs={4}>\n          <Card className={classes.lists}>\n            <CardContent>\n              <h3>Daily Habits</h3>\n              <ActionList \n                items={habits} \n                category={2} \n                actionFunctions={actionFunctions}\n                initChecked={habitIDs} />\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={4}>\n          <Card className={classes.lists}>\n            <CardContent>\n              <h3>To-Do Today</h3>\n              <ActionList \n                items={todos} \n                category={1} \n                actionFunctions={actionFunctions}\n                initChecked={todoIDs} />\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={4}>\n          <Card>\n            <CardContent>\n              {/* <div>\n              </div> */}\n              <div className={classes.plantbox}>\n                <h3>Today's Progress</h3>\n                <CatPlant actions={actions} />\n              </div>\n            </CardContent>\n          </Card>\n        </Grid>\n      <Progress\n        todos={todos}\n        habits={habits}\n        actions={actions}\n        />\n        </Grid>\n    </div>\n    </>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/components/GalleryItem.js",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/Menu.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/Progress.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/UnlockBadge.jsx",["149","150","151"],"/home/minty/lighthouse/meowtivate/front-end/src/components/ActionList.jsx",["152"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport DeleteRoundedIcon from \"@material-ui/icons/DeleteRounded\";\nimport UnfoldMoreRoundedIcon from \"@material-ui/icons/UnfoldMoreRounded\";\nimport SaveRoundedIcon from \"@material-ui/icons/SaveRounded\";\nimport Popup from \"./Popup\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    fontFamily: \"Varela Round\",\n  },\n}));\n\nexport default function ActionList(props) {\n  const { items, category, actionFunctions, initChecked } = props;\n  const { \n    deleteAction, \n    addAction, \n    editActionName, \n    editCompletedState } = actionFunctions; // State changing funcs from useApplicationData\n  const classes = useStyles();\n\n  console.log(\"checked in ActionList\", initChecked);\n\n  // Toggle between VIEW and EDIT modes\n  const [isEditable, setIsEditable] = useState(false);\n  const modeToggle = () => setIsEditable(!isEditable);\n\n  // Toggle checkbox\n  // checked is an array of numbers that represent checked actionIDs\n  const [checked, setChecked] = useState(initChecked);\n  \n  const handleToggle = (value, evt) => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) { // if value isn't in checked, add it\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1); // else remove from checked\n    }\n\n    setChecked(newChecked);\n    editCompletedState(value, evt.target.checked); // Update state\n  };\n\n  // Popup state\n  const [popupState, setPopupState] = useState({\n    open: false,\n    type: \"\",\n    actionID: 0, // action_id for EDITING, otherwise 0 for ADDING\n    actionName: \"\",\n  });\n\n  // Popup functions\n  const handleClickOpen = (type, id, name) => {\n    setPopupState((prev) => ({\n      ...prev,\n      open: true,\n      type: type,\n      actionID: id,\n      actionName: name,\n    }));\n  };\n\n  const cancel = () => {\n    setPopupState((prev) => ({\n      ...prev,\n      open: false,\n    }));\n  };\n\n  const confirmDelete = (actionID) => {\n    deleteAction(actionID);\n    setPopupState((prev) => ({\n      ...prev,\n      open: false,\n    }));\n  };\n\n  const confirmAdd = (name, categoryID) => {\n    addAction(name, categoryID);\n    setPopupState((prev) => ({\n      ...prev,\n      open: false,\n    }));\n  };\n\n  const confirmEdit = (actionID, name) => {\n    editActionName(actionID, name);\n    setPopupState((prev) => ({\n      ...prev,\n      open: false,\n    }));\n  }\n\n  return (\n    <List className={classes.root}>\n      {items.sort(function(a, b) {\n  return a.id - b.id;\n}).map((obj) => {\n        const labelId = `checkbox-list-label-${obj.id}`;\n        return (\n          <ListItem\n            key={obj.id}\n            role={undefined}\n            dense\n            button\n            onClick={(evt) => handleToggle(obj.id, evt)}\n          >\n            <ListItemIcon>\n              <Checkbox\n                edge=\"start\"\n                checked={obj.is_completed}\n                tabIndex={-1}\n                disableRipple\n                inputProps={{ \"aria-labelledby\": labelId }}\n              />\n            </ListItemIcon>\n            <ListItemText id={labelId} primary={obj.action_name} />\n            {isEditable && (\n              <ListItemSecondaryAction>\n                <IconButton edge=\"end\" aria-label=\"drag\">\n                  <UnfoldMoreRoundedIcon />\n                </IconButton>\n                <IconButton edge=\"end\" aria-label=\"delete\">\n                  <DeleteRoundedIcon\n                    onClick={() =>\n                      handleClickOpen(\"Delete\", obj.id, obj.action_name)\n                    }\n                  />\n                </IconButton>\n                <IconButton edge=\"end\" aria-label=\"edit\">\n                  <EditRoundedIcon\n                    onClick={() =>\n                      handleClickOpen(\"Edit\", obj.id, obj.action_name)\n                    }\n                  />\n                </IconButton>\n              </ListItemSecondaryAction>\n            )}\n          </ListItem>\n        );\n      })}\n\n      {isEditable ? (\n        <>\n          <IconButton>\n            <AddCircleIcon onClick={() => handleClickOpen(\"Add\", 0, \"\")} />\n          </IconButton>\n          <IconButton onClick={modeToggle}>\n            <SaveRoundedIcon />\n          </IconButton>\n        </>\n      ) : (\n        <IconButton onClick={modeToggle}>\n          <EditRoundedIcon />\n        </IconButton>\n      )}\n\n      <Popup\n        cancel={cancel}\n        confirmDelete={confirmDelete}\n        confirmAdd={confirmAdd}\n        confirmEdit={confirmEdit}\n        popupState={popupState}\n        category={category}\n      />\n    </List>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/components/CatPlant.jsx",["153","154","155"],"import React, {useState, useEffect} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles(theme => ({\n  pot: {\n    display: 'block',\n    width: '12vw',\n    position:'absolute',\n    bottom: '0px',\n    left: 'calc(50% - 6vw)',\n    zIndex: 2,\n  },\n  plant: {\n    opacity: 0,\n    width: '13vw',\n    position:'relative',\n    zIndex: 1,\n  },\n  plantContainer: {\n  position: 'relative',\n\n  },\n  animatedItem: {\n    animation: `$myEffect 1500ms ${theme.transitions.easing.easeInOut}`,\n\n  },\n\n  \"@keyframes myEffect\": {\n    '0%': {\n      transform: 'translateY(30%)',\n      opacity: 0,\n\n    },\n    '16%': {\n      transform: 'translateY(-3%)',\n      opacity: 1,\n\n    },\n    '28%': {\n      transform: 'translateY(5%)',\n\n    },\n    '44%': {\n      transform: 'translateY(-2%)'\n    },\n    '59%': {\n      transform: 'translateY(0%)'\n    },\n    '73%': {\n      transform: 'translateY(0%)'\n    },\n    '88%': {\n      transform: 'translateY(0%)'\n    },\n    '100%': {\n      transform: 'translateY(0%)'\n    }, \n  }\n}));\n\nexport default function CatPlant(props) {\n  const classes = useStyles();\n  const { actions } = props;\n  const [start, setStart] = React.useState(false);\n  let timer;\n\n  // Calculate percentage\n  const totalAmount = actions.length;\n  const totalCompleted = actions.filter(obj => obj.is_completed === true).length;\n  const initial = ( totalCompleted / totalAmount ) * 100;\n  const num = Math.floor(initial / 10) * 10;\n\n  // const [percentage, setPercentage] = useState(initial);\n  \n  useEffect(() => {\n    setStart(true);\n    timer = setTimeout(() => setStart(false), 1500);\n  }, [actions])\n\n  useEffect(() => {\n    return () => clearInterval(timer);\n  }, [start])\n\n  return (\n      <div className={classes.plantContainer}>\n        <img className={clsx(classes.plant,\n          {[classes.animatedItem]: start}\n        )} src={`https://meowtivate.s3-us-west-2.amazonaws.com/plants/${num}plant.png`} alt=\"plant\" style={{opacity: 1}}/>\n        <img className={classes.pot} src=\"https://meowtivate.s3-us-west-2.amazonaws.com/pots/01pot.png\" alt=\"pot\"/>\n      </div>\n);\n}","/home/minty/lighthouse/meowtivate/front-end/src/components/Popup.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/helpers/calculateChecked.js",[],"/home/minty/lighthouse/meowtivate/front-end/src/pages/InventoryPage.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/InventoryItem.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/pages/ShopPage.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/ShopItem.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/helpers/getCurrentDate.js",[],{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":9,"column":50,"nodeType":"162","messageId":"163","endLine":9,"endColumn":54},{"ruleId":"160","severity":1,"message":"164","line":35,"column":21,"nodeType":"162","messageId":"163","endLine":35,"endColumn":28},{"ruleId":"165","severity":1,"message":"166","line":58,"column":6,"nodeType":"167","endLine":58,"endColumn":13,"suggestions":"168"},{"ruleId":"160","severity":1,"message":"169","line":2,"column":31,"nodeType":"162","messageId":"163","endLine":2,"endColumn":40},{"ruleId":"170","severity":1,"message":"171","line":68,"column":18,"nodeType":"172","endLine":72,"endColumn":34},{"ruleId":"160","severity":1,"message":"173","line":29,"column":11,"nodeType":"162","messageId":"163","endLine":29,"endColumn":16},{"ruleId":"160","severity":1,"message":"174","line":28,"column":9,"nodeType":"162","messageId":"163","endLine":28,"endColumn":14},{"ruleId":"160","severity":1,"message":"173","line":29,"column":11,"nodeType":"162","messageId":"163","endLine":29,"endColumn":16},{"ruleId":"160","severity":1,"message":"175","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":25},{"ruleId":"160","severity":1,"message":"176","line":1,"column":27,"nodeType":"162","messageId":"163","endLine":1,"endColumn":36},{"ruleId":"160","severity":1,"message":"176","line":1,"column":27,"nodeType":"162","messageId":"163","endLine":1,"endColumn":36},{"ruleId":"160","severity":1,"message":"177","line":41,"column":35,"nodeType":"162","messageId":"163","endLine":41,"endColumn":43},{"ruleId":"165","severity":1,"message":"178","line":116,"column":6,"nodeType":"167","endLine":116,"endColumn":15,"suggestions":"179"},{"ruleId":"165","severity":1,"message":"180","line":125,"column":6,"nodeType":"167","endLine":125,"endColumn":15,"suggestions":"181"},{"ruleId":"182","severity":1,"message":"183","line":139,"column":9,"nodeType":"172","endLine":141,"endColumn":82},{"ruleId":"160","severity":1,"message":"176","line":1,"column":27,"nodeType":"162","messageId":"163","endLine":1,"endColumn":36},{"ruleId":"160","severity":1,"message":"175","line":1,"column":16,"nodeType":"162","messageId":"163","endLine":1,"endColumn":24},{"ruleId":"165","severity":1,"message":"184","line":78,"column":13,"nodeType":"185","endLine":78,"endColumn":52},{"ruleId":"165","severity":1,"message":"186","line":83,"column":6,"nodeType":"167","endLine":83,"endColumn":13,"suggestions":"187"},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'account' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["190"],"'className' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'state' is assigned a value but never used.","'login' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'unlocked' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'decideDisplay' and 'percentage'. Either include them or remove the dependency array.",["191"],"React Hook useEffect has missing dependencies: 'addUnlocked' and 'catID'. Either include them or remove the dependency array.",["192"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","Assignments to the 'timer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has a missing dependency: 'timer'. Either include it or remove the dependency array.",["193"],"no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},"Update the dependencies array to be: [id, state]",{"range":"202","text":"203"},"Update the dependencies array to be: [actions, decideDisplay, percentage]",{"range":"204","text":"205"},"Update the dependencies array to be: [addUnlocked, catID, display]",{"range":"206","text":"207"},"Update the dependencies array to be: [start, timer]",{"range":"208","text":"209"},[1724,1731],"[id, state]",[3495,3504],"[actions, decideDisplay, percentage]",[3768,3777],"[addUnlocked, catID, display]",[1723,1730],"[start, timer]"]