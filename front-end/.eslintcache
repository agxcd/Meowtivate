[{"/Users/ag/lighthouse/meowtivate/front-end/src/index.js":"1","/Users/ag/lighthouse/meowtivate/front-end/src/components/reportWebVitals.js":"2","/Users/ag/lighthouse/meowtivate/front-end/src/components/App.js":"3","/Users/ag/lighthouse/meowtivate/front-end/src/hooks/useApplicationData.js":"4","/Users/ag/lighthouse/meowtivate/front-end/src/components/404.jsx":"5","/Users/ag/lighthouse/meowtivate/front-end/src/pages/LoginPage.jsx":"6","/Users/ag/lighthouse/meowtivate/front-end/src/pages/DashboardPage.jsx":"7","/Users/ag/lighthouse/meowtivate/front-end/src/pages/WelcomePage.jsx":"8","/Users/ag/lighthouse/meowtivate/front-end/src/pages/CatsPage.jsx":"9","/Users/ag/lighthouse/meowtivate/front-end/src/pages/AccountPage.jsx":"10","/Users/ag/lighthouse/meowtivate/front-end/src/pages/ListsPage.jsx":"11","/Users/ag/lighthouse/meowtivate/front-end/src/components/Weather.js":"12","/Users/ag/lighthouse/meowtivate/front-end/src/components/Calendar-import.js":"13","/Users/ag/lighthouse/meowtivate/front-end/src/components/NavBar.jsx":"14","/Users/ag/lighthouse/meowtivate/front-end/src/components/GalleryContainer.jsx":"15","/Users/ag/lighthouse/meowtivate/front-end/src/components/ListsContainer.jsx":"16","/Users/ag/lighthouse/meowtivate/front-end/src/components/GalleryItem.js":"17","/Users/ag/lighthouse/meowtivate/front-end/src/components/Menu.jsx":"18","/Users/ag/lighthouse/meowtivate/front-end/src/components/ActionList.jsx":"19","/Users/ag/lighthouse/meowtivate/front-end/src/components/AddItemForm.jsx":"20","/Users/ag/lighthouse/meowtivate/front-end/src/components/Popup.jsx":"21","/Users/ag/lighthouse/meowtivate/front-end/src/components/Progress.jsx":"22","/Users/ag/lighthouse/meowtivate/front-end/src/pages/RegisterPage.jsx":"23","/Users/ag/lighthouse/meowtivate/front-end/src/components/CatPlant.jsx":"24","/Users/ag/lighthouse/meowtivate/front-end/src/helpers/stateHelpers.js":"25"},{"size":540,"mtime":1611016983531,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1610857214451,"results":"28","hashOfConfig":"27"},{"size":2020,"mtime":1611282449640,"results":"29","hashOfConfig":"27"},{"size":4618,"mtime":1611282449650,"results":"30","hashOfConfig":"27"},{"size":228,"mtime":1611210454057,"results":"31","hashOfConfig":"27"},{"size":1250,"mtime":1611210454065,"results":"32","hashOfConfig":"27"},{"size":1253,"mtime":1611210454065,"results":"33","hashOfConfig":"27"},{"size":1411,"mtime":1611216833416,"results":"34","hashOfConfig":"27"},{"size":732,"mtime":1611282843340,"results":"35","hashOfConfig":"27"},{"size":2180,"mtime":1611281414278,"results":"36","hashOfConfig":"27"},{"size":453,"mtime":1611282449642,"results":"37","hashOfConfig":"27"},{"size":2143,"mtime":1611208835900,"results":"38","hashOfConfig":"27"},{"size":845,"mtime":1610953821073,"results":"39","hashOfConfig":"27"},{"size":596,"mtime":1611281414278,"results":"40","hashOfConfig":"27"},{"size":860,"mtime":1611026159704,"results":"41","hashOfConfig":"27"},{"size":2122,"mtime":1611282449640,"results":"42","hashOfConfig":"27"},{"size":719,"mtime":1611276797932,"results":"43","hashOfConfig":"27"},{"size":1408,"mtime":1611210454061,"results":"44","hashOfConfig":"27"},{"size":5155,"mtime":1611282449639,"results":"45","hashOfConfig":"27"},{"size":169,"mtime":1611118163873,"results":"46","hashOfConfig":"27"},{"size":3667,"mtime":1611282449640,"results":"47","hashOfConfig":"27"},{"size":1457,"mtime":1611282449641,"results":"48","hashOfConfig":"27"},{"size":1519,"mtime":1611216833415,"results":"49","hashOfConfig":"27"},{"size":3269,"mtime":1611282408195,"results":"50","hashOfConfig":"27"},{"size":1611,"mtime":1611282449641,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1523fzl",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ag/lighthouse/meowtivate/front-end/src/index.js",[],["109","110"],"/Users/ag/lighthouse/meowtivate/front-end/src/components/reportWebVitals.js",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/App.js",["111"],"/Users/ag/lighthouse/meowtivate/front-end/src/hooks/useApplicationData.js",["112","113"],"import { useEffect, useReducer, useState } from \"react\";\nimport axios from \"axios\";\nimport { removeFromActions, addToActions, getActionProperty, modifyActionWith } from '../helpers/stateHelpers';\n\nexport default function useApplicationDate() {\n  const [state, setState] = useState({\n    unlocked: [],\n    todos: [],\n    habits: [],\n    actions: [],\n    account: [],\n    allCats: [],\n  });\n\n  console.log(\"useApplicationDate correct is_completed state\", state);\n\n  const addAction = (action_name, categoryID) => {\n    console.log(\"action_name in useApp\", action_name);\n\n    if (categoryID === 1) { // TODOS\n      return axios.post('/api/todos/', { action_name })\n        .then((res) => {\n          const actions = addToActions(res.data, state); // res.data contains the action obj\n          const todos = actions.filter(obj => obj.category_id === 1);\n\n          console.log(\"updatedActions\", actions);\n          // console.log(\"updatedHabits\", habits);\n          console.log(\"updatedTodos\", todos);\n\n          setState({\n            ...state,\n            actions,\n            todos\n          })\n        })\n    } else if (categoryID === 2) { // HABITS\n      return axios.post('/api/habits/', { action_name })\n      .then((res) => {\n        const actions = addToActions(res.data, state);\n        const habits = actions.filter(obj => obj.category_id === 2);\n\n        console.log(\"updatedActions\", actions);\n        console.log(\"updatedHabits\", habits);\n        // console.log(\"updatedTodos\", todos);\n\n        setState({\n          ...state,\n          actions,\n          habits\n        })\n      })    \n    }\n  };\n\n  const deleteAction = (actionID) => {\n    // Get updated actions\n    const actions = removeFromActions(actionID, state);\n    const habits = actions.filter(obj => obj.category_id === 2);\n    const todos = actions.filter(obj => obj.category_id === 1);\n\n    // Delete action in db and update state\n    return axios.delete(`/api/actions/${actionID}`).then(() => {\n      setState({\n        ...state,\n        todos,\n        habits,\n        actions\n      });\n    });\n  };\n\n  const editActionName = (id, action_name) => {\n    // Get the action's current is_completed bool\n    const is_completed = getActionProperty(id, \"is_completed\", state);\n\n    // Pass to modifyActionWith function\n    const actions = modifyActionWith(action_name, \"action_name\", id, state);\n    const habits = actions.filter(obj => obj.category_id === 2);\n    const todos = actions.filter(obj => obj.category_id === 1);\n\n    console.log(\"updatedActions\", actions);\n    console.log(\"updatedHabits\", habits);\n    console.log(\"updatedTodos\", todos);\n\n    // Update action_name of action in db and update state\n    return axios.put(`/api/actions/${id}`, {id, action_name, is_completed})\n      .then(() => {\n        setState({\n          ...state,\n          actions,\n          habits,\n          todos\n        })\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  };\n\n  // Update state when checkboxes are clicked\n  const editCompletedState = (id, is_completed) => {\n    // Get the action's current action_name\n    const action_name = getActionProperty(id, \"action_name\", state);\n\n    // Pass to modifyActionWith function\n    const actions = modifyActionWith(is_completed, \"is_completed\", id, state);\n    const habits = actions.filter(obj => obj.category_id === 2);\n    const todos = actions.filter(obj => obj.category_id === 1);\n\n    console.log(\"updatedActions\", actions);\n    console.log(\"updatedHabits\", habits);\n    console.log(\"updatedTodos\", todos);\n\n    // Update is_completed of action in db and update state\n    return axios.put(`/api/actions/${id}`, {id, action_name, is_completed})\n      .then(() => {\n        setState({\n          ...state,\n          actions,\n          habits,\n          todos\n        })\n      })\n  }\n\n  const actionFunctions = {\n    addAction,\n    deleteAction,\n    editActionName,\n  };\n\n  useEffect(() => {\n    Promise.all([\n      axios.get(\"/api/collections/1\"),\n      axios.get(\"/api/todos/1\"),\n      axios.get(\"/api/habits/1\"),\n      axios.get(\"/api/actions/1\"),\n      axios.get(\"/api/accounts/1\"),\n      axios.get(\"/api/collections\"),\n    ])\n      .then((res) => {\n        console.log(\"res.data in cats collection:\", res.data);\n        setState((prev) => ({\n          ...prev,\n          unlocked: res[0].data,\n          todos: res[1].data,\n          habits: res[2].data,\n          actions: res[3].data,\n          account: res[4].data,\n          allCats: res[5].data,\n        }));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return { state, actionFunctions };\n}\n","/Users/ag/lighthouse/meowtivate/front-end/src/components/404.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/pages/LoginPage.jsx",["114"],"import TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: \"Varela Round\",\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  logo: {\n    fontFamily: \"itim\",\n    letterSpacing: \"8px\",\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n  },\n  button: {\n    fontFamily: \"Varela Round\",\n    textDecoration: \"none\",\n  },\n}));\n\nexport default function LoginPage(props) {\n  const classes = useStyles();\n  const { state } = props;\n\n  return (\n    <div className=\"Login\">\n      <h1 className={classes.header}>Meowtivate!</h1>\n      <h2 className={classes.header}>Login</h2>\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <div>\n        <TextField id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" />\n      </div>\n      <div>\n      <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" />\n      </div>\n      <Button \n        variant=\"contained\" \n        color=\"secondary\"\n        component={Link}\n        to='/lists'>\n      Login\n      </Button>\n    </form>\n    </div>\n  )\n};","/Users/ag/lighthouse/meowtivate/front-end/src/pages/DashboardPage.jsx",["115"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Weather } from \"../components/Weather\";\nimport { CalendarApp } from \"../components/Calendar-import\";\nimport NavBar from '../components/NavBar';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n  },\n}));\n\nexport default function DashboardPage(props) {\n  const { state } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <NavBar />\n      <Grid container spacing={3}>\n        <Grid item xs={4}>\n          <CalendarApp />\n        </Grid>\n        <Grid item xs={4}>\n          <Grid item>\n            <Button component={Link} to=\"/lists\">\n              My Lists\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button component={Link} to=\"/cats\">\n              My Collection\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button component={Link} to=\"/account\">\n              My Account\n            </Button>\n          </Grid>\n        </Grid>\n        <Grid item xs={4}>\n        <Weather />\n        </Grid>\n      </Grid>\n    </div>\n  )\n}","/Users/ag/lighthouse/meowtivate/front-end/src/pages/WelcomePage.jsx",["116"],"/Users/ag/lighthouse/meowtivate/front-end/src/pages/CatsPage.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/pages/AccountPage.jsx",["117"],"/Users/ag/lighthouse/meowtivate/front-end/src/pages/ListsPage.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/Weather.js",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/Calendar-import.js",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/NavBar.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/GalleryContainer.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/ListsContainer.jsx",["118","119"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ActionList from \"./ActionList\";\nimport CatPlant from './CatPlant'\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Progress from \"./Progress\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    minWidth: '10vw',\n    minHeight: '25vh',\n    paddingLeft: '5vw',\n    paddingRight: '5vw',\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"8px\",\n  },\n  plantbox: {\n    position:'relative',\n    alignText: 'center',\n    margins: 'auto',\n    top: '0px',\n    left: '0px',\n    zIndex: 1,\n  },\n  lists: {\n    minWidth: '10vw',\n    minHeight: '25vh',\n  }\n\n}));\n\nexport default function ListContainer(props) {\n  const classes = useStyles();\n  \n  return (\n    <div className={classes.root}>\n      <h2 className={classes.header}>LET'S GET LOTS DONE TODAY</h2>\n      <Grid container spacing={4}>\n        <Grid item xs={4}>\n          <Card className={classes.lists}>\n            <CardContent>\n              <h3>Daily Habits</h3>\n              <ActionList items={props.habits} category={2} />\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={4}>\n          <Card className={classes.lists}>\n            <CardContent>\n              <h3>To-Do Today</h3>\n              <ActionList items={props.todos} category={1} />\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={4}>\n          <Card className={classes.root}>\n            <CardContent>\n              {/* <div>\n                <h3>Today's Progress</h3>\n              </div> */}\n              <div className={classes.plantbox}> \n                <CatPlant />\n              </div>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n      <Progress\n        todos={props.todos}\n        habits={props.habits}\n        actions={props.actions}\n      />\n    </div>\n  );\n}\n","/Users/ag/lighthouse/meowtivate/front-end/src/components/GalleryItem.js",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/Menu.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/ActionList.jsx",["120"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport DeleteRoundedIcon from \"@material-ui/icons/DeleteRounded\";\nimport UnfoldMoreRoundedIcon from \"@material-ui/icons/UnfoldMoreRounded\";\nimport SaveRoundedIcon from \"@material-ui/icons/SaveRounded\";\nimport Popup from \"./Popup\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport useApplicationData from \"../hooks/useApplicationData\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: \"10vw\",\n    paddingRight: \"10vw\",\n  },\n  item: {\n    fontFamily: \"Varela Round\",\n  },\n}));\n\nexport default function ActionList(props) {\n  const { deleteAction } = useApplicationData();\n  const { items, category } = props;\n  const classes = useStyles();\n\n  // Toggle between VIEW and EDIT modes\n  const [isEditable, setIsEditable] = useState(false);\n  const modeToggle = () => setIsEditable(!isEditable);\n\n  // Toggle checkbox\n  // checked is an array of numbers that represent checked actionIDs\n  const [checked, setChecked] = useState([]);\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      // check if value is in checked\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1); // remove from checked\n    }\n\n    setChecked(newChecked);\n  };\n\n  console.log(\"checked\", checked);\n  // Logging value of checked whenever it's updated\n  // useEffect(() => {\n  //   console.log(\"what's checked:\", checked);\n  // }, [checked])\n\n  // Popup state\n  const [popupState, setPopupState] = useState({\n    open: false,\n    type: \"\",\n    actionID: 0, // action_id for EDITING, otherwise 0 for ADDING\n    actionName: \"\",\n  });\n\n  const handleClickOpen = (type, id, name) => {\n    setPopupState((prev) => ({\n      ...prev,\n      open: true,\n      type: type,\n      actionID: id,\n      actionName: name,\n    }));\n  };\n\n  const popupDelete = (actionID) => {\n    deleteAction(actionID);\n    setPopupState((prev) => ({\n      ...prev,\n      open: false,\n    }));\n  };\n\n  const cancel = () => {\n    setPopupState((prev) => ({\n      ...prev,\n      open: false,\n    }));\n  };\n\n  return (\n    <List className={classes.root}>\n      {items.map((obj) => {\n        const labelId = `checkbox-list-label-${obj.id}`;\n        return (\n          <ListItem\n            key={obj.id}\n            role={undefined}\n            dense\n            button\n            onClick={handleToggle(obj.id)}\n          >\n            <ListItemIcon>\n              <Checkbox\n                edge=\"start\"\n                checked={checked.indexOf(obj.id) !== -1}\n                tabIndex={-1}\n                disableRipple\n                inputProps={{ \"aria-labelledby\": labelId }}\n              />\n            </ListItemIcon>\n            <ListItemText id={labelId} primary={obj.action_name} />\n            {isEditable && (\n              <ListItemSecondaryAction>\n                <IconButton edge=\"end\" aria-label=\"drag\">\n                  <UnfoldMoreRoundedIcon />\n                </IconButton>\n                <IconButton edge=\"end\" aria-label=\"delete\">\n                  <DeleteRoundedIcon\n                    onClick={() =>\n                      handleClickOpen(\"Delete\", obj.id, obj.action_name)\n                    }\n                  />\n                </IconButton>\n                <IconButton edge=\"end\" aria-label=\"edit\">\n                  <EditRoundedIcon\n                    onClick={() =>\n                      handleClickOpen(\"Edit\", obj.id, obj.action_name)\n                    }\n                  />\n                </IconButton>\n              </ListItemSecondaryAction>\n            )}\n          </ListItem>\n        );\n      })}\n\n      {isEditable ? (\n        <>\n          <IconButton>\n            <AddCircleIcon onClick={() => handleClickOpen(\"Add\", 0, \"\")} />\n          </IconButton>\n          <IconButton onClick={modeToggle}>\n            <SaveRoundedIcon />\n          </IconButton>\n        </>\n      ) : (\n        <IconButton onClick={modeToggle}>\n          <EditRoundedIcon />\n        </IconButton>\n      )}\n\n      <Popup\n        cancel={cancel}\n        popupDelete={popupDelete}\n        popupState={popupState}\n        category={category}\n      />\n    </List>\n  );\n}\n","/Users/ag/lighthouse/meowtivate/front-end/src/components/AddItemForm.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/Popup.jsx",["121"],"import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nexport default function Popup(props) {\n  const { popupDelete, cancel, popupState, category } = props;\n  const { open, type, actionID, actionName } = popupState;\n  const listType = category === 1 ? \"to-do\" : \"habit\";\n\n  // Making form a controlled component\n  const [name, setName] = useState(actionName);\n\n  // Prevent stale props by re-rendering when actionName changes in parent\n  useEffect(() => {\n    setName(actionName)\n  }, [actionName])\n\n  console.log(\"actionName\", actionName);\n\n  return (\n    <div>\n      { type === \"Delete\" ? (\n              <Dialog\n              open={open}\n              onClose={cancel}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">{type} {listType}?</DialogTitle>\n              <DialogContent>\n                {/* <DialogContentText>\n                {actionID}\n                </DialogContentText> */}\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={() => popupDelete(actionID)} color=\"primary\">\n                  Confirm\n                </Button>\n                <Button onClick={cancel} color=\"primary\" autoFocus>\n                  Cancel\n                </Button>\n              </DialogActions>\n            </Dialog>\n      ) : (\n        <Dialog open={open} onClose={cancel} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">{type} a {listType}</DialogTitle>\n        <DialogContent>\n          {/* <DialogContentText>\n            {actionID}\n          </DialogContentText> */}\n          <form autoComplete=\"off\" onSubmit={(event) => event.preventDefault()}>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={(event) => setName(event.target.value)}\n              fullWidth\n            />\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={cancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={cancel} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n      )}\n    </div>\n  );\n}\n","/Users/ag/lighthouse/meowtivate/front-end/src/components/Progress.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/pages/RegisterPage.jsx",["122"],"/Users/ag/lighthouse/meowtivate/front-end/src/components/CatPlant.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/helpers/stateHelpers.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":9,"column":50,"nodeType":"129","messageId":"130","endLine":9,"endColumn":54},{"ruleId":"127","severity":1,"message":"131","line":1,"column":21,"nodeType":"129","messageId":"130","endLine":1,"endColumn":31},{"ruleId":"127","severity":1,"message":"132","line":40,"column":9,"nodeType":"129","messageId":"130","endLine":40,"endColumn":22},{"ruleId":"127","severity":1,"message":"133","line":29,"column":11,"nodeType":"129","messageId":"130","endLine":29,"endColumn":16},{"ruleId":"127","severity":1,"message":"133","line":16,"column":11,"nodeType":"129","messageId":"130","endLine":16,"endColumn":16},{"ruleId":"127","severity":1,"message":"134","line":28,"column":9,"nodeType":"129","messageId":"130","endLine":28,"endColumn":14},{"ruleId":"127","severity":1,"message":"135","line":1,"column":27,"nodeType":"129","messageId":"130","endLine":1,"endColumn":36},{"ruleId":"127","severity":1,"message":"136","line":5,"column":8,"nodeType":"129","messageId":"130","endLine":5,"endColumn":18},{"ruleId":"127","severity":1,"message":"137","line":6,"column":8,"nodeType":"129","messageId":"130","endLine":6,"endColumn":23},{"ruleId":"127","severity":1,"message":"135","line":1,"column":27,"nodeType":"129","messageId":"130","endLine":1,"endColumn":36},{"ruleId":"127","severity":1,"message":"138","line":8,"column":8,"nodeType":"129","messageId":"130","endLine":8,"endColumn":25},{"ruleId":"127","severity":1,"message":"133","line":29,"column":11,"nodeType":"129","messageId":"130","endLine":29,"endColumn":16},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useReducer' is defined but never used.","'listFunctions' is assigned a value but never used.","'state' is assigned a value but never used.","'login' is assigned a value but never used.","'useEffect' is defined but never used.","'IconButton' is defined but never used.","'SaveRoundedIcon' is defined but never used.","'DialogContentText' is defined but never used.","no-global-assign","no-unsafe-negation"]