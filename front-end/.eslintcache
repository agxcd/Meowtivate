[{"/home/minty/lighthouse/meowtivate/front-end/src/index.js":"1","/home/minty/lighthouse/meowtivate/front-end/src/components/App.js":"2","/home/minty/lighthouse/meowtivate/front-end/src/helpers/getCurrentDate.js":"3","/home/minty/lighthouse/meowtivate/front-end/src/hooks/useApplicationData.js":"4","/home/minty/lighthouse/meowtivate/front-end/src/components/404.jsx":"5","/home/minty/lighthouse/meowtivate/front-end/src/pages/ListsPage.jsx":"6","/home/minty/lighthouse/meowtivate/front-end/src/pages/InventoryPage.jsx":"7","/home/minty/lighthouse/meowtivate/front-end/src/pages/WelcomePage.jsx":"8","/home/minty/lighthouse/meowtivate/front-end/src/pages/LoginPage.jsx":"9","/home/minty/lighthouse/meowtivate/front-end/src/pages/RegisterPage.jsx":"10","/home/minty/lighthouse/meowtivate/front-end/src/pages/CatsPage.jsx":"11","/home/minty/lighthouse/meowtivate/front-end/src/pages/AccountPage.jsx":"12","/home/minty/lighthouse/meowtivate/front-end/src/pages/ShopPage.jsx":"13","/home/minty/lighthouse/meowtivate/front-end/src/pages/DashboardPage.jsx":"14","/home/minty/lighthouse/meowtivate/front-end/src/helpers/stateHelpers.js":"15","/home/minty/lighthouse/meowtivate/front-end/src/components/Weather.js":"16","/home/minty/lighthouse/meowtivate/front-end/src/components/Calendar-import.js":"17","/home/minty/lighthouse/meowtivate/front-end/src/components/SMSForm.js":"18","/home/minty/lighthouse/meowtivate/front-end/src/components/GalleryContainer.jsx":"19","/home/minty/lighthouse/meowtivate/front-end/src/components/InventoryItem.jsx":"20","/home/minty/lighthouse/meowtivate/front-end/src/components/ListsContainer.jsx":"21","/home/minty/lighthouse/meowtivate/front-end/src/components/NavBar.jsx":"22","/home/minty/lighthouse/meowtivate/front-end/src/components/ShopItem.jsx":"23","/home/minty/lighthouse/meowtivate/front-end/src/components/CatPlant.jsx":"24","/home/minty/lighthouse/meowtivate/front-end/src/components/GalleryItem.js":"25","/home/minty/lighthouse/meowtivate/front-end/src/helpers/calculateChecked.js":"26","/home/minty/lighthouse/meowtivate/front-end/src/components/Progress.jsx":"27","/home/minty/lighthouse/meowtivate/front-end/src/components/UnlockBadge.jsx":"28","/home/minty/lighthouse/meowtivate/front-end/src/components/ActionList.jsx":"29","/home/minty/lighthouse/meowtivate/front-end/src/components/Menu.jsx":"30","/home/minty/lighthouse/meowtivate/front-end/src/components/Popup.jsx":"31","/home/minty/lighthouse/meowtivate/front-end/src/components/Theme.js":"32","/home/minty/lighthouse/meowtivate/front-end/src/components/Footer.jsx":"33"},{"size":490,"mtime":1611812211693,"results":"34","hashOfConfig":"35"},{"size":4179,"mtime":1611812211597,"results":"36","hashOfConfig":"35"},{"size":533,"mtime":1611545201155,"results":"37","hashOfConfig":"35"},{"size":8249,"mtime":1611812211693,"results":"38","hashOfConfig":"35"},{"size":273,"mtime":1611865505195,"results":"39","hashOfConfig":"35"},{"size":461,"mtime":1611546638111,"results":"40","hashOfConfig":"35"},{"size":1502,"mtime":1611813049744,"results":"41","hashOfConfig":"35"},{"size":3051,"mtime":1611824968415,"results":"42","hashOfConfig":"35"},{"size":2257,"mtime":1611812211705,"results":"43","hashOfConfig":"35"},{"size":2618,"mtime":1611812211705,"results":"44","hashOfConfig":"35"},{"size":2096,"mtime":1611812211701,"results":"45","hashOfConfig":"35"},{"size":3627,"mtime":1611812211701,"results":"46","hashOfConfig":"35"},{"size":2466,"mtime":1611813049744,"results":"47","hashOfConfig":"35"},{"size":10937,"mtime":1611815976043,"results":"48","hashOfConfig":"35"},{"size":4871,"mtime":1611812211693,"results":"49","hashOfConfig":"35"},{"size":2416,"mtime":1611812211653,"results":"50","hashOfConfig":"35"},{"size":4110,"mtime":1611812211597,"results":"51","hashOfConfig":"35"},{"size":3890,"mtime":1611817126071,"results":"52","hashOfConfig":"35"},{"size":839,"mtime":1611648594225,"results":"53","hashOfConfig":"35"},{"size":1937,"mtime":1611816717250,"results":"54","hashOfConfig":"35"},{"size":5532,"mtime":1611815110441,"results":"55","hashOfConfig":"35"},{"size":828,"mtime":1611812211637,"results":"56","hashOfConfig":"35"},{"size":4374,"mtime":1611816671905,"results":"57","hashOfConfig":"35"},{"size":2616,"mtime":1611812211613,"results":"58","hashOfConfig":"35"},{"size":1685,"mtime":1611812211625,"results":"59","hashOfConfig":"35"},{"size":375,"mtime":1611350970363,"results":"60","hashOfConfig":"35"},{"size":552,"mtime":1611812211645,"results":"61","hashOfConfig":"35"},{"size":4756,"mtime":1611821492889,"results":"62","hashOfConfig":"35"},{"size":5826,"mtime":1611812211597,"results":"63","hashOfConfig":"35"},{"size":5004,"mtime":1611813049744,"results":"64","hashOfConfig":"35"},{"size":3665,"mtime":1611812211637,"results":"65","hashOfConfig":"35"},{"size":1429,"mtime":1611813049744,"results":"66","hashOfConfig":"35"},{"size":630,"mtime":1611812211625,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"v3sst6",{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"70"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"70"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"70"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"70"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"70"},"/home/minty/lighthouse/meowtivate/front-end/src/index.js",[],["158","159"],"/home/minty/lighthouse/meowtivate/front-end/src/components/App.js",["160","161","162","163"],"/*\nApp.js is responsible for containing all the routes and passing state as props\n*/\nimport React, { useEffect, useState } from \"react\";\n\nimport \"./styles/App.css\";\nimport \"@fontsource/itim\";\nimport \"@fontsource/varela-round\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport getCurrentDate from \"../helpers/getCurrentDate\";\n\n// Hooks\nimport useApplicationData from \"../hooks/useApplicationData\";\n// import useAuth from \"../hooks/useAuth\";\n\n// Pages imported from src/pages dir\nimport WelcomePage from \"../pages/WelcomePage\";\nimport LoginPage from \"../pages/LoginPage\";\nimport RegisterPage from \"../pages/RegisterPage\";\nimport DashboardPage from \"../pages/DashboardPage\";\nimport ListsPage from \"../pages/ListsPage\";\nimport CatsPage from \"../pages/CatsPage\";\nimport AccountPage from \"../pages/AccountPage\";\nimport InventoryPage from \"../pages/InventoryPage\";\nimport ShopPage from \"../pages/ShopPage\";\n\nimport NotFoundPage from \"./404\";\nimport SMSForm from \"./SMSForm\";\n\nfunction App() {\n  const {\n    state,\n    actionFunctions,\n    catFunctions,\n    day,\n    setDay,\n  } = useApplicationData();\n  const { unlocked, account } = state;\n  const id = day ? day : 0;\n  // const id = 1;\n\n  const [streak, setStreak] = useState(3); // Hardcode initial streak value\n\n  // Add 1 to current streak if a cat was unlocked today\n  useEffect(() => {\n    const today = getCurrentDate();\n    // Get array of unlocked dates in \"yyyy-mm-dd\"\n    const currentUnlocked = unlocked.map((obj) =>\n      obj.date_unlocked.slice(0, 10)\n    );\n    if (currentUnlocked.includes(today)) {\n      setStreak((prev) => prev + 1);\n    }\n  }, [unlocked]);\n\n  // Change streak depending on user\n  useEffect(() => {\n    if (id === 2) {\n      setStreak(4);\n    } else if (id === 3) {\n      setStreak(0);\n    }\n  }, [state]);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          {/* Define route paths and nest page components inside */}\n          <Route exact path=\"/\" component={WelcomePage}>\n            <WelcomePage state={state} />\n          </Route>\n          <Route exact path=\"/login\" component={LoginPage}>\n            <LoginPage state={state} />\n          </Route>\n          <Route exact path=\"/register\" component={RegisterPage}>\n            <RegisterPage state={state} />\n          </Route>\n          <Route exact path=\"/dashboard\" component={DashboardPage}>\n            {/* <DashboardPage state={state} /> */}\n            <SMSForm />\n            <DashboardPage\n              state={state}\n              streak={streak}\n              day={day}\n              setDay={setDay}\n            />\n          </Route>\n          <Route exact path=\"/lists\" component={ListsPage}>\n            <ListsPage\n              state={state}\n              actionFunctions={actionFunctions}\n              catFunctions={catFunctions}\n            />\n          </Route>\n          <Route exact path=\"/cats\" component={CatsPage}>\n            <CatsPage state={state} />\n          </Route>\n          <Route exact path=\"/account\" component={AccountPage}>\n            <AccountPage state={state} />\n          </Route>\n          <Route exact path=\"/inventory\" component={InventoryPage}>\n            <InventoryPage state={state} />\n          </Route>\n          <Route exact path=\"/shop\" component={ShopPage}>\n            <ShopPage state={state} />\n          </Route>\n          <Route exact path=\"*\" component={NotFoundPage} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\nexport default App;\n","/home/minty/lighthouse/meowtivate/front-end/src/helpers/getCurrentDate.js",[],"/home/minty/lighthouse/meowtivate/front-end/src/hooks/useApplicationData.js",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/404.jsx",["164"],"/home/minty/lighthouse/meowtivate/front-end/src/pages/ListsPage.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/pages/InventoryPage.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/pages/WelcomePage.jsx",["165"],"import { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport LocalFloristIcon from \"@material-ui/icons/LocalFlorist\";\nimport EcoIcon from \"@material-ui/icons/Eco\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    fontSize: \"1.3em\",\n  },\n  container: {\n    display: \"inline-flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    backgroundColor: \"rgb(201,188,200, 0.4)\",\n    borderRadius: \"2rem\",\n    width: \"40vw\",\n    padding: \"4em\",\n    marginTop: \"8vh\",\n  },\n  logo: {\n    fontFamily: \"Itim\",\n    letterSpacing: \"8px\",\n    fontSize: \"3em\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"2em\",\n    },\n    lineHeight: \"0\",\n    color: \"#5c5c5c\",\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n    fontSize: \"2em\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"2em\",\n    },\n    color: \"grey\",\n    lineHeight: \"0\",\n  },\n  signUpButton: {\n    fontFamily: \"Varela Round\",\n    margin: \"2rem\",\n    backgroundColor: \"#ebcb8a\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"1em\",\n    },\n    fontSize: \"1.5em\",\n    \"&:hover\": {\n      backgroundColor: \"#ceba93\",\n    },\n  },\n  loginButton: {\n    fontFamily: \"Varela Round\",\n    margin: \"2rem\",\n    fontSize: \"1.5em\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"1em\",\n    },\n    backgroundColor: \"#a0cdca\",\n    \"&:hover\": {\n      backgroundColor: \"#78aca8\",\n    },\n  },\n  blurb: {\n    paddingTop: '2em',\n    color: 'grey',\n    width: '30vw',\n    letterSpacing: '4px',\n  },\n  blurbContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  catgif: {\n    height: '14rem',\n  }\n}));\n\nexport default function WelcomePage(props) {\n  // const { state } = props;\n  const classes = useStyles();\n  // const theme = useTheme();\n\n  return (\n    <div className={classes.container}>\n      <h2 className={classes.header}>Welcome to </h2>\n      <h1 className={classes.logo}>MEOWIVATE!</h1>\n      <div>\n        <img className={classes.catgif} src=\"https://meowtivate.s3-us-west-2.amazonaws.com/miscellaneous/animated_catplant.gif\" alt=\"animated-catplant\"/>\n      </div>\n      <div className={classes.blurbContainer}>\n      <p className={classes.blurb}>Stay meowtivated to finish your work with this whimsical to-do and habit tracker app, while collect herbaceous feline friends along the way</p>\n      </div>\n      <div>\n        <Button\n          className={classes.signUpButton}\n          variant=\"contained\"\n          color=\"primary\"\n          component={Link}\n          to=\"/register\"\n        >\n          <EcoIcon className={classes.icon} />\n          Sign Up\n        </Button>\n        <Button\n          className={classes.loginButton}\n          variant=\"contained\"\n          color=\"secondary\"\n          component={Link}\n          to=\"/login\"\n        >\n          <LocalFloristIcon className={classes.icon} />\n          Login\n        </Button>\n      </div>\n\n    </div>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/pages/LoginPage.jsx",["166"],"import TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: \"Varela Round\",\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  logo: {\n    fontFamily: \"itim\",\n    letterSpacing: \"8px\",\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n  },\n  button: {\n    fontFamily: \"Varela Round\",\n    textDecoration: \"none\",\n  },\n}));\n\nexport default function LoginPage(props) {\n  const classes = useStyles();\n  const { state } = props;\n\n  return (\n    <div className=\"Login\">\n      <h1 className={classes.header}>Meowtivate!</h1>\n      <h2 className={classes.header}>Login</h2>\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <div>\n        <TextField id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" value=\"Pawthos\" />\n      </div>\n      <div>\n      <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" value=\"****\"/>\n      </div>\n      <Button \n        variant=\"contained\" \n        color=\"secondary\"\n        component={Link}\n        to='/lists'>\n      Login\n      </Button>\n    </form>\n    </div>\n  )\n};","/home/minty/lighthouse/meowtivate/front-end/src/pages/RegisterPage.jsx",["167"],"import TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: \"Varela Round\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  logo: {\n    fontFamily: \"itim\",\n    letterSpacing: \"8px\",\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n  },\n  button: {\n    fontFamily: \"Varela Round\",\n    textDecoration: \"none\",\n  },\n}));\n\nexport default function RegisterPage(props) {\n  const classes = useStyles();\n  const { state } = props;\n\n  return (\n    <div className=\"Register\">\n      <h1 className={classes.header}>Meowtivate!</h1>\n      <h2 className={classes.header}>Register</h2>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" />\n        </div>\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" />\n        </div>\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" />\n        </div>\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" />\n        </div>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          component={Link}\n          to=\"/dashboard\"\n        >\n          Register\n        </Button>\n      </form>\n    </div>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/pages/CatsPage.jsx",["168","169"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GalleryContainer from \"../components/GalleryContainer\";\nimport NavBar from \"../components/NavBar\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n  },\n  locked: {\n    filter: \"brightness(0)\",\n  },\n}));\n\nfunction isLocked(allCats, unlockedCats) {\n  const lockedCats = [];\n\n  for (let cat of allCats) {\n    // console.log('cat', String(cat.id))\n    // console.log('unloked keys', Object.keys(unlockedCats))\n    if (!Object.keys(unlockedCats).includes(String(cat.id - 1))) {\n      lockedCats.push(cat);\n    }\n  }\n  return lockedCats;\n}\n\nexport default function CatsPage(props) {\n  const { state } = props;\n  const classes = useStyles();\n  // console.log('UNLOCKED', state.unlocked);\n  // console.log('ALLCATS', state.allCats);\n  const allCatsArray = state.allCats;\n  const unlockedCatsArray = state.unlocked;\n  const lockedCatsArray = isLocked(allCatsArray, unlockedCatsArray);\n\n  return (\n    <div className=\"Cats\">\n      <NavBar />\n      <header>\n        <h2 className={classes.header}>my Collection</h2>\n      </header>\n      <section>\n        <GalleryContainer\n          items={state.unlocked}\n          style={{ filter: \"brightness(1)\" }}\n        />\n        <GalleryContainer\n          items={lockedCatsArray}\n          style={{ filter: \"brightness(0)\" }}\n        />\n      </section>\n    </div>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/pages/AccountPage.jsx",["170","171","172","173"],"import React, { useState, useEffect } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport NavBar from \"../components/NavBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport SaveRoundedIcon from \"@material-ui/icons/SaveRounded\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n  },\n}));\n\nexport default function AccountPage(props) {\n  // const user = props.state.account[0];\n  // console.log(\"AccountPage\", user);\n  // const { username, email } = user;\n\n  const classes = useStyles();\n\n  // Toggle between VIEW and EDIT modes\n  const [isEditable, setIsEditable] = useState(false);\n  const modeToggle = () => setIsEditable(!isEditable);\n\n  return (\n    <div className={classes.root}>\n      <NavBar />\n      <header>\n        <h2 className={classes.header}>my Account</h2>\n      </header>\n      <Card>\n        {props && (\n          <CardContent>\n            <h5>Username: Pawthos</h5>\n            <h5>Email: pawthos@gmail.com</h5>\n            <h5>Password: ********* </h5>{\" \"}\n          </CardContent>\n        )}\n      </Card>\n      <IconButton onClick={modeToggle}>\n        <EditRoundedIcon />\n      </IconButton>\n      {isEditable && (\n        <div>\n          Hello\n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <div>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Username\"\n                variant=\"outlined\"\n              />\n            </div>\n            <div>\n              <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" />\n            </div>\n\n            <div>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Password\"\n                variant=\"outlined\"\n              />\n            </div>\n            <IconButton>\n              <SaveRoundedIcon onClick={modeToggle} />\n            </IconButton>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/pages/ShopPage.jsx",["174"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport NavBar from \"../components/NavBar\";\nimport ShopItem from \"../components/ShopItem\";\nimport StorefrontRoundedIcon from \"@material-ui/icons/StorefrontRounded\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginLeft: '10vw',\n    marginRight: '10vw',\n  },\n  icon: {\n    fontSize: \"8em\",\n    color: \"grey\",\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"1em\",\n      letterSpacing: \"2px\",\n    },\n    color: \"grey\",\n    lineHeight: 0,\n    paddingBottom: \"3rem\",\n  },\n  wallet: {\n    display: \"flex\",\n    alignItems: \"center\",\n    backgroundColor: \"antiquewhite\",\n    width: \"7rem\",\n    justifyContent: \"space-around\",\n    padding: \"0.75em\",\n    borderRadius: \"1.5rem\",\n    fontFamily: \"Itim\",\n    color: \"grey\",\n    /* height: 5rem; */\n  },\n  walletContainer: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    marginRight: \"3rem\",\n  },\n  headerContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n}));\n\nexport default function ShopPage(props) {\n  const classes = useStyles();\n  const { state, coins, setCoins, addPot } = props;\n  const { shop, inventory } = state;\n\n  return (\n    <>\n      <header>\n        <NavBar />\n        <div className={classes.walletContainer}>\n          <div className={classes.wallet}>\n            <h2>{coins}</h2>\n            <img\n              src=\"https://meowtivate.s3-us-west-2.amazonaws.com/miscellaneous/meowcoin.png\"\n              alt=\"meowcoin\"\n              style={{ height: \"3rem\" }}\n            />\n          </div>\n        </div>\n        <StorefrontRoundedIcon className={classes.icon} />\n        <h1 className={classes.header}>WELCOME TO THE SHOP!</h1>\n      </header>\n      <body className={classes.root}>\n        <Grid container spacing={4}>\n          {shop.map((item) => {\n            return (\n              <ShopItem\n                key={item.id}\n                id={item.id}\n                name={item.pot_name}\n                image={item.image_url}\n                description={item.description}\n                price={item.price}\n                addPot={addPot}\n                coins={coins}\n                setCoins={setCoins}\n                inventory={inventory}\n              />\n            );\n          })}\n        </Grid>\n      </body>\n    </>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/pages/DashboardPage.jsx",["175","176","177","178","179","180","181","182","183","184","185","186","187"],"import React, { useState, useEffect } from \"react\";\nimport {\n  makeStyles,\n  Grid,\n  Button,\n  Card,\n  CardContent,\n  IconButton,\n} from \"@material-ui/core\";\nimport DoubleArrowRoundedIcon from \"@material-ui/icons/DoubleArrowRounded\";\nimport { Weather } from \"../components/Weather\";\nimport { CalendarApp } from \"../components/Calendar-import\";\nimport { Link } from \"react-router-dom\";\nimport NavBar from \"../components/NavBar\";\nimport CatPlant from \"../components/CatPlant\";\nimport Footer from \"../components/Footer\";\n\n// import getCurrentDate from \"../helpers/getCurrentDate\";\nimport SMSForm from \"../components/SMSForm\";\n// import Card from \"@material-ui/core/Card\";\n// import CardContent from \"@material-ui/core/CardContent\";\nimport getCurrentDate from \"../helpers/getCurrentDate\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginLeft: \"10vw\",\n    marginRight: \"10vw\",\n  },\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    paddingLeft: \"5vw\",\n    paddingRight: \"5vw\",\n  },\n  grid: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    // alignItems: 'center',\n  },\n  // grid1: {\n  //   display: \"flex\",\n  //   justifyContent: \"center\",\n  //   flexDirection: \"column\",\n  //   // alignItems: \"center\",\n  //   order: 1,\n  //   [theme.breakpoints.down(\"xs\")]: {\n  //     order: 2,\n  //   },\n  // },\n  // grid2: {\n  //   display: \"flex\",\n  //   justifyContent: \"center\",\n  //   flexDirection: \"column\",\n  //   order: 2,\n  //   [theme.breakpoints.down(\"xs\")]: {\n  //     order: 3,\n  //   },\n  // },\n  grid3: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    // order: 3,\n    [theme.breakpoints.up(\"md\")]: {\n      flexDirection: \"column\",\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n    },\n  },\n\n  margin: {\n    marginTop: \"2vh\",\n    [theme.breakpoints.down(\"sm\")]: {\n      paddingLeft: \"2em\",\n      paddingLeft: \"2em\",\n    },\n  },\n  coin: {\n    height: \"4rem\",\n  },\n  coinstyle: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  numOfCoins: {\n    paddingRight: \"0.5rem\",\n  },\n  iconButton: {\n    width: \"4rem\",\n    height: \"4rem\",\n  },\n  streakNum: {\n    backgroundColor: \"#a0cdca\",\n    width: \"5rem\",\n    height: \"8rem\",\n    display: \"inline-flex\",\n    justifyContent: \"center\",\n    borderRadius: \"2rem\",\n    alignItems: \"center\",\n    fontSize: \"2em\",\n    color: \"white\",\n  },\n  streakContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  listButton: {\n    width: \"10em\",\n    backgroundColor: \"#fee2b1\",\n    fontFamily: \"Itim\",\n    margin: \"0.5vh\",\n    fontSize: \"1.5em\",\n    paddingLeft: \"0.5em\",\n    paddingRight: \"0.5em\",\n    boxShadow:\n      \"0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)\",\n    color: \"#5c5c5c\",\n    \"&:hover\": {\n      backgroundColor: \"#dbc6a1\",\n      color: \"white\",\n    },\n  },\n  collectionButton: {\n    width: \"10em\",\n    backgroundColor: \"#fcd0c5\",\n    fontFamily: \"Itim\",\n    margin: \"0.5vh\",\n    fontSize: \"1.5em\",\n    paddingLeft: \"0.5em\",\n    paddingRight: \"0.5em\",\n    boxShadow:\n      \"0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)\",\n    color: \"#5c5c5c\",\n    \"&:hover\": {\n      backgroundColor: \"#e6c3bb\",\n      color: \"white\",\n    },\n  },\n  accountButton: {\n    width: \"10em\",\n    backgroundColor: \"#aedaa5\",\n    fontFamily: \"Itim\",\n    margin: \"0.5vh\",\n    fontSize: \"1.5em\",\n    paddingLeft: \"0.5em\",\n    paddingRight: \"0.5em\",\n    boxShadow:\n      \"0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)\",\n    color: \"#5c5c5c\",\n    \"&:hover\": {\n      backgroundColor: \"#a2bb9d\",\n      color: \"white\",\n    },\n  },\n  inventoryButton: {\n    width: \"10em\",\n    backgroundColor: \"#e0c8df\",\n    fontFamily: \"Itim\",\n    margin: \"0.5vh\",\n    fontSize: \"1.5em\",\n    paddingLeft: \"0.5em\",\n    paddingRight: \"0.5em\",\n    boxShadow:\n      \"0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)\",\n    color: \"#5c5c5c\",\n    \"&:hover\": {\n      backgroundColor: \"#c9bcc8\",\n      color: \"white\",\n    },\n  },\n  wallet: {\n    display: \"flex\",\n    alignItems: \"center\",\n    backgroundColor: \"antiquewhite\",\n    width: \"10rem\",\n    justifyContent: \"space-around\",\n    padding: \"0.5em\",\n    borderRadius: \"1.75rem\",\n    fontFamily: \"Itim\",\n    color: \"grey\",\n    fontSize: \"2em\",\n    lineHeight: 0,\n  },\n  walletContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    margin: \"3rem\",\n  },\n  calendarContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: \"1.5rem\",\n  },\n  midContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n  },\n  cardContainer: {\n    display: \"inline-flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    backgroundColor: \"rgb(255, 255, 255, 0.9)\",\n    borderRadius: \"2rem\",\n    width: \"19vw\",\n    height: \"fit-content\",\n    padding: \"1.2em\",\n  },\n  weatherContainer: {\n    display: \"inline-flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    backgroundColor: \"rgb(255, 255, 255, 0.9)\",\n    borderRadius: \"2rem\",\n    width: \"19vw\",\n    height: \"fit-content\",\n    padding: \"1.5em\",\n    width: \"15rem\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20rem\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"20rem\",\n    },\n  },\n  potContainer: {\n    display: \"inline-flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    backgroundColor: \"rgb(255, 255, 255, 0.9)\",\n    borderRadius: \"2rem\",\n    width: \"19vw\",\n    height: \"fit-content\",\n    padding: \"1.5em\",\n    width: \"15rem\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20rem\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"20rem\",\n      paddingLeft: \"2em\",\n    },\n  },\n  listContainer: {\n    display: \"inline-flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    backgroundColor: \"rgb(255, 255, 255, 0.9)\",\n    borderRadius: \"2rem\",\n    width: \"19vw\",\n    height: \"fit-content\",\n    padding: \"1.5em\",\n    width: \"20rem\",\n  },\n}));\n\nexport default function DashboardPage(props) {\n  const { state, streak, day, setDay, id, coins, setCoins } = props;\n  const { unlocked, actions } = state;\n  const classes = useStyles();\n  // const [coins, setCoins] = useState(streak * 100);\n\n  // Go to next day\n  const changeDay = () => {\n    if (day >= 1 && day < 3) {\n      setDay((prev) => prev + 1);\n    }\n  };\n\n  useEffect(() => {\n    if (id === 2) {\n      setCoins(0);\n    }\n  }, [id]);\n\n  // useEffect(() => {\n  //   const today = getCurrentDate();\n  //   // Get array of unlocked dates in \"yyyy-mm-dd\"\n  //   const currentUnlocked = unlocked.map(obj => obj.date_unlocked.slice(0, 10));\n  //   if (currentUnlocked.includes(today)) {\n  //     setCoins(prev => prev + 100);\n  //   } else {\n  //     setCoins(streak * 100)\n  //   }\n  // }, [streak])\n\n  // Theme\n  const [darkMode, setDarkMode] = useState(false);\n\n  const theme = createMuiTheme({\n    palette: {\n      type: darkMode ? \"dark\" : \"light\",\n    },\n  });\n\n  return (\n    <ThemeProvider>\n      <header>\n        <NavBar />\n        {/* <h1>Welcome {props.state.account[0].name}!</h1> */}\n      </header>\n      <section className={classes.root}>\n        <Grid container spacing={3} className={classes.container}>\n          <Grid Grid item xs={12} sm={6} md={4} className={classes.grid1}>\n            <div className={classes.cardContainer}>\n              <SMSForm />\n            </div>\n            <div className={classes.calendarContainer}>\n              <CalendarApp state={state} day={day} />\n            </div>\n\n            <div>\n              <IconButton onClick={changeDay}>\n                <DoubleArrowRoundedIcon className={classes.iconButton} />\n              </IconButton>\n            </div>\n          </Grid>\n          <Grid item xs={12} sm={6} md={4} className={classes.grid2}>\n            {/* <section> */}\n            {/* <article> */}\n            <h2 style={{ color: \"grey\" }}>CURRENT STREAK IS</h2>\n            <div className={(classes.midContainer, classes.streakNum)}>\n              <h1>{streak}</h1>\n            </div>\n            <h3 style={{ color: \"grey\" }}>DAYS</h3>\n            {/* </article> */}\n            <article className={classes.listContainer}>\n              <Grid>\n                <Button\n                  className={classes.listButton}\n                  component={Link}\n                  to=\"/lists\"\n                >\n                  My Lists\n                </Button>\n              </Grid>\n              <Grid>\n                <Button\n                  className={classes.collectionButton}\n                  component={Link}\n                  to=\"/cats\"\n                >\n                  My Collection\n                </Button>\n              </Grid>\n              <Grid>\n                <Button\n                  className={classes.accountButton}\n                  component={Link}\n                  to=\"/account\"\n                >\n                  My Account\n                </Button>\n              </Grid>\n              <Grid>\n                <Button\n                  className={classes.inventoryButton}\n                  component={Link}\n                  to=\"/inventory\"\n                >\n                  My Inventory\n                </Button>\n              </Grid>\n              <article className={classes.walletContainer}>\n                <div className={classes.wallet}>\n                  <h1>{coins}</h1>\n                  <img\n                    className={classes.coin}\n                    src=\"https://meowtivate.s3-us-west-2.amazonaws.com/miscellaneous/meowcoin.png\"\n                    alt=\"meowcoin\"\n                  />\n                </div>\n              </article>\n            </article>\n            {/* </section> */}\n          </Grid>\n          <Grid item xs={12} sm={12} md={4} className={classes.grid3}>\n            <Grid>\n              <article xs={12} sm={6} className={classes.weatherContainer}>\n                <Weather />\n              </article>\n            </Grid>\n            <Grid className={classes.margin}>\n              <article\n                xs={12}\n                sm={6}\n                className={classes.potContainer}\n                style={{ paddingBottom: \"2em\" }}\n              >\n                {/* <h1 style={{color: 'grey', lineHeight: 0}}>Today's Progress</h1> */}\n                <CatPlant actions={actions} state={state} />\n              </article>\n            </Grid>\n          </Grid>\n        </Grid>\n      </section>\n      {/* <Switch\n        checked={darkMode}\n        onChange={() => setDarkMode(!darkMode)}\n      ></Switch> */}\n    </ThemeProvider>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/helpers/stateHelpers.js",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/Weather.js",["188"],"import React from \"react\";\nimport { useState, useEffect, className } from \"react\";\nimport \"./styles/weather.css\";\n\nconst api = {\n  key: process.env.REACT_APP_WEATHER_API_KEY,\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\n// api.openweathermap.org/data/2.5/\n// weather?lat={lat}&lon={lon}&appid={API key}\n\nexport const Weather = () => {\n  // const [city, setCity] = useState(\"\");\n  const [weather, setWeather] = useState(\"\");\n\n  // const search = (event) => {\n  //   if (event.key === \"Enter\") {\n  //     fetch(`${api.base}weather?q=${city}&units=metric&APPID=${api.key}`)\n  //       .then((res) => res.json())\n  //       .then((result) => {\n  //         setWeather(result);\n  //         console.log(result);\n  //       });\n  //   }\n  // };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      fetch(`${api.base}weather?lat=${position.coords.latitude}&lon=${position.coords.longitude}&units=metric&appid=${api.key}`)\n      .then((res) => res.json())\n      .then((result) => {\n        setWeather(result);\n        console.log(result);\n      });\n    });\n  }, [])\n  return (\n    <div\n      className={\n        typeof weather.main != \"undefined\"\n          ? weather.weather[0].main.includes(\"Cloud\")\n            ? \"weather Clouds\"\n            : \"weather\"\n          : \"weather\"\n      }\n    >\n      <section className=\"weather\">\n        {/* <div className=\"weather-search-box\">\n          <input\n            type=\"text\"\n            className=\"city-search-bar\"\n            placeholder=\"City...\"\n            onChange={(e) => setCity(e.target.value)}\n            value={city}\n            onKeyPress={search}\n          />\n        </div> */}\n        {typeof weather.main != \"undefined\" ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location\">\n                {weather.name}, {weather.sys.country}\n              </div>\n            </div>\n            <div className=\"temp\">{Math.round(weather.main.temp)}&deg;c</div>\n            <div className=\"weather\">{weather.weather[0].main}</div>\n            <div><img \n            className={weather.weather[0].main} \n            style={{display: 'block'}} \n            src={`https://meowtivate.s3-us-west-2.amazonaws.com/${weather.weather[0].main}.png`} \n            alt=\"weather-image\"/>\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </section>\n    </div>\n  );\n};\n","/home/minty/lighthouse/meowtivate/front-end/src/components/Calendar-import.js",["189","190","191"],"import React, { useState, useEffect } from \"react\";\n\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\nimport { Calendar } from \"react-modern-calendar-datepicker\";\nimport \"./styles/calendar.css\";\nimport getCurrentDate from \"../helpers/getCurrentDate\";\nimport EcoRoundedIcon from '@material-ui/icons/EcoRounded';\nimport { responsiveFontSizes } from \"@material-ui/core\";\n\nexport const CalendarApp = (props) => {\n  // const defaultValue = {\n  //   year: 2021,\n  //   month: 1,\n  //   day: 1,\n  // };\n  // const [selectedDay, setSelectedDay] = useState(defaultValue);\n  // console.log(\"calender\", props.items);\n\n  // const logDatas = { props };\n  // console.log(\"logDatas\", logDatas);\n  // const date = props.items.filter((item) => item.is_completed === true);\n  // let dayDates = date.map((item) => item.date_created.substring(8, 10));\n  // const parseIntDayArray = dayDates.map((item) => parseInt(item));\n\n  // // [\n  // // here we add some CSS classes\n  // //   { year: 2021, month: 1, day: 4, className: \"purpleDay\" },\n  // // ]\n\n  // let dayObject = parseIntDayArray.map((item) => ({\n  //   year: 2021,\n  //   month: 1,\n  //   day: item,\n  //   className: \"purpleDay\",\n  // }));\n\n  // return (\n  //   <>\n  //     <Calendar\n  //       value={selectedDay}\n  //       onChange={setSelectedDay}\n  //       shouldHighlightWeekends\n  //       customDaysClassName={dayObject}\n  //     />\n  //   </>\n\n  // Show different streak length depending on user id\n  const { state, day } = props;\n  // console.log(\"state in calendar\", state);\n  const { account, unlocked } = state;\n  // console.log(\"account\", account)\n  const id = day ? day : 0;\n  // const id = 4;\n\n  const streak1 = {\n    from: {\n      year: 2021,\n      month: 1,\n      day: 25,\n    },\n    to: {\n      year: 2021,\n      month: 1,\n      day: 27,\n    },\n  };\n  const streak1Add = {\n    from: {\n      year: 2021,\n      month: 1,\n      day: 25,\n    },\n    to: {\n      year: 2021,\n      month: 1,\n      day: 28,\n    },\n  };\n  const streak2 = {\n    from: {\n      year: 2021,\n      month: 1,\n      day: 25,\n    },\n    to: {\n      year: 2021,\n      month: 1,\n      day: 28,\n    },\n  };\n  const streak3 = [];\n  const streaksArray = [streak1, streak2, streak3, streak1Add];\n  const initialStreak = streaksArray[id - 1];\n\n  // Show different today selection depending on user id\n  const today1 = { year: 2021, month: 1, day: 28, className: \"todaySelect\" };\n  const today2 = { year: 2021, month: 1, day: 29, className: \"todaySelect\" };\n  const today3 = { year: 2021, month: 1, day: 30, className: \"todaySelect\" };\n  const todayArray = [today1, today2, today3];\n  const initialToday = todayArray[id - 1];\n\n  useEffect(() => {\n    setSelectedDayRange(streaksArray[id - 1]);\n    setToday(todayArray[id - 1]);\n    // console.log(\"id in useEffect\", id);\n  }, [account]);\n\n  const [selectedDayRange, setSelectedDayRange] = useState(initialStreak);\n  const [today, setToday] = useState(initialToday);\n\n  useEffect(() => {\n    const today = getCurrentDate();\n    const currentUnlocked = unlocked.map((obj) =>\n      obj.date_unlocked.slice(0, 10)\n    );\n    const todayUnlockExists = currentUnlocked.includes(today);\n\n    // console.log(\"calendar id\", id === 1);\n    // console.log(\"calendar todayUnlockExists\", todayUnlockExists);\n    if (id === 1 && todayUnlockExists) {\n      setSelectedDayRange(streak1Add);\n    }\n  }, [unlocked]);\n\n  return (\n    <Calendar\n      value={selectedDayRange}\n      onChange={setSelectedDayRange}\n      // colorPrimary=\"#0fbcf9\" // Range start and end\n      // colorPrimaryLight=\"rgba(75, 207, 250, 0.4)\" // Range middle\n      calendarTodayClassName=\"custom-today-day\"\n      calendarClassName=\"responsive-calendar\"\n      shouldHighlightWeekends\n      customDaysClassName={[\n        // here we add some CSS classes\n        today,\n      ]}\n      renderFooter={() => (\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            padding: \"1rem 2rem\",\n          }}\n          className=\"footer\"\n        >\n          <EcoRoundedIcon/> CURRENT STREAK\n        </div>\n      )}\n    />\n  );\n};\n","/home/minty/lighthouse/meowtivate/front-end/src/components/SMSForm.js",["192","193","194","195"],"import React, { Component, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\n\nimport \"./styles/SMSForm.css\";\n\nclass SMSForm extends Component {\n  constructor(props) {\n    // console.log(\"props\", props);\n    super(props);\n\n    this.state = {\n      tasks: [],\n      timer: \"\",\n      message: {\n        to: \"\",\n        body: \"\",\n      },\n      submitting: false,\n      error: false,\n      currentTime: \"\",\n      alarmTime: \"\",\n    };\n    // this.onSubmit = this.onSubmit.bind(this);\n    this.setAlarmTime = this.setAlarmTime.bind(this);\n  }\n  componentDidMount() {\n    axios.get(`/api/actions/1`).then((res) => {\n      // console.log(res.data);\n      const tasks = [...res.data];\n      const undone = tasks.filter((item) => item.is_completed !== true);\n      const undoneList = undone.map((item) => \"\\n 🐈 \" + item.action_name);\n      const msg =\n        \"_________________\" +\n        \"\\n⏰ Reminder from Meowtivate!  \\n🐈 Here are your \" +\n        undoneList.length +\n        \" unfinished tasks for today: \" +\n        undoneList;\n      this.setState({\n        message: { ...this.state.message, body: msg },\n      });\n    });\n    this.clock = setInterval(() => this.setCurrentTime(), 1000);\n    this.interval = setInterval(() => this.checkAlarmClock(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.clock);\n    clearInterval(this.interval);\n  }\n\n  setCurrentTime() {\n    this.setState({\n      currentTime: new Date().toLocaleTimeString(\"en-US\", { hour12: false }),\n    });\n  }\n\n  setAlarmTime(event) {\n    event.preventDefault();\n    const inputAlarmTimeModified = event.target.value + \":00\";\n    this.setState({\n      alarmTime: inputAlarmTimeModified,\n    });\n  }\n\n  checkAlarmClock() {\n    if (this.state.alarmTime == \"undefined\" || !this.state.alarmTime) {\n      this.alarmMessage = \"Set up a reminder:\";\n    } else {\n      this.alarmMessage = \"Your alarm is set for \" + this.state.alarmTime + \".\";\n      if (this.state.currentTime === this.state.alarmTime) {\n        this.setState({ submitting: true });\n        fetch(\"/api/messages\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(this.state.message),\n        })\n          .then((res) => res.json())\n          .then((data) => {\n            if (data.success) {\n              this.setState({\n                error: false,\n                submitting: false,\n                message: {\n                  body: \"\",\n                },\n              });\n            } else {\n              this.setState({\n                error: true,\n                submitting: false,\n              });\n            }\n          });\n        swal({\n          title: \"Reminder from Meowtivate!!\",\n          text: this.state.message.body,\n          icon: \"warning\",\n          dangerMode: true,\n        });\n      } else {\n        // console.log(\"Still have some time\");\n      }\n    }\n  }\n\n  render() {\n    const { tasks } = this.state;\n    const undone = tasks.filter((item) => item.is_completed !== true);\n    // console.log(\"undone\", undone);\n    // console.log(\"this.setState\", this.state.message);\n    // console.log(JSON.stringify(this.state.message));\n    const undoneList = undone.length ? (\n      undone.map((item) => {\n        return (\n          <div>\n            <li key={item.id}>{item.action_name}</li>\n          </div>\n        );\n      })\n    ) : (\n      <div>All done for today!</div>\n    );\n    return (\n      <form\n        onSubmit={this.onSubmit}\n        className={this.state.error ? \"error sms-form\" : \"sms-form\"}\n      >\n        <div>\n          <h2>{this.state.currentTime}</h2>\n          <p>{this.alarmMessage}</p>\n          <form>\n            <input type=\"time\" onChange={this.setAlarmTime}></input>\n          </form>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default SMSForm;\n","/home/minty/lighthouse/meowtivate/front-end/src/components/GalleryContainer.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/InventoryItem.jsx",["196","197"],"import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  pot: {\n    height: \"8rem\",\n    position: \"relative\",\n    bottom: 0,\n    left: 0,\n  },\n  card: {\n    height: \"18rem\",\n    minwidth: \"8rem\",\n    paddingBottom: \"1rem\",\n    paddingTop: \"3rem\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"20rem\",\n    },\n  },\n  isDefault: {\n    position: \"relative\",\n    bottom: \"14rem\",\n    transform: \"rotate(-15deg)\",\n    color: \"indianred\",\n    fontFamily: \"Itim\",\n    fontSize: \"3em\",\n  },\n  article: {\n    backgroundColor: \"rgb(255,255,255, 0.7)\",\n    padding: \"3rem\",\n    borderRadius: \"2rem\",\n    minHeight: \"3vh\",\n    height: \"18rem\",\n    width: '14rem',\n  },\n}));\n\nexport default function InventoryItem(props) {\n  const classes = useStyles();\n  const { setDefaultPot, pot_id } = props;\n  console.log(\"id in InventoryItem\", pot_id);\n\n  return (\n    <Grid item xs={6} sm={4} md={3} >\n      <article className={classes.article} onClick={() => setDefaultPot(1, pot_id)}>\n        {/* <CardContent className={classes.card}> */}\n          <header className=\"meow-item-header\">\n            <img\n              className={classes.pot}\n              src={props.image}\n              alt={props.name}\n              style={{ paddingTop: \"2rem\" }}\n            />\n            <h2 className=\"meow-item-header-name\">{props.name}</h2>\n          </header>\n          <main className=\"meow-item-description\">\n            <p className={classes.footer}>{props.description}</p>\n          </main>\n          <footer className=\"meow-item-footer\">\n            {props.isDefault && <h1 className={classes.isDefault}>SELECTED</h1>}\n          </footer>\n        {/* </CardContent> */}\n      </article>\n    </Grid>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/components/ListsContainer.jsx",["198","199","200","201","202"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ActionList from \"./ActionList\";\nimport CatPlant from \"./CatPlant\";\nimport Progress from \"./Progress\";\nimport UnlockBadge from \"./UnlockBadge\";\nimport calculateChecked from \"../helpers/calculateChecked\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginLeft: '10vw',\n    marginRight: '10vw',\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n    color: \"grey\",\n    lineHeight: 0,\n    paddingTop: \"2rem\",\n    paddingBottom: \"2rem\",\n    fontSize: \"2em\",\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"1em\",\n      padding: \"1em\",\n      letterSpacing: \"3px\",\n    },\n  },\n  plantbox: {\n    position: \"static\",\n    zIndex: 1,\n    minWidth: \"10vw\",\n    minHeight: \"28vh\",\n  },\n  article: {\n    backgroundColor: \"rgb(201,188,200, 0.4)\",\n    padding: \"2rem\",\n    borderRadius: \"2rem\",\n    minHeight: \"35vh\",\n  },\n  progress: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  subtitle: {\n    color: \"grey\",\n    lineHeight: 1,\n    fontSize: \"1.5em\",\n    [theme.breakpoints.down(\"xs\")]: {\n      paddingTop: \"0\",\n    },\n  },\n  list: {\n    height: \"20vh\",\n  },\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    paddingLeft: '10vw',\n    paddingRight: '10vw',\n  },\n  potGrid: {\n    paddingLeft: \"3rem\",\n  },\n}));\n\nexport default function ListContainer(props) {\n  const { state, actionFunctions, catFunctions, user } = props;\n  const { actions, todos, habits, unlocked, streaks, logDatas } = state;\n  const classes = useStyles();\n\n  const completed = actions.filter((obj) => obj.is_completed === true);\n  const checkedHabits = completed.filter((obj) => obj.category_id === 2);\n  const checkedTodos = completed.filter((obj) => obj.category_id === 1);\n  const habitIDs = calculateChecked(checkedHabits);\n  const todoIDs = calculateChecked(checkedTodos);\n\n  const totalAmount = actions.length;\n  const completedAmount = completed.length;\n  const completedPercentage = completedAmount / totalAmount;\n  const undoneAmount = totalAmount - completedAmount;\n\n  let today = new Date();\n  const dd = String(today.getDate()).padStart(2, \"0\");\n  const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0\n  const yyyy = today.getFullYear();\n  today = `${yyyy}-${mm}-${dd}`;\n\n  return (\n    <>\n      <UnlockBadge state={state} catFunctions={catFunctions} />\n      <h2 className={classes.header}>LET'S GET LOTS DONE TODAY!</h2>\n      <Grid className={classes.container} container spacing={4}>\n        <Grid item xs={11} sm={5.5} md={4}>\n          <article className={classes.article}>\n            <h3 className={classes.subtitle}>DAILY HABITS</h3>\n            <ActionList\n              className={classes.lists}\n              items={habits}\n              category={2}\n              actionFunctions={actionFunctions}\n              initChecked={habitIDs}\n            />\n          </article>\n        </Grid>\n        <Grid item xs={11} sm={5.5} md={4}>\n          <article className={classes.article}>\n            <h3 className={classes.subtitle}>TO-DO LIST</h3>\n            <ActionList\n              items={todos}\n              category={1}\n              actionFunctions={actionFunctions}\n              initChecked={todoIDs}\n            />\n          </article>\n        </Grid>\n        <Grid item xs={8} sm={8} md={3} className={classes.potGrid}>\n          <article className={classes.article}>\n            <div className={classes.plantbox}>\n              <h3 className={classes.subtitle}>TODAY'S PROGRESS</h3>\n              <CatPlant\n                className={classes.pot}\n                actions={actions}\n                state={state}\n              />\n            </div>\n          </article>\n        </Grid>\n        <Grid item xs={3} sm={3} md={1}>\n          <article>\n            {/* <h3 className={classes.subtitle} style={{ lineHeight: 0 }}>\n              100%\n            </h3> */}\n            <div className={classes.progress}>\n              <Progress\n                completedPercentage={completedPercentage}\n                completedAmount={completedAmount}\n                totalAmount={totalAmount}\n              />\n            </div>\n          </article>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n// console.log(\"rightnow\", today);\n\n// useEffect(() => {\n//   if (streaks) {\n//     return () => {\n//       const currentStreaksE = streaks.map((obj) =>\n//         obj.date_update.slice(0, 10)\n//       );\n//       const todayStreakExists = currentStreaksE.includes(today);\n//       const currentLog = logDatas.map((obj) => obj.date_created.slice(0, 10));\n//       const todayLogExists = currentLog.includes(today);\n\n//       if (completedPercentage >= 1 && !todayStreakExists) {\n//         let val = streaks[0].current_streak + 1;\n//         updateStreak(1, val);\n//       }\n//       if (completedPercentage >= 1 && !todayLogExists) {\n//         postLogData(1, today);\n//       }\n//     };\n//   }\n// }, [streaks, logDatas]);\n\n// console.log(\"Does the streaks changes?\", streaks);\n// console.log(\"Does the logDatas changes?\", logDatas);\n\n// console.log(\"Does toady\", todayStreakExists);\n// const getStreak = (streaks) => {\n//   if (!streaks) {\n//     return streaks[0].current_streak;\n//   }\n//   const current_streak = getStreak(streaks);\n//   console.log(\"curren_streak\", current_streak);\n//   return \"updating streak\";\n// };\n// const currentUser = user.accounts[0].username;\n// console.log(\"user\", currentUser);\n","/home/minty/lighthouse/meowtivate/front-end/src/components/NavBar.jsx",["203"],"import React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Menu from './Menu';\n\nconst useStyles = makeStyles((theme) => ({\n  logo: {\n    fontFamily: \"itim\",\n    letterSpacing: \"8px\",\n    textAlign: \"center\",\n    fontSize: \"3rem\",\n    paddingBottom: '3vh',\n    marginTop: '0px',\n  },\n  menu: {\n    textAlign: \"start\",\n    backgroundColor: \"lightblue\"\n  }\n}));\n\nexport default function SimpleMenu() {\n  const classes = useStyles();\n\n  return (\n    <header className={classes.menu}>\n      <Menu />\n      <h1 className={classes.logo}>Meowtivate</h1>\n    </header>\n  )\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/components/ShopItem.jsx",["204","205","206","207"],"import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport MonetizationOnRoundedIcon from \"@material-ui/icons/MonetizationOnRounded\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nconst useStyles = makeStyles((theme) => ({\n  pot: {\n    flexGrow: 1,\n    width: \"7rem\",\n  },\n  // card: {\n  //   height: \"24rem\",\n  //   minWidth: \"12rem\",\n  //   paddingBottom: \"1rem\",\n  //   paddingTop: \"2rem\",\n  // },\n  card: {\n    backgroundColor: \"rgb(255,255,255, 0.7)\",\n    padding: \"3rem\",\n    borderRadius: \"2rem\",\n    height: \"24rem\",\n    width: \"12rem\",\n  },\n  footer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  price: {\n    paddingRight: \"0.5rem\",\n    fontFamily: \"Itim\",\n    fontSize: \"1.5em\",\n    color: \"grey\",\n  },\n  buyButton: {\n    backgroundColor: \"#e2568e\",\n    fontFamily: \"Varela Round\",\n    marginLeft: \"1rem\",\n    paddingLeft: \"0.75em\",\n    paddingRight: \"1em\",\n    boxShadow:\n      \"0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)\",\n    color: \"white\",\n    \"&:hover\": {\n      backgroundColor: \"#aa5879\",\n      color: \"white\",\n    },\n  },\n  warning: {\n    color: \"indianred\",\n    fontFamily: \"Itim\",\n    position: \"relative\",\n    fontSize: \"1.5em\",\n  },\n  pot: {\n    width: \"8rem\",\n    position: \"relative\",\n    bottom: 0,\n    left: 0,\n  },\n}));\n\nexport default function ShopItem(props) {\n  const classes = useStyles();\n  const { addPot, id, price, coins, setCoins, inventory } = props;\n  const [isSold, setIsSold] = useState(false);\n\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n  const buyItem = (user_id, pot_id) => {\n    setCoins((prev) => prev - price);\n    setIsSold(true);\n    addPot(user_id, pot_id);\n  };\n\n  // Build array of inventory pot_ids\n  const potIDs = inventory.map((obj) => obj.pot_id);\n\n  console.log(`Coin in pot ${id}:`, coins);\n  // useEffect(() => {\n  //   if (isSold) {\n  //     setCoins(prev => prev - price)\n  //   }\n  // }, [isSold])\n\n  return (\n    <Grid\n      item\n      xs={6}\n      sm={4}\n      md={3}\n      alignItems={matches ? \"flex-start\" : \"center\"}\n    >\n      <article className={classes.card}>\n        <header className=\"meow-item-header\">\n          <img\n            className={classes.pot}\n            src={props.image}\n            alt={props.name}\n            price={props.price}\n            // style={props.style}\n          />\n          <h2 className=\"meow-item-header-name\" style={{ color: \"#5c5c5c\" }}>\n            {props.name}\n          </h2>\n        </header>\n        <main className=\"meow-item-description\">\n          <p>{props.description}</p>\n        </main>\n        <footer className={classes.footer} style={{ lineHeight: \"0.25em\" }}>\n          <h2 className={classes.price}>{props.price}</h2>\n          <img\n            className={classes.coin}\n            src=\"https://meowtivate.s3-us-west-2.amazonaws.com/miscellaneous/meowcoin.png\"\n            alt=\"meowcoin\"\n            style={{ height: \"2.5rem\" }}\n          />\n          {price > coins ? (\n            <Button className={classes.buyButton} variant=\"contained\" disabled>\n              <MonetizationOnRoundedIcon style={{ paddingRight: \"0.25em\" }} />\n              BUY\n            </Button>\n          ) : potIDs.includes(id) ? (\n            <Button className={classes.buyButton} variant=\"contained\" disabled>\n              <MonetizationOnRoundedIcon style={{ paddingRight: \"0.25em\" }} />\n              BUY\n            </Button>\n          ) : (\n            <Button\n              className={classes.buyButton}\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => buyItem(1, id)}\n            >\n              <MonetizationOnRoundedIcon style={{ paddingRight: \"0.25em\" }} />\n              BUY\n            </Button>\n          )}\n        </footer>\n\n        {potIDs.includes(id) ? (\n          <h2 className={classes.warning}>ALREADY IN INVENTORY</h2>\n        ) : isSold ? (\n          <h2 className={classes.warning}>ALREADY IN INVENTORY</h2>\n        ) : (\n          \"\"\n        )}\n      </article>\n    </Grid>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/components/CatPlant.jsx",["208","209","210"],"import React, {useState, useEffect} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles(theme => ({\n  pot: {\n    display: 'block',\n    width: '12vw',\n    position:'absolute',\n    bottom: '0px',\n    left: 'calc(50% - 6vw)',\n    zIndex: 2,\n  },\n  plant: {\n    opacity: 0,\n    width: '13vw',\n    position:'relative',\n    zIndex: 1,\n  },\n  plantContainer: {\n  position: 'relative',\n\n  },\n  animatedItem: {\n    animation: `$myEffect 1500ms ${theme.transitions.easing.easeInOut}`,\n\n  },\n\n  \"@keyframes myEffect\": {\n    '0%': {\n      transform: 'translateY(30%)',\n      opacity: 0,\n\n    },\n    '16%': {\n      transform: 'translateY(-3%)',\n      opacity: 1,\n\n    },\n    '28%': {\n      transform: 'translateY(5%)',\n\n    },\n    '44%': {\n      transform: 'translateY(-2%)'\n    },\n    '59%': {\n      transform: 'translateY(0%)'\n    },\n    '73%': {\n      transform: 'translateY(0%)'\n    },\n    '88%': {\n      transform: 'translateY(0%)'\n    },\n    '100%': {\n      transform: 'translateY(0%)'\n    }, \n  }\n}));\n\nexport default function CatPlant(props) {\n  const classes = useStyles();\n  const { actions } = props;\n  const [start, setStart] = React.useState(false);\n  let timer;\n\n  // Calculate percentage\n  const totalAmount = actions.length;\n  const totalCompleted = actions.filter(obj => obj.is_completed === true).length;\n  const initial = ( totalCompleted / totalAmount ) * 100;\n  const num = Math.floor(initial / 10) * 10;\n\n  // const [percentage, setPercentage] = useState(initial);\n  \n  useEffect(() => {\n    setStart(true);\n    timer = setTimeout(() => setStart(false), 1500);\n  }, [actions])\n\n  useEffect(() => {\n    return () => clearInterval(timer);\n  }, [start])\n\n  return (\n      <div className={classes.plantContainer}>\n        <img className={clsx(classes.plant,\n          {[classes.animatedItem]: start}\n        )} src={`https://meowtivate.s3-us-west-2.amazonaws.com/plants/${num}plant.png`} alt=\"plant\" style={{opacity: 1}}/>\n        <img className={classes.pot} src=\"https://meowtivate.s3-us-west-2.amazonaws.com/pots/01pot.png\" alt=\"pot\"/>\n      </div>\n);\n}","/home/minty/lighthouse/meowtivate/front-end/src/components/GalleryItem.js",["211","212"],"import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    height: \"10rem\",\n  },\n  card: {\n    minHeight: \"22rem\",\n    minWidth: \"12rem\",\n    backgroundColor: \"darkkhaki\",\n  },\n}));\n\nexport default function GalleryItem(props) {\n  const classes = useStyles();\n\n  return (\n    <Grid item xs={6} sm={3}>\n      <Card className={classes.card}>\n        <CardContent>\n          <header className=\"meow-item-header\">\n            <img\n              className={classes.root}\n              src={props.avatar}\n              alt={props.name}\n              style={props.style}\n            />\n            <h2 className=\"meow-item-header-name\">{props.name}</h2>\n          </header>\n          <main className=\"meow-item-description\">\n            <p>{props.description}</p>\n          </main>\n          <footer className=\"meow-item-footer\">\n            {/* {props.date.substring(0, 10)} */}\n          </footer>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/helpers/calculateChecked.js",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/Progress.jsx",["213","214","215"],"import React from \"react\";\nimport \"./progress.css\";\n\nfunction Progress(props) {\n  // console.log(\"currentStreaks\", props);\n\n  const {\n    completedPercentage,\n    completedAmount,\n    totalAmount,\n    currentStreaks,\n  } = props;\n\n  return (\n    <div className=\"progress\">\n      <div\n        className=\"todos-completed\"\n        style={{ width: `${completedPercentage * 100}%` }}\n      ></div>\n      <p>\n        Completed {completedAmount} / {totalAmount}\n      </p>\n      <p>Here is your current streak: {currentStreaks}</p>\n    </div>\n  );\n}\n\nexport default Progress;\n","/home/minty/lighthouse/meowtivate/front-end/src/components/UnlockBadge.jsx",["216","217","218"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport getCurrentDate from '../helpers/getCurrentDate';\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n  displaY: {\n    display: 'block'\n  },\n  root: {\n    flexGrow: 1,\n    maxHeight: \"20rem\",\n    position: \"absolute\",\n    top: \"calc(50% - 10rem)\",\n    left: \"calc(50% - 10rem)\",\n    zIndex: 100,\n  },\n  cat: {\n    height: \"15rem\",\n    position: \"absolute\",\n    top: \"calc(50% - 6.5rem)\",\n    left: \"calc(50% - 6.5rem)\",\n    zIndex: 101,\n  },\n  text: {\n    color: \"#429690\",\n    fontFamily: \"Itim\",\n    fontSize: \"3.5em\",\n    position: \"absolute\",\n    top: \"calc(50% + 3rem)\",\n    left: \"calc(50% - 4.25em)\",\n    zIndex: 102,\n    // WebkitTextStroke: 'darksalmon',\n    // WebkitTextStrokeWidth: 'thin',\n  },\n  animatedItem: {\n    animation: `$myEffect 10000ms infinite linear`,\n\n  },\n  \"@keyframes myEffect\": {\n    '0%': {\n      transform: 'rotate(0deg)',\n    },\n    '100%': {\n      transform: 'rotate(360deg)',\n    }, \n  }\n}));\n\nexport default function UnlockBadge(props) {\n  const classes = useStyles();\n  const { state, catFunctions } = props;\n  const { actions, unlocked, allCats } = state;\n  const { addUnlocked } = catFunctions;\n  const [display, setDisplay] = useState({ display: \"none\" });\n  const [catID, setCatID] = useState(\"01\");\n\n  //click away hook\n  const [open, setOpen] = React.useState(false);\n\n  // Calculate percentage of actions done\n  const totalAmount = actions.length;\n  const totalCompleted = actions.filter((obj) => obj.is_completed === true)\n    .length;\n  const initial = (totalCompleted / totalAmount) * 100;\n  const percentage = Math.floor(initial / 10) * 10;\n\n  // Get current date\n  // let today = new Date();\n  // const dd = String(today.getDate()).padStart(2, \"0\");\n  // const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0\n  // const yyyy = today.getFullYear();\n  // today = `${yyyy}-${mm}-${dd}`;\n  // let today = new Date();\n  // const dd = String(today.getDate()).padStart(2, '0');\n  // const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0\n  // const yyyy = today.getFullYear();\n  // today = `${yyyy}-${mm}-${dd}`;\n  const today = getCurrentDate();\n\n  // console.log(\"date (unlocked)\", today)\n  // console.log(\"unlocked\", unlocked);\n\n  const currentUnlocked = unlocked.map((obj) => obj.date_unlocked.slice(0, 10));\n  const todayUnlockExists = currentUnlocked.includes(today);\n\n  //Decide whether to display badge\n  const decideDisplay = (percentage) => {\n    console.log(\"does unlock exist today?\", todayUnlockExists);\n\n    // If 100% complete and an unlock for today doesn't exist, unlock a cat\n    if (percentage === 100 && !todayUnlockExists) {\n      // Get locked cats IDs array\n      const unlockedCatsIDs = unlocked.map((obj) => obj.id);\n      const lockedCats = allCats.filter(\n        (obj) => !unlockedCatsIDs.includes(obj.id)\n      );\n      const lockedCatsIDs = lockedCats.map((obj) => obj.id);\n\n      // Randomly choose one from a range\n      const randomCatID =\n        lockedCatsIDs[Math.floor(Math.random() * lockedCatsIDs.length)];\n\n      // If cat_id is single digit, convert to string with 0 in front\n      if (randomCatID <= 9) {\n        setCatID(`0${randomCatID.toString()}`);\n      } else {\n        setCatID(randomCatID.toString());\n      }\n\n      setDisplay({ display: \"block\" });\n      setOpen(true);\n\n      // console.log(\"catID\", catID);\n      // console.log(\"display\", display);\n    }\n  };\n\n  // Run function to decide display\n  useEffect(() => {\n    // console.log(\"CURRENT PERCENTAGE IN USEEFFECT\", percentage);\n    if (percentage < 100) {\n      setDisplay({ display: \"none\" });\n    }\n    decideDisplay(percentage);\n  }, [actions]);\n\n  useEffect(() => {\n    // Call function to send POST req + change 'unlocked' state\n    // Takes in a cat_id and user_id\n    // console.log(\"display in useEffect\", display);\n    if (display.display === \"block\") {\n      addUnlocked(Number(catID), 1);\n    }\n  }, [display]);\n\n  const handleClickAway = () => {\n    setOpen(false);\n  };\n\n  return (\n    <ClickAwayListener onClickAway={handleClickAway}>\n      <div className={classes.display} style={display}>\n      {open ? (<>\n        <img \n          className={clsx(classes.root,classes.animatedItem)} \n          src='https://meowtivate.s3-us-west-2.amazonaws.com/unlock_badge.png' \n          alt='unlock_badge'/>\n        <img \n          className={classes.cat} \n          src={`https://meowtivate.s3-us-west-2.amazonaws.com/${catID}cat.png`}/>\n        <h2 className={classes.text}> CONGRATULATIONS!</h2>\n        </>) : null}\n      </div>\n    </ClickAwayListener>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/components/ActionList.jsx",["219"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport DeleteRoundedIcon from \"@material-ui/icons/DeleteRounded\";\nimport UnfoldMoreRoundedIcon from \"@material-ui/icons/UnfoldMoreRounded\";\nimport SaveRoundedIcon from \"@material-ui/icons/SaveRounded\";\nimport Popup from \"./Popup\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    fontFamily: \"Varela Round\",\n  },\n}));\n\nexport default function ActionList(props) {\n  const { items, category, actionFunctions, initChecked } = props;\n  const {\n    deleteAction,\n    addAction,\n    editActionName,\n    editCompletedState,\n  } = actionFunctions; // State changing funcs from useApplicationData\n  const classes = useStyles();\n\n  console.log(\"checked in ActionList\", initChecked);\n\n  // Toggle between VIEW and EDIT modes\n  const [isEditable, setIsEditable] = useState(false);\n  const modeToggle = () => setIsEditable(!isEditable);\n\n  // Toggle checkbox\n  // checked is an array of numbers that represent checked actionIDs\n  const [checked, setChecked] = useState(initChecked);\n\n  const handleToggle = (value, evt) => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      // if value isn't in checked, add it\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1); // else remove from checked\n    }\n\n    setChecked(newChecked);\n    editCompletedState(value, evt.target.checked); // Update state\n  };\n\n  // Popup state\n  const [popupState, setPopupState] = useState({\n    open: false,\n    type: \"\",\n    actionID: 0, // action_id for EDITING, otherwise 0 for ADDING\n    actionName: \"\",\n  });\n\n  // Popup functions\n  const handleClickOpen = (type, id, name) => {\n    setPopupState((prev) => ({\n      ...prev,\n      open: true,\n      type: type,\n      actionID: id,\n      actionName: name,\n    }));\n  };\n\n  const cancel = () => {\n    setPopupState((prev) => ({\n      ...prev,\n      open: false,\n    }));\n  };\n\n  const confirmDelete = (actionID) => {\n    deleteAction(actionID);\n    setPopupState((prev) => ({\n      ...prev,\n      open: false,\n    }));\n  };\n\n  const confirmAdd = (name, categoryID) => {\n    addAction(name, categoryID);\n    setPopupState((prev) => ({\n      ...prev,\n      open: false,\n    }));\n  };\n\n  const confirmEdit = (actionID, name) => {\n    editActionName(actionID, name);\n    setPopupState((prev) => ({\n      ...prev,\n      open: false,\n    }));\n  };\n\n  return (\n    <List className={classes.root}>\n      {items\n        .sort(function (a, b) {\n          return a.id - b.id;\n        })\n        .map((obj) => {\n          const labelId = `checkbox-list-label-${obj.id}`;\n          return (\n            <ListItem\n              key={obj.id}\n              role={undefined}\n              dense\n              button\n              onClick={(evt) => handleToggle(obj.id, evt)}\n            >\n              <ListItemIcon>\n                <Checkbox\n                  edge=\"start\"\n                  checked={obj.is_completed}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ \"aria-labelledby\": labelId }}\n                />\n              </ListItemIcon>\n              <ListItemText id={labelId} primary={obj.action_name} />\n              {isEditable && (\n                <ListItemSecondaryAction>\n                  <IconButton edge=\"end\" aria-label=\"drag\">\n                    <UnfoldMoreRoundedIcon />\n                  </IconButton>\n                  <IconButton edge=\"end\" aria-label=\"delete\">\n                    <DeleteRoundedIcon\n                      onClick={() =>\n                        handleClickOpen(\"Delete\", obj.id, obj.action_name)\n                      }\n                    />\n                  </IconButton>\n                  <IconButton edge=\"end\" aria-label=\"edit\">\n                    <EditRoundedIcon\n                      onClick={() =>\n                        handleClickOpen(\"Edit\", obj.id, obj.action_name)\n                      }\n                    />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              )}\n            </ListItem>\n          );\n        })}\n\n      {isEditable ? (\n        <>\n          <IconButton>\n            <AddCircleIcon onClick={() => handleClickOpen(\"Add\", 0, \"\")} />\n          </IconButton>\n          <IconButton onClick={modeToggle}>\n            <SaveRoundedIcon />\n          </IconButton>\n        </>\n      ) : (\n        <IconButton onClick={modeToggle}>\n          <EditRoundedIcon />\n        </IconButton>\n      )}\n\n      <Popup\n        cancel={cancel}\n        confirmDelete={confirmDelete}\n        confirmAdd={confirmAdd}\n        confirmEdit={confirmEdit}\n        popupState={popupState}\n        category={category}\n      />\n    </List>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/components/Menu.jsx",["220","221"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Drawer, List, Divider, ListItem, IconButton } from '@material-ui/core';\nimport { PetsRounded, MenuRounded, HomeRounded, AppsRounded, FormatListBulletedRounded, StorefrontRounded, AccountBoxRounded, SubdirectoryArrowLeftRounded, SpaRounded } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  menuItem: {\n    fontFamily: 'Varela Round',\n    color: 'dimgrey',\n    paddingTop: '0.5em',\n    fontSize: '1.7em'\n  },\n  menuIcon: {\n    fontSize: \"2em\",\n    color: '#fcd0c5',\n  },\n  list: {\n    width: 320,\n  },\n  fullList: {\n    width: 'auto',\n  },\n}));\n\nexport default function SimpleMenu() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [state, setState] = React.useState({\n    left: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n  \n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        <ListItem className={classes.menuItem} component={Link} to=\"/dashboard\">\n          <HomeRounded style={{paddingRight: '0.25em'}}/>\n            My DashBoard\n        </ListItem>\n        <ListItem className={classes.menuItem} component={Link} to=\"/account\">\n          <AccountBoxRounded style={{paddingRight: '0.25em'}}/>\n            My Account\n        </ListItem>\n        <ListItem className={classes.menuItem} component={Link} to=\"/lists\">\n          <FormatListBulletedRounded style={{paddingRight: '0.25em'}}/>\n            My Lists\n        </ListItem>\n        <ListItem className={classes.menuItem} component={Link} to=\"/cats\" >\n          <AppsRounded style={{paddingRight: '0.25em'}}/>\n            My Collection\n        </ListItem>\n        <ListItem className={classes.menuItem} component={Link} to=\"/inventory\">\n          <SpaRounded style={{paddingRight: '0.25em'}}/>\n            My Inventory\n        </ListItem>\n        <Divider style={{margin: '0.5em'}}/>\n        <ListItem className={classes.menuItem} component={Link} to=\"/shop\">\n          <StorefrontRounded style={{paddingRight: '0.25em'}}/>\n            Shop\n        </ListItem>\n        <Divider style={{margin: '0.5em'}}/>\n        <ListItem className={classes.menuItem} component={Link} to=\"/\">\n          <SubdirectoryArrowLeftRounded style={{paddingRight: '0.25em'}}/>\n            Logout\n        </ListItem>\n        <Divider style={{margin: '0.5em'}}/>\n        <ListItem className={classes.menuItem} style={{display: 'flex', justifyContent: 'center'}} component={Link} to=\"Thank-You\">\n          <PetsRounded style={{paddingRight: '0.25em', fontSize: '1.2em'}}/>\n        </ListItem>\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n      {['left'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <IconButton onClick={toggleDrawer(anchor, true)}>\n            <MenuRounded className={classes.menuIcon}/>\n          </IconButton>\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n            {list(anchor)}\n          </Drawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n\n  // const handleClick = (event) => {\n  //   setAnchorEl(event.currentTarget);\n  // };\n\n  // const handleClose = () => {\n  //   setAnchorEl(null);\n  // };\n\n  // return (\n\n    // <div>\n    //   <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n    //     <MenuRoundedIcon className={classes.menuIcon}/>\n    //   </Button>\n    //   <Menu\n    //     id=\"simple-menu\"\n    //     anchorEl={anchorEl}\n    //     keepMounted\n    //     open={Boolean(anchorEl)}\n    //     onClose={handleClose}\n    //   >\n    //     <MenuItem className={classes.menuItem} component={Link} to=\"/dashboard\">\n    //         My DashBoard\n    //     </MenuItem>\n    //     <MenuItem className={classes.menuItem} component={Link} to=\"/account\">\n    //         My Account\n    //     </MenuItem>\n    //     <MenuItem className={classes.menuItem} component={Link} to=\"/cats\" >\n    //         My Collection\n    //     </MenuItem>\n    //     <MenuItem className={classes.menuItem}  component={Link} to=\"/lists\">\n    //         My Lists\n    //     </MenuItem>\n    //     <MenuItem className={classes.menuItem} component={Link} to=\"/inventory\">\n    //         My Inventory\n    //     </MenuItem>\n    //     <MenuItem className={classes.menuItem} component={Link} to=\"/shop\">\n    //         Shop\n    //     </MenuItem>\n    //     <MenuItem className={classes.menuItem} component={Link} to=\"/\">\n    //         Logout\n    //     </MenuItem>\n    //   </Menu>\n    // </div>\n  // );\n}","/home/minty/lighthouse/meowtivate/front-end/src/components/Popup.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/Theme.js",["222"],"import { createMuiTheme } from \"@material-ui/core/styles\";\n\n// Theme\nconst lightTheme = createMuiTheme({\n  palette: {\n    type: \"light\",\n    main: \"#f0e1d0\",\n    nav: \"#a0cdca\",\n    background: \"rgb(255, 255, 255, 0.9)\",\n    list: \"#fee2b1\",\n    collection: \"#fcd0c5\",\n    account: \"#aedaa5\",\n    inventory: \"#e0c8df\",\n    listOnHover: \"#dbc6a1\",\n    collectionOnHover: \"#e6c3bb\",\n    accountOnHover: \"#a2bb9d\",\n    inventoryOnHover: \"#c9bcc8\",\n    wallet: \"antiquewhite\",\n    cardContainer: \"rgb(255, 255, 255, 0.9)\",\n  },\n  text: {\n    primary: \"Black\",\n    secondary: \"#5c5c5c\",\n    onHover: \"white\",\n    gray: \"grey\",\n    green: \"green\",\n  },\n});\n\nexport default lightTheme;\n// const darkTheme = createMuiTheme({\n//   palette: {\n//     primary: {\n//       light: \"#757ce8\",\n//       main: \"#3f50b5\",\n//       dark: \"#002884\",\n//       contrastText: \"#fff\",\n//       blue: \"#a0cdca\",\n//       listButton: \"#fee2b1\",\n//       collectionButton: \"\",\n//       accountButton: \"\",\n//       container: \"theme.palette.cardContainer\",\n//     },\n//     secondary: {\n//       light: \"#ff7961\",\n//       main: \"#f44336\",\n//       dark: \"#ba000d\",\n//       contrastText: \"#000\",\n//     },\n//   },\n// });\n\n// Theme\n\n// const [darkMode, setDarkMode] = useState(false);\n\n// const theme = createMuiTheme({\n//   palette: {\n//     type: darkMode ? \"dark\" : \"light\",\n//   },\n// });\n// // lightTheme\n// console.log(lightTheme.palette.background);\n","/home/minty/lighthouse/meowtivate/front-end/src/components/Footer.jsx",["223"],"import React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  logo: {\n    fontFamily: \"itim\",\n    letterSpacing: \"8px\",\n    textAlign: \"center\",\n    fontSize: \"4rem\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"3em\",\n    },\n    paddingBottom: \"1em\",\n    color: \"antiquewhite\",\n    lineHeight: 0,\n  },\n  navStyle: {\n    textAlign: \"start\",\n    backgroundColor: \"#a0cdca\",\n  },\n}));\n\nexport default function SimpleMenu() {\n  const classes = useStyles();\n\n  return (\n    <footer>\n      <h1>Meowtivate</h1>\n      <span>dark Mode</span>\n    </footer>\n  );\n}\n",{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":27,"column":10,"nodeType":"230","messageId":"231","endLine":27,"endColumn":24},{"ruleId":"228","severity":1,"message":"232","line":32,"column":8,"nodeType":"230","messageId":"231","endLine":32,"endColumn":14},{"ruleId":"228","severity":1,"message":"233","line":44,"column":21,"nodeType":"230","messageId":"231","endLine":44,"endColumn":28},{"ruleId":"234","severity":1,"message":"235","line":70,"column":6,"nodeType":"236","endLine":70,"endColumn":13,"suggestions":"237"},{"ruleId":"228","severity":1,"message":"238","line":2,"column":8,"nodeType":"230","messageId":"231","endLine":2,"endColumn":16},{"ruleId":"228","severity":1,"message":"239","line":6,"column":8,"nodeType":"230","messageId":"231","endLine":6,"endColumn":21},{"ruleId":"228","severity":1,"message":"240","line":62,"column":11,"nodeType":"230","messageId":"231","endLine":62,"endColumn":16},{"ruleId":"228","severity":1,"message":"239","line":6,"column":8,"nodeType":"230","messageId":"231","endLine":6,"endColumn":21},{"ruleId":"228","severity":1,"message":"241","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":26},{"ruleId":"228","severity":1,"message":"232","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":14},{"ruleId":"228","severity":1,"message":"241","line":1,"column":27,"nodeType":"230","messageId":"231","endLine":1,"endColumn":36},{"ruleId":"228","severity":1,"message":"242","line":6,"column":8,"nodeType":"230","messageId":"231","endLine":6,"endColumn":12},{"ruleId":"228","severity":1,"message":"243","line":7,"column":8,"nodeType":"230","messageId":"231","endLine":7,"endColumn":19},{"ruleId":"228","severity":1,"message":"244","line":11,"column":10,"nodeType":"230","messageId":"231","endLine":11,"endColumn":17},{"ruleId":"245","severity":1,"message":"246","line":51,"column":40,"nodeType":"247","messageId":"248","endLine":51,"endColumn":41},{"ruleId":"228","severity":1,"message":"242","line":6,"column":3,"nodeType":"230","messageId":"231","endLine":6,"endColumn":7},{"ruleId":"228","severity":1,"message":"243","line":7,"column":3,"nodeType":"230","messageId":"231","endLine":7,"endColumn":14},{"ruleId":"228","severity":1,"message":"232","line":16,"column":8,"nodeType":"230","messageId":"231","endLine":16,"endColumn":14},{"ruleId":"228","severity":1,"message":"249","line":22,"column":8,"nodeType":"230","messageId":"231","endLine":22,"endColumn":22},{"ruleId":"228","severity":1,"message":"250","line":24,"column":8,"nodeType":"230","messageId":"231","endLine":24,"endColumn":14},{"ruleId":"251","severity":1,"message":"252","line":79,"column":7,"nodeType":"253","messageId":"254","endLine":79,"endColumn":18},{"ruleId":"251","severity":1,"message":"255","line":225,"column":5,"nodeType":"253","messageId":"254","endLine":225,"endColumn":10},{"ruleId":"251","severity":1,"message":"255","line":242,"column":5,"nodeType":"253","messageId":"254","endLine":242,"endColumn":10},{"ruleId":"251","severity":1,"message":"255","line":260,"column":5,"nodeType":"253","messageId":"254","endLine":260,"endColumn":10},{"ruleId":"228","severity":1,"message":"256","line":266,"column":11,"nodeType":"230","messageId":"231","endLine":266,"endColumn":19},{"ruleId":"234","severity":1,"message":"257","line":281,"column":6,"nodeType":"236","endLine":281,"endColumn":10,"suggestions":"258"},{"ruleId":"228","severity":1,"message":"259","line":295,"column":20,"nodeType":"230","messageId":"231","endLine":295,"endColumn":31},{"ruleId":"228","severity":1,"message":"260","line":297,"column":9,"nodeType":"230","messageId":"231","endLine":297,"endColumn":14},{"ruleId":"261","severity":1,"message":"262","line":68,"column":18,"nodeType":"263","endLine":72,"endColumn":34},{"ruleId":"228","severity":1,"message":"264","line":8,"column":10,"nodeType":"230","messageId":"231","endLine":8,"endColumn":29},{"ruleId":"234","severity":1,"message":"265","line":106,"column":6,"nodeType":"236","endLine":106,"endColumn":15,"suggestions":"266"},{"ruleId":"234","severity":1,"message":"267","line":123,"column":6,"nodeType":"236","endLine":123,"endColumn":16,"suggestions":"268"},{"ruleId":"228","severity":1,"message":"269","line":1,"column":28,"nodeType":"230","messageId":"231","endLine":1,"endColumn":36},{"ruleId":"228","severity":1,"message":"241","line":1,"column":38,"nodeType":"230","messageId":"231","endLine":1,"endColumn":47},{"ruleId":"270","severity":1,"message":"271","line":67,"column":30,"nodeType":"272","messageId":"254","endLine":67,"endColumn":32},{"ruleId":"228","severity":1,"message":"273","line":115,"column":11,"nodeType":"230","messageId":"231","endLine":115,"endColumn":21},{"ruleId":"228","severity":1,"message":"242","line":3,"column":8,"nodeType":"230","messageId":"231","endLine":3,"endColumn":12},{"ruleId":"228","severity":1,"message":"243","line":4,"column":8,"nodeType":"230","messageId":"231","endLine":4,"endColumn":19},{"ruleId":"228","severity":1,"message":"274","line":69,"column":49,"nodeType":"230","messageId":"231","endLine":69,"endColumn":53},{"ruleId":"228","severity":1,"message":"256","line":70,"column":35,"nodeType":"230","messageId":"231","endLine":70,"endColumn":43},{"ruleId":"228","severity":1,"message":"275","line":70,"column":45,"nodeType":"230","messageId":"231","endLine":70,"endColumn":52},{"ruleId":"228","severity":1,"message":"276","line":70,"column":54,"nodeType":"230","messageId":"231","endLine":70,"endColumn":62},{"ruleId":"228","severity":1,"message":"277","line":82,"column":9,"nodeType":"230","messageId":"231","endLine":82,"endColumn":21},{"ruleId":"228","severity":1,"message":"250","line":4,"column":8,"nodeType":"230","messageId":"231","endLine":4,"endColumn":14},{"ruleId":"228","severity":1,"message":"241","line":1,"column":27,"nodeType":"230","messageId":"231","endLine":1,"endColumn":36},{"ruleId":"228","severity":1,"message":"242","line":3,"column":8,"nodeType":"230","messageId":"231","endLine":3,"endColumn":12},{"ruleId":"228","severity":1,"message":"243","line":4,"column":8,"nodeType":"230","messageId":"231","endLine":4,"endColumn":19},{"ruleId":"251","severity":1,"message":"278","line":59,"column":3,"nodeType":"253","messageId":"254","endLine":59,"endColumn":6},{"ruleId":"234","severity":1,"message":"279","line":61,"column":9,"nodeType":"280","endLine":61,"endColumn":49},{"ruleId":"234","severity":1,"message":"281","line":88,"column":13,"nodeType":"282","endLine":88,"endColumn":52},{"ruleId":"234","severity":1,"message":"283","line":93,"column":6,"nodeType":"236","endLine":93,"endColumn":13,"suggestions":"284"},{"ruleId":"228","severity":1,"message":"242","line":3,"column":8,"nodeType":"230","messageId":"231","endLine":3,"endColumn":12},{"ruleId":"228","severity":1,"message":"243","line":4,"column":8,"nodeType":"230","messageId":"231","endLine":4,"endColumn":19},{"ruleId":"228","severity":1,"message":"285","line":9,"column":5,"nodeType":"230","messageId":"231","endLine":9,"endColumn":20},{"ruleId":"228","severity":1,"message":"286","line":10,"column":5,"nodeType":"230","messageId":"231","endLine":10,"endColumn":16},{"ruleId":"228","severity":1,"message":"287","line":11,"column":5,"nodeType":"230","messageId":"231","endLine":11,"endColumn":19},{"ruleId":"234","severity":1,"message":"288","line":127,"column":6,"nodeType":"236","endLine":127,"endColumn":15,"suggestions":"289"},{"ruleId":"234","severity":1,"message":"290","line":136,"column":6,"nodeType":"236","endLine":136,"endColumn":15,"suggestions":"291"},{"ruleId":"292","severity":1,"message":"293","line":150,"column":9,"nodeType":"263","endLine":152,"endColumn":82},{"ruleId":"228","severity":1,"message":"294","line":38,"column":9,"nodeType":"230","messageId":"231","endLine":38,"endColumn":16},{"ruleId":"228","severity":1,"message":"295","line":29,"column":10,"nodeType":"230","messageId":"231","endLine":29,"endColumn":18},{"ruleId":"228","severity":1,"message":"296","line":29,"column":20,"nodeType":"230","messageId":"231","endLine":29,"endColumn":31},{"ruleId":"297","severity":1,"message":"298","line":79,"column":1,"nodeType":"299","endLine":79,"endColumn":42},{"ruleId":"228","severity":1,"message":"300","line":24,"column":9,"nodeType":"230","messageId":"231","endLine":24,"endColumn":16},"no-native-reassign",["301"],"no-negated-in-lhs",["302"],"no-unused-vars","'createMuiTheme' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","'account' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["303"],"'notfound' is defined but never used.","'useMediaQuery' is defined but never used.","'state' is assigned a value but never used.","'useEffect' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'Widgets' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'getCurrentDate' is defined but never used.","'Switch' is defined but never used.","no-dupe-keys","Duplicate key 'paddingLeft'.","ObjectExpression","unexpected","Duplicate key 'width'.","'unlocked' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setCoins'. Either include it or remove the dependency array.",["304"],"'setDarkMode' is assigned a value but never used.","'theme' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'responsiveFontSizes' is defined but never used.","React Hook useEffect has missing dependencies: 'id', 'streaksArray', and 'todayArray'. Either include them or remove the dependency array.",["305"],"React Hook useEffect has missing dependencies: 'id' and 'streak1Add'. Either include them or remove the dependency array.",["306"],"'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'undoneList' is assigned a value but never used.","'user' is assigned a value but never used.","'streaks' is assigned a value but never used.","'logDatas' is assigned a value but never used.","'undoneAmount' is assigned a value but never used.","Duplicate key 'pot'.","The 'inventory' conditional could make the dependencies of useEffect Hook (at line 84) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'inventory' in its own useMemo() Hook.","VariableDeclarator","Assignments to the 'timer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has a missing dependency: 'timer'. Either include it or remove the dependency array.",["307"],"'completedAmount' is assigned a value but never used.","'totalAmount' is assigned a value but never used.","'currentStreaks' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'decideDisplay' and 'percentage'. Either include them or remove the dependency array.",["308"],"React Hook useEffect has missing dependencies: 'addUnlocked' and 'catID'. Either include them or remove the dependency array.",["309"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'matches' is assigned a value but never used.","'anchorEl' is assigned a value but never used.","'setAnchorEl' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},"Update the dependencies array to be: [id, state]",{"range":"324","text":"325"},"Update the dependencies array to be: [id, setCoins]",{"range":"326","text":"327"},"Update the dependencies array to be: [account, id, streaksArray, todayArray]",{"range":"328","text":"329"},"Update the dependencies array to be: [id, streak1Add, unlocked]",{"range":"330","text":"331"},"Update the dependencies array to be: [start, timer]",{"range":"332","text":"333"},"Update the dependencies array to be: [actions, decideDisplay, percentage]",{"range":"334","text":"335"},"Update the dependencies array to be: [addUnlocked, catID, display]",{"range":"336","text":"337"},[2049,2056],"[id, state]",[6804,6808],"[id, setCoins]",[2807,2816],"[account, id, streaksArray, todayArray]",[3367,3377],"[id, streak1Add, unlocked]",[2242,2249],"[start, timer]",[3825,3834],"[actions, decideDisplay, percentage]",[4099,4108],"[addUnlocked, catID, display]"]