[{"/home/connie/lighthouse/final/meowtivate/front-end/src/index.js":"1","/home/connie/lighthouse/final/meowtivate/front-end/src/components/reportWebVitals.js":"2","/home/connie/lighthouse/final/meowtivate/front-end/src/components/App.js":"3","/home/connie/lighthouse/final/meowtivate/front-end/src/hooks/useApplicationData.js":"4","/home/connie/lighthouse/final/meowtivate/front-end/src/components/404.jsx":"5","/home/connie/lighthouse/final/meowtivate/front-end/src/pages/WelcomePage.jsx":"6","/home/connie/lighthouse/final/meowtivate/front-end/src/pages/LoginPage.jsx":"7","/home/connie/lighthouse/final/meowtivate/front-end/src/pages/RegisterPage.jsx":"8","/home/connie/lighthouse/final/meowtivate/front-end/src/pages/ListsPage.jsx":"9","/home/connie/lighthouse/final/meowtivate/front-end/src/pages/CatsPage.jsx":"10","/home/connie/lighthouse/final/meowtivate/front-end/src/pages/DashboardPage.jsx":"11","/home/connie/lighthouse/final/meowtivate/front-end/src/pages/AccountPage.jsx":"12","/home/connie/lighthouse/final/meowtivate/front-end/src/helpers/stateHelpers.js":"13","/home/connie/lighthouse/final/meowtivate/front-end/src/components/Calendar-import.js":"14","/home/connie/lighthouse/final/meowtivate/front-end/src/components/Weather.js":"15","/home/connie/lighthouse/final/meowtivate/front-end/src/components/NavBar.jsx":"16","/home/connie/lighthouse/final/meowtivate/front-end/src/components/GalleryContainer.jsx":"17","/home/connie/lighthouse/final/meowtivate/front-end/src/components/ListsContainer.jsx":"18","/home/connie/lighthouse/final/meowtivate/front-end/src/components/GalleryItem.js":"19","/home/connie/lighthouse/final/meowtivate/front-end/src/helpers/calculateChecked.js":"20","/home/connie/lighthouse/final/meowtivate/front-end/src/components/Menu.jsx":"21","/home/connie/lighthouse/final/meowtivate/front-end/src/components/Progress.jsx":"22","/home/connie/lighthouse/final/meowtivate/front-end/src/components/CatPlant.jsx":"23","/home/connie/lighthouse/final/meowtivate/front-end/src/components/UnlockBadge.jsx":"24","/home/connie/lighthouse/final/meowtivate/front-end/src/components/ActionList.jsx":"25","/home/connie/lighthouse/final/meowtivate/front-end/src/components/Popup.jsx":"26","/home/connie/lighthouse/final/meowtivate/front-end/src/helpers/getCurrentDate.js":"27"},{"size":540,"mtime":1611019833169,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1610855789884,"results":"30","hashOfConfig":"29"},{"size":2970,"mtime":1611476479122,"results":"31","hashOfConfig":"29"},{"size":5735,"mtime":1611476479186,"results":"32","hashOfConfig":"29"},{"size":228,"mtime":1611105757782,"results":"33","hashOfConfig":"29"},{"size":1411,"mtime":1611281640301,"results":"34","hashOfConfig":"29"},{"size":1278,"mtime":1611342607980,"results":"35","hashOfConfig":"29"},{"size":1519,"mtime":1611281640301,"results":"36","hashOfConfig":"29"},{"size":435,"mtime":1611434482210,"results":"37","hashOfConfig":"29"},{"size":1513,"mtime":1611476446069,"results":"38","hashOfConfig":"29"},{"size":2200,"mtime":1611476479186,"results":"39","hashOfConfig":"29"},{"size":2180,"mtime":1611281640301,"results":"40","hashOfConfig":"29"},{"size":1980,"mtime":1611434482186,"results":"41","hashOfConfig":"29"},{"size":2858,"mtime":1611476479122,"results":"42","hashOfConfig":"29"},{"size":2416,"mtime":1611350717776,"results":"43","hashOfConfig":"29"},{"size":596,"mtime":1611281640301,"results":"44","hashOfConfig":"29"},{"size":828,"mtime":1611476446069,"results":"45","hashOfConfig":"29"},{"size":3044,"mtime":1611434544365,"results":"46","hashOfConfig":"29"},{"size":1189,"mtime":1611476446069,"results":"47","hashOfConfig":"29"},{"size":375,"mtime":1611342607960,"results":"48","hashOfConfig":"29"},{"size":1633,"mtime":1611476446069,"results":"49","hashOfConfig":"29"},{"size":1457,"mtime":1611281732490,"results":"50","hashOfConfig":"29"},{"size":2126,"mtime":1611476479134,"results":"51","hashOfConfig":"29"},{"size":4204,"mtime":1611476526483,"results":"52","hashOfConfig":"29"},{"size":5192,"mtime":1611350745760,"results":"53","hashOfConfig":"29"},{"size":3821,"mtime":1611342607944,"results":"54","hashOfConfig":"29"},{"size":533,"mtime":1611476479166,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"wkadk0",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"58"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/home/connie/lighthouse/final/meowtivate/front-end/src/index.js",[],["122","123"],"/home/connie/lighthouse/final/meowtivate/front-end/src/components/reportWebVitals.js",[],"/home/connie/lighthouse/final/meowtivate/front-end/src/components/App.js",["124","125","126"],"/home/connie/lighthouse/final/meowtivate/front-end/src/hooks/useApplicationData.js",[],"/home/connie/lighthouse/final/meowtivate/front-end/src/components/404.jsx",[],"/home/connie/lighthouse/final/meowtivate/front-end/src/pages/WelcomePage.jsx",["127"],"import axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: \"Varela Round\",\n  },\n  logo: {\n    fontFamily: \"itim\",\n    letterSpacing: \"8px\",\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n  },\n  button: {\n    fontFamily: \"Varela Round\",\n    textDecoration: \"none\",\n  },\n}));\n\nexport default function WelcomePage(props) {\n  let history = useHistory();\n\n  const login = () => {\n    axios.get(\"/api/login/1\").then((res) => {\n      console.log(res);\n      history.push(\"/dashboard\");\n    });\n  };\n  // const { state } = props;\n  const classes = useStyles();\n\n  return (\n    <div className=\"Welcome\">\n      <h2 className={classes.header}>Welcome to </h2>\n      <h1 className={classes.logo}>Meowtivate!</h1>\n      <div>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          component={Link}\n          to=\"/register\"\n        >\n          Sign Up\n        </Button>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"secondary\"\n          component={Link}\n          to=\"/login\"\n        >\n          Login\n        </Button>\n      </div>\n    </div>\n  );\n}\n","/home/connie/lighthouse/final/meowtivate/front-end/src/pages/LoginPage.jsx",["128"],"import TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: \"Varela Round\",\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  logo: {\n    fontFamily: \"itim\",\n    letterSpacing: \"8px\",\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n  },\n  button: {\n    fontFamily: \"Varela Round\",\n    textDecoration: \"none\",\n  },\n}));\n\nexport default function LoginPage(props) {\n  const classes = useStyles();\n  const { state } = props;\n\n  return (\n    <div className=\"Login\">\n      <h1 className={classes.header}>Meowtivate!</h1>\n      <h2 className={classes.header}>Login</h2>\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <div>\n        <TextField id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" value=\"Pawthos\" />\n      </div>\n      <div>\n      <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" value=\"****\"/>\n      </div>\n      <Button \n        variant=\"contained\" \n        color=\"secondary\"\n        component={Link}\n        to='/lists'>\n      Login\n      </Button>\n    </form>\n    </div>\n  )\n};","/home/connie/lighthouse/final/meowtivate/front-end/src/pages/RegisterPage.jsx",["129"],"import TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: \"Varela Round\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  logo: {\n    fontFamily: \"itim\",\n    letterSpacing: \"8px\",\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n  },\n  button: {\n    fontFamily: \"Varela Round\",\n    textDecoration: \"none\",\n  },\n}));\n\nexport default function RegisterPage(props) {\n  const classes = useStyles();\n  const { state } = props;\n\n  return (\n    <div className=\"Register\">\n      <h1 className={classes.header}>Meowtivate!</h1>\n      <h2 className={classes.header}>Register</h2>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" />\n        </div>\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" />\n        </div>\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" />\n        </div>\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" />\n        </div>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          component={Link}\n          to=\"/dashboard\"\n        >\n          Register\n        </Button>\n      </form>\n    </div>\n  );\n}\n","/home/connie/lighthouse/final/meowtivate/front-end/src/pages/ListsPage.jsx",[],"/home/connie/lighthouse/final/meowtivate/front-end/src/pages/CatsPage.jsx",[],"/home/connie/lighthouse/final/meowtivate/front-end/src/pages/DashboardPage.jsx",["130","131"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Weather } from \"../components/Weather\";\nimport { CalendarApp } from \"../components/Calendar-import\";\nimport NavBar from '../components/NavBar';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: '5vw',\n    paddingRight: '5vw',\n    margin: 'auto',\n  },\n}));\n\nexport default function DashboardPage(props) {\n  const { state } = props;\n  const classes = useStyles();\n\n  return (\n    <div>\n      <NavBar />\n      <Grid container spacing={3} className={classes.root}>\n        <Grid item xs={4}>\n          <CalendarApp />\n        </Grid>\n        <Grid item xs={4}>\n          <Card>\n            <CardContent>\n              <Grid item>\n                <Button component={Link} to=\"/lists\">\n                  My Lists\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button component={Link} to=\"/cats\">\n                  My Collection\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button component={Link} to=\"/account\">\n                  My Account\n                </Button>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={4}>\n          <Card>\n            <CardContent>\n              <Weather />\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}","/home/connie/lighthouse/final/meowtivate/front-end/src/pages/AccountPage.jsx",["132"],"import React, { useState, useEffect } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport NavBar from \"../components/NavBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport SaveRoundedIcon from \"@material-ui/icons/SaveRounded\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n  },\n}));\n\nexport default function AccountPage(props) {\n  const user = props.state.account[0];\n  console.log(\"AccountPage\", user);\n  const { username, email } = user;\n\n  const classes = useStyles();\n\n  // Toggle between VIEW and EDIT modes\n  const [isEditable, setIsEditable] = useState(false);\n  const modeToggle = () => setIsEditable(!isEditable);\n\n  return (\n    <div className={classes.root}>\n      <NavBar/>\n      <header>\n        <h2 className={classes.header}>my Account</h2>\n      </header>\n      <Card>\n        <CardContent>\n          <h5>Username: {username}</h5>\n          <h5>Email: {email}</h5>\n          <h5>Password: ********* </h5>\n        </CardContent>\n      </Card>\n      <IconButton onClick={modeToggle}>\n        <EditRoundedIcon />\n      </IconButton>\n      {isEditable && (\n        <div>\n          Hello\n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <div>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Username\"\n                variant=\"outlined\"\n              />\n            </div>\n            <div>\n              <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" />\n            </div>\n\n            <div>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Password\"\n                variant=\"outlined\"\n              />\n            </div>\n            <IconButton>\n              <SaveRoundedIcon onClick={modeToggle} />\n            </IconButton>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n}\n","/home/connie/lighthouse/final/meowtivate/front-end/src/helpers/stateHelpers.js",[],"/home/connie/lighthouse/final/meowtivate/front-end/src/components/Calendar-import.js",["133","134"],"import React, { useState } from \"react\";\n\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\nimport { Calendar } from \"react-modern-calendar-datepicker\";\nimport \"./styles/calendar.css\";\n\nexport const CalendarApp = () => {\n  const defaultValue = {\n    year: 2021,\n    month: 1,\n    day: 1,\n  };\n  const [selectedDay, setSelectedDay] = useState(defaultValue);\n\n  return (\n    <Calendar\n      value={selectedDay}\n      onChange={setSelectedDay}\n      shouldHighlightWeekends\n      customDaysClassName={[\n        // here we add some CSS classes\n        // { year: 2021, month: 1, day: 4, className: \"purpleDay\" },\n        // { year: 2021, month: 1, day: 12, className: \"orangeDay\" },\n        // { year: 2021, month: 1, day: 18, className: \"yellowDay\" },\n        // { year: 2021, month: 1, day: 26, className: \"navyBlueDay\" },\n      ]}\n    />\n  );\n};\n","/home/connie/lighthouse/final/meowtivate/front-end/src/components/Weather.js",["135","136"],"import React from \"react\";\nimport { useState, useEffect, className } from \"react\";\nimport \"./styles/weather.css\";\n\nconst api = {\n  key: process.env.REACT_APP_WEATHER_API_KEY,\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\n// api.openweathermap.org/data/2.5/\n// weather?lat={lat}&lon={lon}&appid={API key}\n\nexport const Weather = () => {\n  // const [city, setCity] = useState(\"\");\n  const [weather, setWeather] = useState(\"\");\n\n  // const search = (event) => {\n  //   if (event.key === \"Enter\") {\n  //     fetch(`${api.base}weather?q=${city}&units=metric&APPID=${api.key}`)\n  //       .then((res) => res.json())\n  //       .then((result) => {\n  //         setWeather(result);\n  //         console.log(result);\n  //       });\n  //   }\n  // };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      fetch(`${api.base}weather?lat=${position.coords.latitude}&lon=${position.coords.longitude}&units=metric&appid=${api.key}`)\n      .then((res) => res.json())\n      .then((result) => {\n        setWeather(result);\n        console.log(result);\n      });\n    });\n  }, [])\n  return (\n    <div\n      className={\n        typeof weather.main != \"undefined\"\n          ? weather.weather[0].main.includes(\"Cloud\")\n            ? \"weather Clouds\"\n            : \"weather\"\n          : \"weather\"\n      }\n    >\n      <section className=\"weather\">\n        {/* <div className=\"weather-search-box\">\n          <input\n            type=\"text\"\n            className=\"city-search-bar\"\n            placeholder=\"City...\"\n            onChange={(e) => setCity(e.target.value)}\n            value={city}\n            onKeyPress={search}\n          />\n        </div> */}\n        {typeof weather.main != \"undefined\" ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location\">\n                {weather.name}, {weather.sys.country}\n              </div>\n            </div>\n            <div className=\"temp\">{Math.round(weather.main.temp)}&deg;c</div>\n            <div className=\"weather\">{weather.weather[0].main}</div>\n            <div><img \n            className={weather.weather[0].main} \n            style={{display: 'block'}} \n            src={`https://meowtivate.s3-us-west-2.amazonaws.com/${weather.weather[0].main}.png`} \n            alt=\"weather-image\"/>\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </section>\n    </div>\n  );\n};\n","/home/connie/lighthouse/final/meowtivate/front-end/src/components/NavBar.jsx",[],"/home/connie/lighthouse/final/meowtivate/front-end/src/components/GalleryContainer.jsx",[],"/home/connie/lighthouse/final/meowtivate/front-end/src/components/ListsContainer.jsx",["137"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ActionList from \"./ActionList\";\nimport CatPlant from './CatPlant'\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Progress from \"./Progress\";\nimport UnlockBadge from \"./UnlockBadge\";\nimport calculateChecked from \"../helpers/calculateChecked\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    minWidth: '10vw',\n    minHeight: '25vh',\n    paddingLeft: '5vw',\n    paddingRight: '5vw',\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"8px\",\n  },\n  plantbox: {\n    position:'static',\n    zIndex: 1,\n    minWidth: '10vw',\n    minHeight: '40vh',\n    paddingLeft: '5vw',\n    paddingRight: '5vw',\n  },\n  lists: {\n    minWidth: '10vw',\n    minHeight: '50vh',\n  }\n\n}));\n\nexport default function ListContainer(props) {\n  const { state, actionFunctions, catFunctions } = props;\n  const { actions, todos, habits, unlocked } = state;\n  const classes = useStyles();\n\n  // console.log(\"habits in ListsContainer\", habits);\n\n  const completed = actions.filter(obj => obj.is_completed === true);\n  const checkedHabits = completed.filter(obj => obj.category_id === 2);\n  const checkedTodos = completed.filter(obj => obj.category_id === 1);\n  const habitIDs = calculateChecked(checkedHabits);\n  const todoIDs = calculateChecked(checkedTodos);\n\n  // console.log(\"completed\", completed)\n  // console.log(\"checkedHabits\", checkedHabits);\n  // console.log(\"checkedTodos\", checkedTodos);\n  \n  return (\n    <>\n    <UnlockBadge state={state} catFunctions={catFunctions} />\n    <div className={classes.root}>\n      <h2 className={classes.header}>LET'S GET LOTS DONE TODAY</h2>\n      <Grid container spacing={4}>\n        <Grid item xs={4}>\n          <Card className={classes.lists}>\n            <CardContent>\n              <h3>Daily Habits</h3>\n              <ActionList \n                items={habits} \n                category={2} \n                actionFunctions={actionFunctions}\n                initChecked={habitIDs} />\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={4}>\n          <Card className={classes.lists}>\n            <CardContent>\n              <h3>To-Do Today</h3>\n              <ActionList \n                items={todos} \n                category={1} \n                actionFunctions={actionFunctions}\n                initChecked={todoIDs} />\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={4}>\n          <Card>\n            <CardContent>\n              {/* <div>\n              </div> */}\n              <div className={classes.plantbox}>\n                <h3>Today's Progress</h3>\n                <CatPlant actions={actions} />\n              </div>\n            </CardContent>\n          </Card>\n        </Grid>\n      <Progress\n        todos={todos}\n        habits={habits}\n        actions={actions}\n        />\n        </Grid>\n    </div>\n    </>\n  );\n}\n","/home/connie/lighthouse/final/meowtivate/front-end/src/components/GalleryItem.js",[],"/home/connie/lighthouse/final/meowtivate/front-end/src/helpers/calculateChecked.js",[],"/home/connie/lighthouse/final/meowtivate/front-end/src/components/Menu.jsx",[],"/home/connie/lighthouse/final/meowtivate/front-end/src/components/Progress.jsx",[],"/home/connie/lighthouse/final/meowtivate/front-end/src/components/CatPlant.jsx",["138","139","140"],"import React, {useState, useEffect} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles(theme => ({\n  pot: {\n    display: 'block',\n    width: '12vw',\n    position:'absolute',\n    bottom: '0px',\n    left: 'calc(50% - 6vw)',\n    zIndex: 2,\n  },\n  plant: {\n    opacity: 0,\n    width: '13vw',\n    position:'relative',\n    zIndex: 1,\n  },\n  plantContainer: {\n  position: 'relative',\n\n  },\n  animatedItem: {\n    animation: `$myEffect 1500ms ${theme.transitions.easing.easeInOut}`,\n\n  },\n\n  \"@keyframes myEffect\": {\n    '0%': {\n      transform: 'translateY(30%)',\n      opacity: 0,\n\n    },\n    '16%': {\n      transform: 'translateY(-3%)',\n      opacity: 1,\n\n    },\n    '28%': {\n      transform: 'translateY(5%)',\n\n    },\n    '44%': {\n      transform: 'translateY(-2%)'\n    },\n    '59%': {\n      transform: 'translateY(0%)'\n    },\n    '73%': {\n      transform: 'translateY(0%)'\n    },\n    '88%': {\n      transform: 'translateY(0%)'\n    },\n    '100%': {\n      transform: 'translateY(0%)'\n    }, \n  }\n}));\n\nexport default function CatPlant(props) {\n  const classes = useStyles();\n  const { actions } = props;\n  const [start, setStart] = React.useState(false);\n  let timer;\n\n  // Calculate percentage\n  const totalAmount = actions.length;\n  const totalCompleted = actions.filter(obj => obj.is_completed === true).length;\n  const initial = ( totalCompleted / totalAmount ) * 100;\n  const num = Math.floor(initial / 10) * 10;\n\n  // const [percentage, setPercentage] = useState(initial);\n  \n  useEffect(() => {\n    setStart(true);\n    timer = setTimeout(() => setStart(false), 1500);\n  }, [actions])\n\n  useEffect(() => {\n    return () => clearInterval(timer);\n  }, [start])\n\n  return (\n      <div className={classes.plantContainer}>\n        <img className={clsx(classes.plant,\n          {[classes.animatedItem]: start}\n        )} src={`https://meowtivate.s3-us-west-2.amazonaws.com/plants/${num}plant.png`} alt=\"plant\" style={{opacity: 1}}/>\n        <img className={classes.pot} src=\"https://meowtivate.s3-us-west-2.amazonaws.com/pot.png\" alt=\"pot\"/>\n      </div>\n);\n}","/home/connie/lighthouse/final/meowtivate/front-end/src/components/UnlockBadge.jsx",["141","142","143"],"/home/connie/lighthouse/final/meowtivate/front-end/src/components/ActionList.jsx",["144"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport DeleteRoundedIcon from \"@material-ui/icons/DeleteRounded\";\nimport UnfoldMoreRoundedIcon from \"@material-ui/icons/UnfoldMoreRounded\";\nimport SaveRoundedIcon from \"@material-ui/icons/SaveRounded\";\nimport Popup from \"./Popup\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    fontFamily: \"Varela Round\",\n  },\n}));\n\nexport default function ActionList(props) {\n  const { items, category, actionFunctions, initChecked } = props;\n  const { \n    deleteAction, \n    addAction, \n    editActionName, \n    editCompletedState } = actionFunctions; // State changing funcs from useApplicationData\n  const classes = useStyles();\n\n  console.log(\"checked in ActionList\", initChecked);\n\n  // Toggle between VIEW and EDIT modes\n  const [isEditable, setIsEditable] = useState(false);\n  const modeToggle = () => setIsEditable(!isEditable);\n\n  // Toggle checkbox\n  // checked is an array of numbers that represent checked actionIDs\n  const [checked, setChecked] = useState(initChecked);\n  \n  const handleToggle = (value, evt) => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) { // if value isn't in checked, add it\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1); // else remove from checked\n    }\n\n    setChecked(newChecked);\n    editCompletedState(value, evt.target.checked); // Update state\n  };\n\n  // Popup state\n  const [popupState, setPopupState] = useState({\n    open: false,\n    type: \"\",\n    actionID: 0, // action_id for EDITING, otherwise 0 for ADDING\n    actionName: \"\",\n  });\n\n  // Popup functions\n  const handleClickOpen = (type, id, name) => {\n    setPopupState((prev) => ({\n      ...prev,\n      open: true,\n      type: type,\n      actionID: id,\n      actionName: name,\n    }));\n  };\n\n  const cancel = () => {\n    setPopupState((prev) => ({\n      ...prev,\n      open: false,\n    }));\n  };\n\n  const confirmDelete = (actionID) => {\n    deleteAction(actionID);\n    setPopupState((prev) => ({\n      ...prev,\n      open: false,\n    }));\n  };\n\n  const confirmAdd = (name, categoryID) => {\n    addAction(name, categoryID);\n    setPopupState((prev) => ({\n      ...prev,\n      open: false,\n    }));\n  };\n\n  const confirmEdit = (actionID, name) => {\n    editActionName(actionID, name);\n    setPopupState((prev) => ({\n      ...prev,\n      open: false,\n    }));\n  }\n\n  return (\n    <List className={classes.root}>\n      {items.sort(function(a, b) {\n  return a.id - b.id;\n}).map((obj) => {\n        const labelId = `checkbox-list-label-${obj.id}`;\n        return (\n          <ListItem\n            key={obj.id}\n            role={undefined}\n            dense\n            button\n            onClick={(evt) => handleToggle(obj.id, evt)}\n          >\n            <ListItemIcon>\n              <Checkbox\n                edge=\"start\"\n                checked={obj.is_completed}\n                tabIndex={-1}\n                disableRipple\n                inputProps={{ \"aria-labelledby\": labelId }}\n              />\n            </ListItemIcon>\n            <ListItemText id={labelId} primary={obj.action_name} />\n            {isEditable && (\n              <ListItemSecondaryAction>\n                <IconButton edge=\"end\" aria-label=\"drag\">\n                  <UnfoldMoreRoundedIcon />\n                </IconButton>\n                <IconButton edge=\"end\" aria-label=\"delete\">\n                  <DeleteRoundedIcon\n                    onClick={() =>\n                      handleClickOpen(\"Delete\", obj.id, obj.action_name)\n                    }\n                  />\n                </IconButton>\n                <IconButton edge=\"end\" aria-label=\"edit\">\n                  <EditRoundedIcon\n                    onClick={() =>\n                      handleClickOpen(\"Edit\", obj.id, obj.action_name)\n                    }\n                  />\n                </IconButton>\n              </ListItemSecondaryAction>\n            )}\n          </ListItem>\n        );\n      })}\n\n      {isEditable ? (\n        <>\n          <IconButton>\n            <AddCircleIcon onClick={() => handleClickOpen(\"Add\", 0, \"\")} />\n          </IconButton>\n          <IconButton onClick={modeToggle}>\n            <SaveRoundedIcon />\n          </IconButton>\n        </>\n      ) : (\n        <IconButton onClick={modeToggle}>\n          <EditRoundedIcon />\n        </IconButton>\n      )}\n\n      <Popup\n        cancel={cancel}\n        confirmDelete={confirmDelete}\n        confirmAdd={confirmAdd}\n        confirmEdit={confirmEdit}\n        popupState={popupState}\n        category={category}\n      />\n    </List>\n  );\n}\n","/home/connie/lighthouse/final/meowtivate/front-end/src/components/Popup.jsx",["145"],"import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nexport default function Popup(props) {\n  const { \n    confirmDelete, \n    confirmAdd, \n    confirmEdit, \n    cancel, \n    popupState, \n    category } = props;\n  const { open, type, actionID, actionName } = popupState;\n  const listType = category === 1 ? \"to-do\" : \"habit\";\n\n  // Making form a controlled component\n  const [name, setName] = useState(actionName);\n\n  // Prevent stale props by re-rendering when actionName changes in parent\n  useEffect(() => {\n    setName(actionName)\n  }, [actionName])\n\n  const clearAndCancel = () => {\n    setName(\"\");\n    cancel();\n  }\n\n  const clearAndConfirmAdd = () => {\n    setName(\"\");\n    confirmAdd(name, category);\n  }\n\n  console.log(\"actionName\", actionName);\n\n  return (\n    <div>\n      { type === \"Delete\" && (\n        <Dialog\n        open={open}\n        onClose={cancel}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{type} {listType}?</DialogTitle>\n        <DialogContent>\n          {/* <DialogContentText>\n          {actionID}\n          </DialogContentText> */}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => confirmDelete(actionID)} color=\"primary\">\n            Confirm\n          </Button>\n          <Button onClick={cancel} color=\"primary\" autoFocus>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n      )}\n\n      { type === \"Edit\" && (\n        <Dialog open={open} onClose={cancel} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">{type} a {listType}</DialogTitle>\n        <DialogContent>\n          {/* <DialogContentText>\n            {actionID}\n          </DialogContentText> */}\n          <form autoComplete=\"off\" onSubmit={(event) => event.preventDefault()}>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={(event) => setName(event.target.value)}\n              fullWidth\n            />\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={cancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={() => confirmEdit(actionID, name)} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n      )}\n\n      { type === \"Add\" && (\n        <Dialog open={open} onClose={cancel} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">{type} a {listType}</DialogTitle>\n        <DialogContent>\n          {/* <DialogContentText>\n            {actionID}\n          </DialogContentText> */}\n          <form autoComplete=\"off\" onSubmit={(event) => event.preventDefault()}>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={(event) => setName(event.target.value)}\n              fullWidth\n            />\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={clearAndCancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={clearAndConfirmAdd} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n      )}\n    </div>\n  );\n}\n","/home/connie/lighthouse/final/meowtivate/front-end/src/helpers/getCurrentDate.js",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":9,"column":50,"nodeType":"152","messageId":"153","endLine":9,"endColumn":54},{"ruleId":"150","severity":1,"message":"154","line":32,"column":21,"nodeType":"152","messageId":"153","endLine":32,"endColumn":28},{"ruleId":"155","severity":1,"message":"156","line":55,"column":6,"nodeType":"157","endLine":55,"endColumn":13,"suggestions":"158"},{"ruleId":"150","severity":1,"message":"159","line":28,"column":9,"nodeType":"152","messageId":"153","endLine":28,"endColumn":14},{"ruleId":"150","severity":1,"message":"160","line":29,"column":11,"nodeType":"152","messageId":"153","endLine":29,"endColumn":16},{"ruleId":"150","severity":1,"message":"160","line":29,"column":11,"nodeType":"152","messageId":"153","endLine":29,"endColumn":16},{"ruleId":"150","severity":1,"message":"161","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":25},{"ruleId":"150","severity":1,"message":"162","line":1,"column":27,"nodeType":"152","messageId":"153","endLine":1,"endColumn":36},{"ruleId":"150","severity":1,"message":"162","line":1,"column":27,"nodeType":"152","messageId":"153","endLine":1,"endColumn":36},{"ruleId":"155","severity":1,"message":"163","line":69,"column":6,"nodeType":"157","endLine":69,"endColumn":15,"suggestions":"164"},{"ruleId":"155","severity":1,"message":"165","line":84,"column":6,"nodeType":"157","endLine":84,"endColumn":16,"suggestions":"166"},{"ruleId":"150","severity":1,"message":"167","line":2,"column":31,"nodeType":"152","messageId":"153","endLine":2,"endColumn":40},{"ruleId":"168","severity":1,"message":"169","line":68,"column":18,"nodeType":"170","endLine":72,"endColumn":34},{"ruleId":"150","severity":1,"message":"171","line":41,"column":35,"nodeType":"152","messageId":"153","endLine":41,"endColumn":43},{"ruleId":"150","severity":1,"message":"161","line":1,"column":16,"nodeType":"152","messageId":"153","endLine":1,"endColumn":24},{"ruleId":"155","severity":1,"message":"172","line":78,"column":13,"nodeType":"173","endLine":78,"endColumn":52},{"ruleId":"155","severity":1,"message":"174","line":83,"column":6,"nodeType":"157","endLine":83,"endColumn":13,"suggestions":"175"},{"ruleId":"155","severity":1,"message":"176","line":106,"column":6,"nodeType":"157","endLine":106,"endColumn":15,"suggestions":"177"},{"ruleId":"155","severity":1,"message":"178","line":115,"column":6,"nodeType":"157","endLine":115,"endColumn":15,"suggestions":"179"},{"ruleId":"180","severity":1,"message":"181","line":129,"column":9,"nodeType":"170","endLine":131,"endColumn":82},{"ruleId":"150","severity":1,"message":"162","line":1,"column":27,"nodeType":"152","messageId":"153","endLine":1,"endColumn":36},{"ruleId":"150","severity":1,"message":"182","line":8,"column":8,"nodeType":"152","messageId":"153","endLine":8,"endColumn":25},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'account' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["185"],"'login' is assigned a value but never used.","'state' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'id', 'streaksArray', and 'todayArray'. Either include them or remove the dependency array.",["186"],"React Hook useEffect has missing dependencies: 'id' and 'streak1Add'. Either include them or remove the dependency array.",["187"],"'className' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'unlocked' is assigned a value but never used.","Assignments to the 'timer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has a missing dependency: 'timer'. Either include it or remove the dependency array.",["188"],"React Hook useEffect has missing dependencies: 'decideDisplay' and 'percentage'. Either include them or remove the dependency array.",["189"],"React Hook useEffect has missing dependencies: 'addUnlocked' and 'catID'. Either include them or remove the dependency array.",["190"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'DialogContentText' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},"Update the dependencies array to be: [id, state]",{"range":"203","text":"204"},"Update the dependencies array to be: [account, id, streaksArray, todayArray]",{"range":"205","text":"206"},"Update the dependencies array to be: [id, streak1Add, unlocked]",{"range":"207","text":"208"},"Update the dependencies array to be: [start, timer]",{"range":"209","text":"210"},"Update the dependencies array to be: [actions, decideDisplay, percentage]",{"range":"211","text":"212"},"Update the dependencies array to be: [addUnlocked, catID, display]",{"range":"213","text":"214"},[1629,1636],"[id, state]",[1690,1699],"[account, id, streaksArray, todayArray]",[2231,2241],"[id, streak1Add, unlocked]",[1723,1730],"[start, timer]",[3302,3311],"[actions, decideDisplay, percentage]",[3575,3584],"[addUnlocked, catID, display]"]