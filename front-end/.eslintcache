[{"/home/minty/lighthouse/meowtivate/front-end/src/index.js":"1","/home/minty/lighthouse/meowtivate/front-end/src/components/App.js":"2","/home/minty/lighthouse/meowtivate/front-end/src/helpers/getCurrentDate.js":"3","/home/minty/lighthouse/meowtivate/front-end/src/hooks/useApplicationData.js":"4","/home/minty/lighthouse/meowtivate/front-end/src/components/404.jsx":"5","/home/minty/lighthouse/meowtivate/front-end/src/pages/RegisterPage.jsx":"6","/home/minty/lighthouse/meowtivate/front-end/src/pages/WelcomePage.jsx":"7","/home/minty/lighthouse/meowtivate/front-end/src/pages/LoginPage.jsx":"8","/home/minty/lighthouse/meowtivate/front-end/src/pages/ListsPage.jsx":"9","/home/minty/lighthouse/meowtivate/front-end/src/pages/CatsPage.jsx":"10","/home/minty/lighthouse/meowtivate/front-end/src/pages/ShopPage.jsx":"11","/home/minty/lighthouse/meowtivate/front-end/src/pages/InventoryPage.jsx":"12","/home/minty/lighthouse/meowtivate/front-end/src/pages/AccountPage.jsx":"13","/home/minty/lighthouse/meowtivate/front-end/src/pages/DashboardPage.jsx":"14","/home/minty/lighthouse/meowtivate/front-end/src/helpers/stateHelpers.js":"15","/home/minty/lighthouse/meowtivate/front-end/src/components/NavBar.jsx":"16","/home/minty/lighthouse/meowtivate/front-end/src/components/ShopItem.jsx":"17","/home/minty/lighthouse/meowtivate/front-end/src/components/GalleryContainer.jsx":"18","/home/minty/lighthouse/meowtivate/front-end/src/components/InventoryItem.jsx":"19","/home/minty/lighthouse/meowtivate/front-end/src/components/Weather.js":"20","/home/minty/lighthouse/meowtivate/front-end/src/components/Calendar-import.js":"21","/home/minty/lighthouse/meowtivate/front-end/src/components/ListsContainer.jsx":"22","/home/minty/lighthouse/meowtivate/front-end/src/components/SMSForm.js":"23","/home/minty/lighthouse/meowtivate/front-end/src/components/CatPlant.jsx":"24","/home/minty/lighthouse/meowtivate/front-end/src/components/GalleryItem.js":"25","/home/minty/lighthouse/meowtivate/front-end/src/helpers/calculateChecked.js":"26","/home/minty/lighthouse/meowtivate/front-end/src/components/Menu.jsx":"27","/home/minty/lighthouse/meowtivate/front-end/src/components/Progress.jsx":"28","/home/minty/lighthouse/meowtivate/front-end/src/components/UnlockBadge.jsx":"29","/home/minty/lighthouse/meowtivate/front-end/src/components/ActionList.jsx":"30","/home/minty/lighthouse/meowtivate/front-end/src/components/Popup.jsx":"31"},{"size":248,"mtime":1611546638111,"results":"32","hashOfConfig":"33"},{"size":3439,"mtime":1611546957109,"results":"34","hashOfConfig":"33"},{"size":533,"mtime":1611545201155,"results":"35","hashOfConfig":"33"},{"size":7361,"mtime":1611547232270,"results":"36","hashOfConfig":"33"},{"size":228,"mtime":1611350970315,"results":"37","hashOfConfig":"33"},{"size":1519,"mtime":1611610341226,"results":"38","hashOfConfig":"33"},{"size":2306,"mtime":1611611203469,"results":"39","hashOfConfig":"33"},{"size":1278,"mtime":1611350970399,"results":"40","hashOfConfig":"33"},{"size":461,"mtime":1611546638111,"results":"41","hashOfConfig":"33"},{"size":1566,"mtime":1611546638111,"results":"42","hashOfConfig":"33"},{"size":1118,"mtime":1611545201155,"results":"43","hashOfConfig":"33"},{"size":1048,"mtime":1611547716745,"results":"44","hashOfConfig":"33"},{"size":2243,"mtime":1611546638111,"results":"45","hashOfConfig":"33"},{"size":6127,"mtime":1611609650794,"results":"46","hashOfConfig":"33"},{"size":3379,"mtime":1611547614350,"results":"47","hashOfConfig":"33"},{"size":625,"mtime":1611562164388,"results":"48","hashOfConfig":"33"},{"size":1504,"mtime":1611546292749,"results":"49","hashOfConfig":"33"},{"size":839,"mtime":1611546638111,"results":"50","hashOfConfig":"33"},{"size":1201,"mtime":1611545201155,"results":"51","hashOfConfig":"33"},{"size":2416,"mtime":1611546292749,"results":"52","hashOfConfig":"33"},{"size":3934,"mtime":1611547600466,"results":"53","hashOfConfig":"33"},{"size":5002,"mtime":1611547599697,"results":"54","hashOfConfig":"33"},{"size":3768,"mtime":1611547597157,"results":"55","hashOfConfig":"33"},{"size":2124,"mtime":1611547001427,"results":"56","hashOfConfig":"33"},{"size":1189,"mtime":1611546638111,"results":"57","hashOfConfig":"33"},{"size":375,"mtime":1611350970363,"results":"58","hashOfConfig":"33"},{"size":4673,"mtime":1611567118210,"results":"59","hashOfConfig":"33"},{"size":569,"mtime":1611546638111,"results":"60","hashOfConfig":"33"},{"size":4707,"mtime":1611547698653,"results":"61","hashOfConfig":"33"},{"size":5309,"mtime":1611547470633,"results":"62","hashOfConfig":"33"},{"size":3665,"mtime":1611547611346,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"v3sst6",{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"/home/minty/lighthouse/meowtivate/front-end/src/index.js",[],["137","138"],"/home/minty/lighthouse/meowtivate/front-end/src/components/App.js",["139","140"],"/*\nApp.js is responsible for containing all the routes and passing state as props\n*/\nimport React, { useEffect, useState } from \"react\";\n\nimport \"./styles/App.css\";\nimport \"@fontsource/itim\";\nimport \"@fontsource/varela-round\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport getCurrentDate from \"../helpers/getCurrentDate\";\n\n// Hooks\nimport useApplicationData from \"../hooks/useApplicationData\";\n// import useAuth from \"../hooks/useAuth\";\n\n// Pages imported from src/pages dir\nimport WelcomePage from \"../pages/WelcomePage\";\nimport LoginPage from \"../pages/LoginPage\";\nimport RegisterPage from \"../pages/RegisterPage\";\nimport DashboardPage from \"../pages/DashboardPage\";\nimport ListsPage from \"../pages/ListsPage\";\nimport CatsPage from \"../pages/CatsPage\";\nimport AccountPage from \"../pages/AccountPage\";\nimport InventoryPage from \"../pages/InventoryPage\";\nimport ShopPage from \"../pages/ShopPage\";\n\nimport NotFoundPage from \"./404\";\n\nfunction App() {\n  const {\n    state,\n    actionFunctions,\n    catFunctions,\n    day,\n    setDay,\n  } = useApplicationData();\n  const { unlocked, account } = state;\n  const id = day ? day : 0;\n  // const id = 1;\n\n  const [streak, setStreak] = useState(3); // Hardcode initial streak value\n\n  // Add 1 to current streak if a cat was unlocked today\n  useEffect(() => {\n    const today = getCurrentDate();\n    // Get array of unlocked dates in \"yyyy-mm-dd\"\n    const currentUnlocked = unlocked.map((obj) =>\n      obj.date_unlocked.slice(0, 10)\n    );\n    if (currentUnlocked.includes(today)) {\n      setStreak((prev) => prev + 1);\n    }\n  }, [unlocked]);\n\n  // Change streak depending on user\n  useEffect(() => {\n    if (id === 2) {\n      setStreak(4);\n    } else if (id === 3) {\n      setStreak(0);\n    }\n  }, [state]);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          {/* Define route paths and nest page components inside */}\n          <Route exact path=\"/\" component={WelcomePage}>\n            <WelcomePage state={state} />\n          </Route>\n          <Route exact path=\"/login\" component={LoginPage}>\n            <LoginPage state={state} />\n          </Route>\n          <Route exact path=\"/register\" component={RegisterPage}>\n            <RegisterPage state={state} />\n          </Route>\n          <Route exact path=\"/dashboard\" component={DashboardPage}>\n            {/* <DashboardPage state={state} /> */}\n            <DashboardPage\n              state={state}\n              streak={streak}\n              day={day}\n              setDay={setDay}\n            />\n          </Route>\n          <Route exact path=\"/lists\" component={ListsPage}>\n            <ListsPage\n              state={state}\n              actionFunctions={actionFunctions}\n              catFunctions={catFunctions}\n            />\n          </Route>\n          <Route exact path=\"/cats\" component={CatsPage}>\n            <CatsPage state={state} />\n          </Route>\n          <Route exact path=\"/account\" component={AccountPage}>\n            <AccountPage state={state} />\n          </Route>\n          <Route exact path=\"/inventory\" component={InventoryPage}>\n            <InventoryPage state={state} />\n          </Route>\n          <Route exact path=\"/shop\" component={ShopPage}>\n            <ShopPage state={state} />\n          </Route>\n          <Route exact path=\"*\" component={NotFoundPage} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\nexport default App;\n","/home/minty/lighthouse/meowtivate/front-end/src/helpers/getCurrentDate.js",[],"/home/minty/lighthouse/meowtivate/front-end/src/hooks/useApplicationData.js",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/404.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/pages/RegisterPage.jsx",["141"],"/home/minty/lighthouse/meowtivate/front-end/src/pages/WelcomePage.jsx",["142"],"/home/minty/lighthouse/meowtivate/front-end/src/pages/LoginPage.jsx",["143"],"import TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: \"Varela Round\",\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  logo: {\n    fontFamily: \"itim\",\n    letterSpacing: \"8px\",\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n  },\n  button: {\n    fontFamily: \"Varela Round\",\n    textDecoration: \"none\",\n  },\n}));\n\nexport default function LoginPage(props) {\n  const classes = useStyles();\n  const { state } = props;\n\n  return (\n    <div className=\"Login\">\n      <h1 className={classes.header}>Meowtivate!</h1>\n      <h2 className={classes.header}>Login</h2>\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <div>\n        <TextField id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" value=\"Pawthos\" />\n      </div>\n      <div>\n      <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" value=\"****\"/>\n      </div>\n      <Button \n        variant=\"contained\" \n        color=\"secondary\"\n        component={Link}\n        to='/lists'>\n      Login\n      </Button>\n    </form>\n    </div>\n  )\n};","/home/minty/lighthouse/meowtivate/front-end/src/pages/ListsPage.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/pages/CatsPage.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/pages/ShopPage.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/pages/InventoryPage.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/pages/AccountPage.jsx",["144"],"import React, { useState, useEffect } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport NavBar from \"../components/NavBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport SaveRoundedIcon from \"@material-ui/icons/SaveRounded\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n  },\n}));\n\nexport default function AccountPage(props) {\n  // const user = props.state.account[0];\n  // console.log(\"AccountPage\", user);\n  // const { username, email } = user;\n\n  const classes = useStyles();\n\n  // Toggle between VIEW and EDIT modes\n  const [isEditable, setIsEditable] = useState(false);\n  const modeToggle = () => setIsEditable(!isEditable);\n\n  return (\n    <div className={classes.root}>\n      <NavBar />\n      <header>\n        <h2 className={classes.header}>my Account</h2>\n      </header>\n      <Card>\n        {props && (\n          <CardContent>\n            <h5>Username: Pawthos</h5>\n            <h5>Email: pawthos@gmail.com</h5>\n            <h5>Password: ********* </h5>{\" \"}\n          </CardContent>\n        )}\n      </Card>\n      <IconButton onClick={modeToggle}>\n        <EditRoundedIcon />\n      </IconButton>\n      {isEditable && (\n        <div>\n          Hello\n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <div>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Username\"\n                variant=\"outlined\"\n              />\n            </div>\n            <div>\n              <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" />\n            </div>\n\n            <div>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Password\"\n                variant=\"outlined\"\n              />\n            </div>\n            <IconButton>\n              <SaveRoundedIcon onClick={modeToggle} />\n            </IconButton>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/pages/DashboardPage.jsx",["145","146","147","148"],"/home/minty/lighthouse/meowtivate/front-end/src/helpers/stateHelpers.js",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/NavBar.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/ShopItem.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/GalleryContainer.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/InventoryItem.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/Weather.js",["149"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./styles/weather.css\";\n\nconst api = {\n  key: process.env.REACT_APP_WEATHER_API_KEY,\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\n// api.openweathermap.org/data/2.5/\n// weather?lat={lat}&lon={lon}&appid={API key}\n\nexport const Weather = () => {\n  // const [city, setCity] = useState(\"\");\n  const [weather, setWeather] = useState(\"\");\n\n  // const search = (event) => {\n  //   if (event.key === \"Enter\") {\n  //     fetch(`${api.base}weather?q=${city}&units=metric&APPID=${api.key}`)\n  //       .then((res) => res.json())\n  //       .then((result) => {\n  //         setWeather(result);\n  //         console.log(result);\n  //       });\n  //   }\n  // };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      fetch(`${api.base}weather?lat=${position.coords.latitude}&lon=${position.coords.longitude}&units=metric&appid=${api.key}`)\n      .then((res) => res.json())\n      .then((result) => {\n        setWeather(result);\n        // console.log(result);\n      });\n    });\n  }, [])\n  return (\n    <div\n      className={\n        typeof weather.main != \"undefined\"\n          ? weather.weather[0].main.includes(\"Cloud\")\n            ? \"weather Clouds\"\n            : \"weather\"\n          : \"weather\"\n      }\n    >\n      <section className=\"weather\">\n        {/* <div className=\"weather-search-box\">\n          <input\n            type=\"text\"\n            className=\"city-search-bar\"\n            placeholder=\"City...\"\n            onChange={(e) => setCity(e.target.value)}\n            value={city}\n            onKeyPress={search}\n          />\n        </div> */}\n        {typeof weather.main != \"undefined\" ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location\">\n                {weather.name}, {weather.sys.country}\n              </div>\n            </div>\n            <div className=\"temp\">{Math.round(weather.main.temp)}&deg;c</div>\n            <div className=\"weather\">{weather.weather[0].main}</div>\n            <div><img \n            className={weather.weather[0].main} \n            style={{display: 'block'}} \n            src={`https://meowtivate.s3-us-west-2.amazonaws.com/weather/${weather.weather[0].main}.png`} \n            alt=\"weather-image\"/>\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </section>\n    </div>\n  );\n};\n","/home/minty/lighthouse/meowtivate/front-end/src/components/Calendar-import.js",["150","151"],"import React, { useState, useEffect } from \"react\";\n\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\nimport { Calendar } from \"react-modern-calendar-datepicker\";\nimport \"./styles/calendar.css\";\nimport getCurrentDate from \"../helpers/getCurrentDate\";\n\nexport const CalendarApp = (props) => {\n  // const defaultValue = {\n  //   year: 2021,\n  //   month: 1,\n  //   day: 1,\n  // };\n  // const [selectedDay, setSelectedDay] = useState(defaultValue);\n  // console.log(\"calender\", props.items);\n\n  // const logDatas = { props };\n  // console.log(\"logDatas\", logDatas);\n  // const date = props.items.filter((item) => item.is_completed === true);\n  // let dayDates = date.map((item) => item.date_created.substring(8, 10));\n  // const parseIntDayArray = dayDates.map((item) => parseInt(item));\n\n  // // [\n  // // here we add some CSS classes\n  // //   { year: 2021, month: 1, day: 4, className: \"purpleDay\" },\n  // // ]\n\n  // let dayObject = parseIntDayArray.map((item) => ({\n  //   year: 2021,\n  //   month: 1,\n  //   day: item,\n  //   className: \"purpleDay\",\n  // }));\n\n  // return (\n  //   <>\n  //     <Calendar\n  //       value={selectedDay}\n  //       onChange={setSelectedDay}\n  //       shouldHighlightWeekends\n  //       customDaysClassName={dayObject}\n  //     />\n  //   </>\n\n  // Show different streak length depending on user id\n  const { state, day } = props;\n  // console.log(\"state in calendar\", state);\n  const { account, unlocked } = state;\n  // console.log(\"account\", account)\n  const id = day ? day : 0;\n  // const id = 4;\n\n  const streak1 = {\n    from: {\n      year: 2021,\n      month: 1,\n      day: 24,\n    },\n    to: {\n      year: 2021,\n      month: 1,\n      day: 26,\n    },\n  };\n  const streak1Add = {\n    from: {\n      year: 2021,\n      month: 1,\n      day: 24,\n    },\n    to: {\n      year: 2021,\n      month: 1,\n      day: 27,\n    },\n  };\n  const streak2 = {\n    from: {\n      year: 2021,\n      month: 1,\n      day: 24,\n    },\n    to: {\n      year: 2021,\n      month: 1,\n      day: 27,\n    },\n  };\n  const streak3 = [];\n  const streaksArray = [streak1, streak2, streak3, streak1Add];\n  const initialStreak = streaksArray[id - 1];\n\n  // Show different today selection depending on user id\n  const today1 = { year: 2021, month: 1, day: 27, className: \"todaySelect\" };\n  const today2 = { year: 2021, month: 1, day: 28, className: \"todaySelect\" };\n  const today3 = { year: 2021, month: 1, day: 29, className: \"todaySelect\" };\n  const todayArray = [today1, today2, today3];\n  const initialToday = todayArray[id - 1];\n\n  useEffect(() => {\n    setSelectedDayRange(streaksArray[id - 1]);\n    setToday(todayArray[id - 1]);\n    // console.log(\"id in useEffect\", id);\n  }, [account]);\n\n  const [selectedDayRange, setSelectedDayRange] = useState(initialStreak);\n  const [today, setToday] = useState(initialToday);\n\n  useEffect(() => {\n    const today = getCurrentDate();\n    const currentUnlocked = unlocked.map((obj) =>\n      obj.date_unlocked.slice(0, 10)\n    );\n    const todayUnlockExists = currentUnlocked.includes(today);\n\n    // console.log(\"calendar id\", id === 1);\n    // console.log(\"calendar todayUnlockExists\", todayUnlockExists);\n    if (id === 1 && todayUnlockExists) {\n      setSelectedDayRange(streak1Add);\n    }\n  }, [unlocked]);\n\n  return (\n    <Calendar\n      value={selectedDayRange}\n      onChange={setSelectedDayRange}\n      // colorPrimary=\"#0fbcf9\" // Range start and end\n      // colorPrimaryLight=\"rgba(75, 207, 250, 0.4)\" // Range middle\n      calendarTodayClassName=\"custom-today-day\"\n      shouldHighlightWeekends\n      customDaysClassName={[\n        // here we add some CSS classes\n        today,\n      ]}\n      renderFooter={() => (\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            padding: \"1rem 2rem\",\n          }}\n          className=\"footer\"\n        >\n          🌱 CURRENT STREAK\n        </div>\n      )}\n    />\n  );\n};\n","/home/minty/lighthouse/meowtivate/front-end/src/components/ListsContainer.jsx",["152","153","154","155","156"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ActionList from \"./ActionList\";\nimport CatPlant from \"./CatPlant\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Progress from \"./Progress\";\nimport UnlockBadge from \"./UnlockBadge\";\nimport calculateChecked from \"../helpers/calculateChecked\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    minWidth: \"10vw\",\n    minHeight: \"25vh\",\n    paddingLeft: \"5vw\",\n    paddingRight: \"5vw\",\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"8px\",\n  },\n  plantbox: {\n    position: \"static\",\n    zIndex: 1,\n    minWidth: \"10vw\",\n    minHeight: \"40vh\",\n    paddingLeft: \"5vw\",\n    paddingRight: \"5vw\",\n  },\n  lists: {\n    minWidth: \"10vw\",\n    minHeight: \"50vh\",\n  },\n}));\n\nexport default function ListContainer(props) {\n  const { state, actionFunctions, catFunctions, user } = props;\n  const { actions, todos, habits, unlocked, streaks, logDatas } = state;\n  const classes = useStyles();\n\n  // const { postLogData, updateStreak } = actionFunctions;\n  // console.log(\"actionFunctions in ListsContainer\", actionFunctions);\n  // console.log(\"streaks in ListsContainer\", streaks);\n  // console.log(\"streaks in logDatas\", logDatas);\n\n  const completed = actions.filter((obj) => obj.is_completed === true);\n  const checkedHabits = completed.filter((obj) => obj.category_id === 2);\n  const checkedTodos = completed.filter((obj) => obj.category_id === 1);\n  const habitIDs = calculateChecked(checkedHabits);\n  const todoIDs = calculateChecked(checkedTodos);\n\n  const totalAmount = actions.length;\n  const completedAmount = completed.length;\n  const completedPercentage = completedAmount / totalAmount;\n  const undoneAmount = totalAmount - completedAmount;\n\n  let today = new Date();\n  const dd = String(today.getDate()).padStart(2, \"0\");\n  const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0\n  const yyyy = today.getFullYear();\n  today = `${yyyy}-${mm}-${dd}`;\n\n  // console.log(\"rightnow\", today);\n\n  // useEffect(() => {\n  //   if (streaks) {\n  //     return () => {\n  //       const currentStreaksE = streaks.map((obj) =>\n  //         obj.date_update.slice(0, 10)\n  //       );\n  //       const todayStreakExists = currentStreaksE.includes(today);\n  //       const currentLog = logDatas.map((obj) => obj.date_created.slice(0, 10));\n  //       const todayLogExists = currentLog.includes(today);\n\n  //       if (completedPercentage >= 1 && !todayStreakExists) {\n  //         let val = streaks[0].current_streak + 1;\n  //         updateStreak(1, val);\n  //       }\n  //       if (completedPercentage >= 1 && !todayLogExists) {\n  //         postLogData(1, today);\n  //       }\n  //     };\n  //   }\n  // }, [streaks, logDatas]);\n\n  // console.log(\"Does the streaks changes?\", streaks);\n  // console.log(\"Does the logDatas changes?\", logDatas);\n\n  // console.log(\"Does toady\", todayStreakExists);\n  // const getStreak = (streaks) => {\n  //   if (!streaks) {\n  //     return streaks[0].current_streak;\n  //   }\n  //   const current_streak = getStreak(streaks);\n  //   console.log(\"curren_streak\", current_streak);\n  //   return \"updating streak\";\n  // };\n  // const currentUser = user.accounts[0].username;\n  // console.log(\"user\", currentUser);\n  return (\n    <>\n      <UnlockBadge state={state} catFunctions={catFunctions} />\n      <div className={classes.root}>\n        <h2 className={classes.header}>LET'S GET LOTS DONE TODAY</h2>\n        <Grid container spacing={4}>\n          <Grid item xs={4}>\n            <Card className={classes.lists}>\n              <CardContent>\n                <h3>Daily Habits</h3>\n                <ActionList\n                  items={habits}\n                  category={2}\n                  actionFunctions={actionFunctions}\n                  initChecked={habitIDs}\n                />\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={4}>\n            <Card className={classes.lists}>\n              <CardContent>\n                <h3>To-Do Today</h3>\n                <ActionList\n                  items={todos}\n                  category={1}\n                  actionFunctions={actionFunctions}\n                  initChecked={todoIDs}\n                />\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={4}>\n            <Card>\n              <CardContent>\n                {/* <div>\n              </div> */}\n                <div className={classes.plantbox}>\n                  <h3>Today's Progress</h3>\n                  <CatPlant actions={actions} />\n                </div>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Progress\n            completedPercentage={completedPercentage}\n            completedAmount={completedAmount}\n            totalAmount={totalAmount}\n          />\n        </Grid>\n      </div>\n    </>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/components/SMSForm.js",["157","158","159","160"],"import React, { Component, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport \"./SMSForm.css\";\n\nclass SMSForm extends Component {\n  constructor(props) {\n    // console.log(\"props\", props);\n    super(props);\n\n    this.state = {\n      tasks: [],\n      timer: \"\",\n      message: {\n        to: \"\",\n        body: \"\",\n      },\n      submitting: false,\n      error: false,\n      currentTime: \"\",\n      alarmTime: \"\",\n    };\n    // this.onSubmit = this.onSubmit.bind(this);\n    this.setAlarmTime = this.setAlarmTime.bind(this);\n  }\n  componentDidMount() {\n    axios.get(`/api/actions/1`).then((res) => {\n      // console.log(res.data);\n      const tasks = [...res.data];\n      const undone = tasks.filter((item) => item.is_completed !== true);\n      const undoneList = undone.map((item) => \"\\n 🐈 \" + item.action_name);\n      const msg =\n        \"_________________\" +\n        \"\\n ⏰  Reminder from Meowtivate. 🐈  \\nHere are your \" +\n        undoneList.length +\n        \" unfinished tasks for today: \" +\n        undoneList;\n      this.setState({\n        message: { ...this.state.message, body: msg },\n      });\n    });\n    this.clock = setInterval(() => this.setCurrentTime(), 1000);\n    this.interval = setInterval(() => this.checkAlarmClock(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.clock);\n    clearInterval(this.interval);\n  }\n\n  setCurrentTime() {\n    this.setState({\n      currentTime: new Date().toLocaleTimeString(\"en-US\", { hour12: false }),\n    });\n  }\n\n  setAlarmTime(event) {\n    event.preventDefault();\n    const inputAlarmTimeModified = event.target.value + \":00\";\n    this.setState({\n      alarmTime: inputAlarmTimeModified,\n    });\n  }\n\n  checkAlarmClock() {\n    if (this.state.alarmTime == \"undefined\" || !this.state.alarmTime) {\n      this.alarmMessage = \"If you want a reminder, you can set up time here:\";\n    } else {\n      this.alarmMessage = \"Your alarm is set for \" + this.state.alarmTime + \".\";\n      if (this.state.currentTime === this.state.alarmTime) {\n        this.setState({ submitting: true });\n        fetch(\"/api/messages\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(this.state.message),\n        })\n          .then((res) => res.json())\n          .then((data) => {\n            if (data.success) {\n              this.setState({\n                error: false,\n                submitting: false,\n                message: {\n                  body: \"\",\n                },\n              });\n            } else {\n              this.setState({\n                error: true,\n                submitting: false,\n              });\n            }\n          });\n        alert(this.state.message.body);\n      } else {\n        // console.log(\"Still have some time\");\n      }\n    }\n  }\n\n  render() {\n    const { tasks } = this.state;\n    const undone = tasks.filter((item) => item.is_completed !== true);\n    // console.log(\"undone\", undone);\n    // console.log(\"this.setState\", this.state.message);\n    // console.log(JSON.stringify(this.state.message));\n    const undoneList = undone.length ? (\n      undone.map((item) => {\n        return (\n          <div>\n            <li key={item.id}>{item.action_name}</li>\n          </div>\n        );\n      })\n    ) : (\n      <div>All done for today</div>\n    );\n    return (\n      <form\n        onSubmit={this.onSubmit}\n        className={this.state.error ? \"error sms-form\" : \"sms-form\"}\n      >\n        <div>\n          <h2>Current Time {this.state.currentTime}.</h2>\n          <p>{this.alarmMessage}</p>\n          <form>\n            <input type=\"time\" onChange={this.setAlarmTime}></input>\n          </form>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default SMSForm;\n","/home/minty/lighthouse/meowtivate/front-end/src/components/CatPlant.jsx",["161","162"],"import React, { useEffect} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles(theme => ({\n  pot: {\n    display: 'block',\n    width: '12vw',\n    position:'absolute',\n    bottom: '0px',\n    left: 'calc(50% - 6vw)',\n    zIndex: 2,\n  },\n  plant: {\n    opacity: 0,\n    width: '13vw',\n    position:'relative',\n    zIndex: 1,\n  },\n  plantContainer: {\n  position: 'relative',\n\n  },\n  animatedItem: {\n    animation: `$myEffect 1500ms ${theme.transitions.easing.easeInOut}`,\n\n  },\n\n  \"@keyframes myEffect\": {\n    '0%': {\n      transform: 'translateY(30%)',\n      opacity: 0,\n\n    },\n    '16%': {\n      transform: 'translateY(-3%)',\n      opacity: 1,\n\n    },\n    '28%': {\n      transform: 'translateY(5%)',\n\n    },\n    '44%': {\n      transform: 'translateY(-2%)'\n    },\n    '59%': {\n      transform: 'translateY(0%)'\n    },\n    '73%': {\n      transform: 'translateY(0%)'\n    },\n    '88%': {\n      transform: 'translateY(0%)'\n    },\n    '100%': {\n      transform: 'translateY(0%)'\n    }, \n  }\n}));\n\nexport default function CatPlant(props) {\n  const classes = useStyles();\n  const { actions } = props;\n  const [start, setStart] = React.useState(false);\n  let timer;\n\n  // Calculate percentage\n  const totalAmount = actions.length;\n  const totalCompleted = actions.filter(obj => obj.is_completed === true).length;\n  const initial = ( totalCompleted / totalAmount ) * 100;\n  const num = Math.floor(initial / 10) * 10;\n\n  // const [percentage, setPercentage] = useState(initial);\n  \n  useEffect(() => {\n    setStart(true);\n    timer = setTimeout(() => setStart(false), 1500);\n  }, [actions])\n\n  useEffect(() => {\n    return () => clearInterval(timer);\n  }, [start])\n\n  return (\n      <div className={classes.plantContainer}>\n        <img className={clsx(classes.plant,\n          {[classes.animatedItem]: start}\n        )} src={`https://meowtivate.s3-us-west-2.amazonaws.com/plants/${num}plant.png`} alt=\"plant\" style={{opacity: 1}}/>\n        <img className={classes.pot} src=\"https://meowtivate.s3-us-west-2.amazonaws.com/pots/01pot.png\" alt=\"pot\"/>\n      </div>\n);\n}","/home/minty/lighthouse/meowtivate/front-end/src/components/GalleryItem.js",[],"/home/minty/lighthouse/meowtivate/front-end/src/helpers/calculateChecked.js",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/Menu.jsx",["163","164"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Drawer, List, Divider, ListItem, IconButton } from '@material-ui/core';\nimport { MenuRounded, HomeRounded, AppsRounded, FormatListBulletedRounded, StorefrontRounded, AccountBoxRounded, SubdirectoryArrowLeftRounded, SpaRounded } from '@material-ui/icons';\n\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  menuItem: {\n    fontFamily: 'Varela Round',\n    color: 'dimgrey',\n    paddingTop: '0.5em',\n    fontSize: '1.2em'\n  },\n  menuIcon: {\n    fontSize: \"2em\",\n    color: '#fcd0c5',\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n}));\n\nexport default function SimpleMenu() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [state, setState] = React.useState({\n    left: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n  \n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        <ListItem className={classes.menuItem} component={Link} to=\"/dashboard\">\n          <HomeRounded style={{paddingRight: '0.25em'}}/>\n            My DashBoard\n        </ListItem>\n        <ListItem className={classes.menuItem} component={Link} to=\"/account\">\n          <AccountBoxRounded style={{paddingRight: '0.25em'}}/>\n            My Account\n        </ListItem>\n        <ListItem className={classes.menuItem} component={Link} to=\"/cats\" >\n          <AppsRounded style={{paddingRight: '0.25em'}}/>\n            My Collection\n        </ListItem>\n        <ListItem className={classes.menuItem} component={Link} to=\"/lists\">\n          <FormatListBulletedRounded style={{paddingRight: '0.25em'}}/>\n            My Lists\n        </ListItem>\n        <ListItem className={classes.menuItem} component={Link} to=\"/inventory\">\n          <SpaRounded style={{paddingRight: '0.25em'}}/>\n            My Inventory\n        </ListItem>\n        <Divider style={{margin: '0.5em'}}/>\n        <ListItem className={classes.menuItem} component={Link} to=\"/shop\">\n          <StorefrontRounded style={{paddingRight: '0.25em'}}/>\n            Shop\n        </ListItem>\n        <ListItem className={classes.menuItem} component={Link} to=\"/\">\n          <SubdirectoryArrowLeftRounded style={{paddingRight: '0.25em'}}/>\n            Logout\n        </ListItem>\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n      {['left'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <IconButton onClick={toggleDrawer(anchor, true)}>\n            <MenuRounded className={classes.menuIcon}/>\n          </IconButton>\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n            {list(anchor)}\n          </Drawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n\n  // const handleClick = (event) => {\n  //   setAnchorEl(event.currentTarget);\n  // };\n\n  // const handleClose = () => {\n  //   setAnchorEl(null);\n  // };\n\n  // return (\n\n    // <div>\n    //   <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n    //     <MenuRoundedIcon className={classes.menuIcon}/>\n    //   </Button>\n    //   <Menu\n    //     id=\"simple-menu\"\n    //     anchorEl={anchorEl}\n    //     keepMounted\n    //     open={Boolean(anchorEl)}\n    //     onClose={handleClose}\n    //   >\n    //     <MenuItem className={classes.menuItem} component={Link} to=\"/dashboard\">\n    //         My DashBoard\n    //     </MenuItem>\n    //     <MenuItem className={classes.menuItem} component={Link} to=\"/account\">\n    //         My Account\n    //     </MenuItem>\n    //     <MenuItem className={classes.menuItem} component={Link} to=\"/cats\" >\n    //         My Collection\n    //     </MenuItem>\n    //     <MenuItem className={classes.menuItem}  component={Link} to=\"/lists\">\n    //         My Lists\n    //     </MenuItem>\n    //     <MenuItem className={classes.menuItem} component={Link} to=\"/inventory\">\n    //         My Inventory\n    //     </MenuItem>\n    //     <MenuItem className={classes.menuItem} component={Link} to=\"/shop\">\n    //         Shop\n    //     </MenuItem>\n    //     <MenuItem className={classes.menuItem} component={Link} to=\"/\">\n    //         Logout\n    //     </MenuItem>\n    //   </Menu>\n    // </div>\n  // );\n}","/home/minty/lighthouse/meowtivate/front-end/src/components/Progress.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/UnlockBadge.jsx",["165","166","167"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport getCurrentDate from '../helpers/getCurrentDate';\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    maxHeight: \"20rem\",\n    position: \"absolute\",\n    top: \"calc(50% - 10rem)\",\n    left: \"calc(50% - 10rem)\",\n    zIndex: 100,\n  },\n  cat: {\n    height: \"15rem\",\n    position: \"absolute\",\n    top: \"calc(50% - 7rem)\",\n    left: \"calc(50% - 5rem)\",\n    zIndex: 101,\n  },\n  text: {\n    color: \"#a0cdca\",\n    fontFamily: \"Itim\",\n    fontSize: \"3.5em\",\n    position: \"absolute\",\n    top: \"calc(50% + 3rem)\",\n    left: \"calc(50% - 4.25em)\",\n    zIndex: 102,\n    WebkitTextStroke: 'darksalmon',\n    WebkitTextStrokeWidth: 'thin',\n  },\n  animatedItem: {\n    animation: `$myEffect 10000ms infinite linear`,\n\n  },\n  \"@keyframes myEffect\": {\n    '0%': {\n      transform: 'rotate(0deg)',\n    },\n    '100%': {\n      transform: 'rotate(360deg)',\n    }, \n  }\n}));\n\nexport default function UnlockBadge(props) {\n  const classes = useStyles();\n  const { state, catFunctions } = props;\n  const { actions, unlocked, allCats } = state;\n  const { addUnlocked } = catFunctions;\n  const [display, setDisplay] = useState({ display: \"none\" });\n  const [catID, setCatID] = useState(\"01\");\n\n  //click away hook\n  const [open, setOpen] = React.useState(false);\n\n  // Calculate percentage of actions done\n  const totalAmount = actions.length;\n  const totalCompleted = actions.filter((obj) => obj.is_completed === true)\n    .length;\n  const initial = (totalCompleted / totalAmount) * 100;\n  const percentage = Math.floor(initial / 10) * 10;\n\n  // Get current date\n  // let today = new Date();\n  // const dd = String(today.getDate()).padStart(2, \"0\");\n  // const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0\n  // const yyyy = today.getFullYear();\n  // today = `${yyyy}-${mm}-${dd}`;\n  // let today = new Date();\n  // const dd = String(today.getDate()).padStart(2, '0');\n  // const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0\n  // const yyyy = today.getFullYear();\n  // today = `${yyyy}-${mm}-${dd}`;\n  const today = getCurrentDate();\n\n  // console.log(\"date (unlocked)\", today)\n  // console.log(\"unlocked\", unlocked);\n\n  const currentUnlocked = unlocked.map((obj) => obj.date_unlocked.slice(0, 10));\n  const todayUnlockExists = currentUnlocked.includes(today);\n\n  //Decide whether to display badge\n  const decideDisplay = (percentage) => {\n    console.log(\"does unlock exist today?\", todayUnlockExists);\n\n    // If 100% complete and an unlock for today doesn't exist, unlock a cat\n    if (percentage === 100 && !todayUnlockExists) {\n      // Get locked cats IDs array\n      const unlockedCatsIDs = unlocked.map((obj) => obj.id);\n      const lockedCats = allCats.filter(\n        (obj) => !unlockedCatsIDs.includes(obj.id)\n      );\n      const lockedCatsIDs = lockedCats.map((obj) => obj.id);\n\n      // Randomly choose one from a range\n      const randomCatID =\n        lockedCatsIDs[Math.floor(Math.random() * lockedCatsIDs.length)];\n\n      // If cat_id is single digit, convert to string with 0 in front\n      if (randomCatID <= 9) {\n        setCatID(`0${randomCatID.toString()}`);\n      } else {\n        setCatID(randomCatID.toString());\n      }\n\n      setDisplay({ display: \"block\" });\n      setOpen(true);\n\n      // console.log(\"catID\", catID);\n      // console.log(\"display\", display);\n    }\n  };\n\n  // Run function to decide display\n  useEffect(() => {\n    // console.log(\"CURRENT PERCENTAGE IN USEEFFECT\", percentage);\n    if (percentage < 100) {\n      setDisplay({ display: \"none\" });\n    }\n    decideDisplay(percentage);\n  }, [actions]);\n\n  useEffect(() => {\n    // Call function to send POST req + change 'unlocked' state\n    // Takes in a cat_id and user_id\n    // console.log(\"display in useEffect\", display);\n    if (display.display === \"block\") {\n      addUnlocked(Number(catID), 1);\n    }\n  }, [display]);\n\n  const handleClickAway = () => {\n    setOpen(false);\n  };\n\n  return (\n    <ClickAwayListener onClickAway={handleClickAway}>\n      <div className={classes.display} style={display}>\n      {open ? (<>\n        <img \n          className={clsx(classes.root,classes.animatedItem)} \n          src='https://meowtivate.s3-us-west-2.amazonaws.com/unlock_badge.png' \n          alt='unlock_badge'/>\n        <img \n          className={classes.cat} \n          src={`https://meowtivate.s3-us-west-2.amazonaws.com/${catID}cat.png`}/>\n        <h2 className={classes.text}> CONGRATULATIONS!</h2>\n        </>) : null}\n      </div>\n    </ClickAwayListener>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/components/ActionList.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/Popup.jsx",[],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":37,"column":21,"nodeType":"174","messageId":"175","endLine":37,"endColumn":28},{"ruleId":"176","severity":1,"message":"177","line":62,"column":6,"nodeType":"178","endLine":62,"endColumn":13,"suggestions":"179"},{"ruleId":"172","severity":1,"message":"180","line":29,"column":11,"nodeType":"174","messageId":"175","endLine":29,"endColumn":16},{"ruleId":"172","severity":1,"message":"181","line":62,"column":9,"nodeType":"174","messageId":"175","endLine":62,"endColumn":14},{"ruleId":"172","severity":1,"message":"180","line":29,"column":11,"nodeType":"174","messageId":"175","endLine":29,"endColumn":16},{"ruleId":"172","severity":1,"message":"182","line":1,"column":27,"nodeType":"174","messageId":"175","endLine":1,"endColumn":36},{"ruleId":"172","severity":1,"message":"183","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":25},{"ruleId":"172","severity":1,"message":"182","line":1,"column":27,"nodeType":"174","messageId":"175","endLine":1,"endColumn":36},{"ruleId":"172","severity":1,"message":"184","line":3,"column":8,"nodeType":"174","messageId":"175","endLine":3,"endColumn":26},{"ruleId":"172","severity":1,"message":"185","line":12,"column":8,"nodeType":"174","messageId":"175","endLine":12,"endColumn":15},{"ruleId":"186","severity":1,"message":"187","line":68,"column":18,"nodeType":"188","endLine":72,"endColumn":34},{"ruleId":"176","severity":1,"message":"189","line":104,"column":6,"nodeType":"178","endLine":104,"endColumn":15,"suggestions":"190"},{"ruleId":"176","severity":1,"message":"191","line":121,"column":6,"nodeType":"178","endLine":121,"endColumn":16,"suggestions":"192"},{"ruleId":"172","severity":1,"message":"193","line":39,"column":49,"nodeType":"174","messageId":"175","endLine":39,"endColumn":53},{"ruleId":"172","severity":1,"message":"194","line":40,"column":35,"nodeType":"174","messageId":"175","endLine":40,"endColumn":43},{"ruleId":"172","severity":1,"message":"195","line":40,"column":45,"nodeType":"174","messageId":"175","endLine":40,"endColumn":52},{"ruleId":"172","severity":1,"message":"196","line":40,"column":54,"nodeType":"174","messageId":"175","endLine":40,"endColumn":62},{"ruleId":"172","severity":1,"message":"197","line":57,"column":9,"nodeType":"174","messageId":"175","endLine":57,"endColumn":21},{"ruleId":"172","severity":1,"message":"183","line":1,"column":28,"nodeType":"174","messageId":"175","endLine":1,"endColumn":36},{"ruleId":"172","severity":1,"message":"182","line":1,"column":38,"nodeType":"174","messageId":"175","endLine":1,"endColumn":47},{"ruleId":"198","severity":1,"message":"199","line":66,"column":30,"nodeType":"200","messageId":"201","endLine":66,"endColumn":32},{"ruleId":"172","severity":1,"message":"202","line":109,"column":11,"nodeType":"174","messageId":"175","endLine":109,"endColumn":21},{"ruleId":"176","severity":1,"message":"203","line":78,"column":13,"nodeType":"204","endLine":78,"endColumn":52},{"ruleId":"176","severity":1,"message":"205","line":83,"column":6,"nodeType":"178","endLine":83,"endColumn":13,"suggestions":"206"},{"ruleId":"172","severity":1,"message":"207","line":30,"column":10,"nodeType":"174","messageId":"175","endLine":30,"endColumn":18},{"ruleId":"172","severity":1,"message":"208","line":30,"column":20,"nodeType":"174","messageId":"175","endLine":30,"endColumn":31},{"ruleId":"176","severity":1,"message":"209","line":124,"column":6,"nodeType":"178","endLine":124,"endColumn":15,"suggestions":"210"},{"ruleId":"176","severity":1,"message":"211","line":133,"column":6,"nodeType":"178","endLine":133,"endColumn":15,"suggestions":"212"},{"ruleId":"213","severity":1,"message":"214","line":147,"column":9,"nodeType":"188","endLine":149,"endColumn":82},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"no-unused-vars","'account' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["217"],"'state' is assigned a value but never used.","'login' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'ForwardRoundedIcon' is defined but never used.","'SMSForm' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'id', 'streaksArray', and 'todayArray'. Either include them or remove the dependency array.",["218"],"React Hook useEffect has missing dependencies: 'id' and 'streak1Add'. Either include them or remove the dependency array.",["219"],"'user' is assigned a value but never used.","'unlocked' is assigned a value but never used.","'streaks' is assigned a value but never used.","'logDatas' is assigned a value but never used.","'undoneAmount' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'undoneList' is assigned a value but never used.","Assignments to the 'timer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has a missing dependency: 'timer'. Either include it or remove the dependency array.",["220"],"'anchorEl' is assigned a value but never used.","'setAnchorEl' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'decideDisplay' and 'percentage'. Either include them or remove the dependency array.",["221"],"React Hook useEffect has missing dependencies: 'addUnlocked' and 'catID'. Either include them or remove the dependency array.",["222"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},"Update the dependencies array to be: [id, state]",{"range":"235","text":"236"},"Update the dependencies array to be: [account, id, streaksArray, todayArray]",{"range":"237","text":"238"},"Update the dependencies array to be: [id, streak1Add, unlocked]",{"range":"239","text":"240"},"Update the dependencies array to be: [start, timer]",{"range":"241","text":"242"},"Update the dependencies array to be: [actions, decideDisplay, percentage]",{"range":"243","text":"244"},"Update the dependencies array to be: [addUnlocked, catID, display]",{"range":"245","text":"246"},[1777,1784],"[id, state]",[2690,2699],"[account, id, streaksArray, todayArray]",[3250,3260],"[id, streak1Add, unlocked]",[1714,1721],"[start, timer]",[3776,3785],"[actions, decideDisplay, percentage]",[4050,4059],"[addUnlocked, catID, display]"]