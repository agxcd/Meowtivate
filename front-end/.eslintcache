[{"/Users/ag/lighthouse/meowtivate/front-end/src/index.js":"1","/Users/ag/lighthouse/meowtivate/front-end/src/components/App.js":"2","/Users/ag/lighthouse/meowtivate/front-end/src/helpers/getCurrentDate.js":"3","/Users/ag/lighthouse/meowtivate/front-end/src/hooks/useApplicationData.js":"4","/Users/ag/lighthouse/meowtivate/front-end/src/components/404.jsx":"5","/Users/ag/lighthouse/meowtivate/front-end/src/pages/DashboardPage.jsx":"6","/Users/ag/lighthouse/meowtivate/front-end/src/pages/ListsPage.jsx":"7","/Users/ag/lighthouse/meowtivate/front-end/src/pages/LoginPage.jsx":"8","/Users/ag/lighthouse/meowtivate/front-end/src/pages/CatsPage.jsx":"9","/Users/ag/lighthouse/meowtivate/front-end/src/pages/WelcomePage.jsx":"10","/Users/ag/lighthouse/meowtivate/front-end/src/pages/RegisterPage.jsx":"11","/Users/ag/lighthouse/meowtivate/front-end/src/pages/InventoryPage.jsx":"12","/Users/ag/lighthouse/meowtivate/front-end/src/pages/ShopPage.jsx":"13","/Users/ag/lighthouse/meowtivate/front-end/src/pages/AccountPage.jsx":"14","/Users/ag/lighthouse/meowtivate/front-end/src/helpers/stateHelpers.js":"15","/Users/ag/lighthouse/meowtivate/front-end/src/components/Weather.js":"16","/Users/ag/lighthouse/meowtivate/front-end/src/components/Calendar-import.js":"17","/Users/ag/lighthouse/meowtivate/front-end/src/components/NavBar.jsx":"18","/Users/ag/lighthouse/meowtivate/front-end/src/components/CatPlant.jsx":"19","/Users/ag/lighthouse/meowtivate/front-end/src/components/GalleryContainer.jsx":"20","/Users/ag/lighthouse/meowtivate/front-end/src/components/ShopItem.jsx":"21","/Users/ag/lighthouse/meowtivate/front-end/src/components/InventoryItem.jsx":"22","/Users/ag/lighthouse/meowtivate/front-end/src/components/ListsContainer.jsx":"23","/Users/ag/lighthouse/meowtivate/front-end/src/components/GalleryItem.js":"24","/Users/ag/lighthouse/meowtivate/front-end/src/helpers/calculateChecked.js":"25","/Users/ag/lighthouse/meowtivate/front-end/src/components/Menu.jsx":"26","/Users/ag/lighthouse/meowtivate/front-end/src/components/UnlockBadge.jsx":"27","/Users/ag/lighthouse/meowtivate/front-end/src/components/Progress.jsx":"28","/Users/ag/lighthouse/meowtivate/front-end/src/components/ActionList.jsx":"29","/Users/ag/lighthouse/meowtivate/front-end/src/components/Popup.jsx":"30","/Users/ag/lighthouse/meowtivate/front-end/src/components/reportWebVitals.js":"31","/Users/ag/lighthouse/meowtivate/front-end/src/components/SMSForm.js":"32"},{"size":248,"mtime":1611627630572,"results":"33","hashOfConfig":"34"},{"size":3860,"mtime":1611627831312,"results":"35","hashOfConfig":"34"},{"size":533,"mtime":1611529422532,"results":"36","hashOfConfig":"34"},{"size":8249,"mtime":1611627831314,"results":"37","hashOfConfig":"34"},{"size":228,"mtime":1611210454057,"results":"38","hashOfConfig":"34"},{"size":6661,"mtime":1611627831316,"results":"39","hashOfConfig":"34"},{"size":461,"mtime":1611627831317,"results":"40","hashOfConfig":"34"},{"size":2257,"mtime":1611627978078,"results":"41","hashOfConfig":"34"},{"size":1566,"mtime":1611627630574,"results":"42","hashOfConfig":"34"},{"size":2442,"mtime":1611633008036,"results":"43","hashOfConfig":"34"},{"size":2618,"mtime":1611633030481,"results":"44","hashOfConfig":"34"},{"size":1477,"mtime":1611627630575,"results":"45","hashOfConfig":"34"},{"size":1603,"mtime":1611627831318,"results":"46","hashOfConfig":"34"},{"size":2370,"mtime":1611628967404,"results":"47","hashOfConfig":"34"},{"size":4871,"mtime":1611627831314,"results":"48","hashOfConfig":"34"},{"size":2416,"mtime":1611627630568,"results":"49","hashOfConfig":"34"},{"size":3934,"mtime":1611627630559,"results":"50","hashOfConfig":"34"},{"size":627,"mtime":1611627630564,"results":"51","hashOfConfig":"34"},{"size":2563,"mtime":1611627630560,"results":"52","hashOfConfig":"34"},{"size":839,"mtime":1611627630561,"results":"53","hashOfConfig":"34"},{"size":2554,"mtime":1611627831313,"results":"54","hashOfConfig":"34"},{"size":1676,"mtime":1611632983465,"results":"55","hashOfConfig":"34"},{"size":5031,"mtime":1611627831312,"results":"56","hashOfConfig":"34"},{"size":1189,"mtime":1611627630561,"results":"57","hashOfConfig":"34"},{"size":375,"mtime":1611526696236,"results":"58","hashOfConfig":"34"},{"size":4672,"mtime":1611627630563,"results":"59","hashOfConfig":"34"},{"size":4707,"mtime":1611627831314,"results":"60","hashOfConfig":"34"},{"size":569,"mtime":1611627630566,"results":"61","hashOfConfig":"34"},{"size":5196,"mtime":1611627630558,"results":"62","hashOfConfig":"34"},{"size":3665,"mtime":1611627630565,"results":"63","hashOfConfig":"34"},{"size":362,"mtime":1610857214451,"results":"64","hashOfConfig":"34"},{"size":3768,"mtime":1611627630566,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1523fzl",{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"72"},"/Users/ag/lighthouse/meowtivate/front-end/src/index.js",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/App.js",["143","144"],"/Users/ag/lighthouse/meowtivate/front-end/src/helpers/getCurrentDate.js",[],["145","146"],"/Users/ag/lighthouse/meowtivate/front-end/src/hooks/useApplicationData.js",["147"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  removeFromActions,\n  addToActions,\n  getActionProperty,\n  modifyActionWith,\n  getNewUnlockedCat,\n} from \"../helpers/stateHelpers\";\n\nexport default function useApplicationDate() {\n  const [state, setState] = useState({\n    unlocked: [],\n    todos: [],\n    habits: [],\n    actions: [],\n    account: [],\n    allCats: [],\n    shopInventory: [],\n    userInventory: [],\n  });\n\n  // User/day picker state\n  const [day, setDay] = useState(1);\n  \n  // Log current state for debugging\n  useEffect(() => {\n    console.log(\"Current state:\", state)\n  }, [state])\n\n  //--------------------\n  // ACTION FUNCTIONS //\n  //--------------------\n  const addAction = (action_name, categoryID) => {\n    console.log(\"action_name in useApp\", action_name);\n\n    if (categoryID === 1) {\n      // TODOS\n      return axios.post(\"/api/todos/\", { action_name }).then(res => {\n        const actions = addToActions(res.data, state); // res.data contains the action obj\n        const todos = actions.filter(obj => obj.category_id === 1);\n\n        console.log(\"updatedActions\", actions);\n        // console.log(\"updatedHabits\", habits);\n        console.log(\"updatedTodos\", todos);\n\n        setState({\n          ...state,\n          actions,\n          todos,\n        });\n      });\n    } else if (categoryID === 2) {\n      // HABITS\n      return axios.post(\"/api/habits/\", { action_name }).then(res => {\n        const actions = addToActions(res.data, state);\n        const habits = actions.filter(obj => obj.category_id === 2);\n\n        console.log(\"updatedActions\", actions);\n        console.log(\"updatedHabits\", habits);\n        // console.log(\"updatedTodos\", todos);\n\n        setState({\n          ...state,\n          actions,\n          habits,\n        });\n      });\n    }\n  };\n\n  const deleteAction = actionID => {\n    // Get updated actions\n    const actions = removeFromActions(actionID, state);\n    const habits = actions.filter(obj => obj.category_id === 2);\n    const todos = actions.filter(obj => obj.category_id === 1);\n\n    // Delete action in db and update state\n    return axios.delete(`/api/actions/${actionID}`).then(() => {\n      setState({\n        ...state,\n        todos,\n        habits,\n        actions,\n      });\n    });\n  };\n\n  const editActionName = (id, action_name) => {\n    // Get the action's current is_completed bool\n    const is_completed = getActionProperty(id, \"is_completed\", state);\n\n    // Pass to modifyActionWith function\n    const actions = modifyActionWith(action_name, \"action_name\", id, state);\n    const habits = actions.filter(obj => obj.category_id === 2);\n    const todos = actions.filter(obj => obj.category_id === 1);\n\n    console.log(\"updatedActions\", actions);\n    console.log(\"updatedHabits\", habits);\n    console.log(\"updatedTodos\", todos);\n\n    // Update action_name of action in db and update state\n    return axios\n      .put(`/api/actions/${id}`, { id, action_name, is_completed })\n      .then(() => {\n        setState({\n          ...state,\n          actions,\n          habits,\n          todos,\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  // Update state when checkboxes are clicked\n  const editCompletedState = (id, is_completed) => {\n    // Get the action's current action_name\n    const action_name = getActionProperty(id, \"action_name\", state);\n\n    // Pass to modifyActionWith function\n    const actions = modifyActionWith(is_completed, \"is_completed\", id, state);\n    const habits = actions.filter(obj => obj.category_id === 2);\n    const todos = actions.filter(obj => obj.category_id === 1);\n\n    console.log(\"updatedActions\", actions);\n    console.log(\"updatedHabits\", habits);\n    console.log(\"updatedTodos\", todos);\n\n    // Update is_completed of action in db and update state\n    return axios\n      .put(`/api/actions/${id}`, { id, action_name, is_completed })\n      .then(() => {\n        setState({\n          ...state,\n          actions,\n          habits,\n          todos,\n        });\n      });\n  };\n\n  // Store all action-altering functions in obj to easily pass down as props\n  const actionFunctions = {\n    addAction,\n    deleteAction,\n    editActionName,\n    editCompletedState\n  };\n\n  //---------------------------\n  // UNLOCKED CATS FUNCTIONS //\n  //---------------------------\n\n  const addUnlocked = (cat_id, user_id) => {\n    return axios\n      .post('/api/collections/unlocked', {cat_id, user_id})\n      .then((res) => {\n        // Get newly unlocked cat and add to 'unlocked'\n        const unlocked = getNewUnlockedCat(cat_id, res.data, state);\n\n        setState({\n          ...state,\n          unlocked\n        });\n      });\n  };\n\n  // Store all cat functions\n  const catFunctions = {\n    addUnlocked,\n  }\n\n  useEffect(() => {\n    Promise.all([\n      axios.get(`/api/collections/${day}`),\n      axios.get(`/api/todos/${day}`),\n      axios.get(`/api/habits/${day}`),\n      axios.get(`/api/actions/${day}`),\n      axios.get(`/api/accounts/${day}`),\n      axios.get(`/api/collections`),\n      axios.get(`/api/shop/${day}`),\n      axios.get(`/api/inventory/${day}`),\n      // axios.get(\"/api/collections/1\"),\n      // axios.get(\"/api/todos/1\"),\n      // axios.get(\"/api/habits/1\"),\n      // axios.get(\"/api/actions/1\"),\n      // axios.get(\"/api/accounts/1\"),\n      // axios.get(\"/api/collections\"),\n    ])\n      .then(res => {\n        // console.log(\"shop\", res[6].data);\n\n        setState(prev => ({\n          ...prev,\n          unlocked: res[0].data,\n          todos: res[1].data,\n          habits: res[2].data,\n          actions: res[3].data,\n          account: res[4].data,\n          allCats: res[5].data,\n          shopInventory: res[6].data,\n          userInventory: res[7].data,\n        }));\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }, [day]);\n\n  return { state, actionFunctions, catFunctions, setDay, day };\n}\n","/Users/ag/lighthouse/meowtivate/front-end/src/components/404.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/pages/DashboardPage.jsx",["148","149","150","151"],"<<<<<<< HEAD\nimport React, { useState, useEffect } from \"react\";\nimport {\n  makeStyles,\n  Grid,\n  Button,\n  Card,\n  CardContent,\n  IconButton,\n} from \"@material-ui/core\";\nimport ForwardRoundedIcon from \"@material-ui/icons/ForwardRounded\";\n=======\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles, Grid, Button, Card, CardContent, IconButton } from '@material-ui/core';\nimport ForwardRoundedIcon from '@material-ui/icons/ForwardRounded';\nimport DoubleArrowRoundedIcon from '@material-ui/icons/DoubleArrowRounded';\n>>>>>>> 5a092269b176e15e8fe78fac7c9665871ec758d9\nimport { Weather } from \"../components/Weather\";\nimport { CalendarApp } from \"../components/Calendar-import\";\nimport { Link } from \"react-router-dom\";\nimport NavBar from \"../components/NavBar\";\nimport CatPlant from \"../components/CatPlant\";\n\n// import getCurrentDate from \"../helpers/getCurrentDate\";\nimport SMSForm from \"../components/SMSForm\";\n// import Card from \"@material-ui/core/Card\";\n// import CardContent from \"@material-ui/core/CardContent\";\nimport getCurrentDate from \"../helpers/getCurrentDate\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: \"5vw\",\n    paddingRight: \"5vw\",\n  },\n  grid: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  margin: {\n    marginTop: \"2vh\",\n  },\n  coin: {\n    height: \"2.5rem\",\n  },\n  coinstyle: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  numOfCoins: {\n    paddingRight: \"0.5rem\",\n  },\n  iconButton: {\n    width: \"4rem\",\n    height: \"4rem\",\n  },\n  streakNum: {\n    backgroundColor: \"#a0cdca\",\n    width: \"5rem\",\n    height: \"8rem\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    borderRadius: \"2rem\",\n    alignItems: \"center\",\n    fontSize: \"2em\",\n    color: \"white\",\n  },\n  streakContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  listButton: {\n<<<<<<< HEAD\n    backgroundColor: \"#fee2b1\",\n    fontFamily: \"Itim\",\n    margin: \"0.5vh\",\n    fontSize: \"1.5em\",\n    paddingLeft: \"0.5em\",\n    paddingRight: \"0.5em\",\n    transition: \"0.3s\",\n    \"&:hover\": {\n      color: \"white\",\n      backgroundColor: \"#dbc6a1\",\n    },\n  },\n  collectionButton: {\n    backgroundColor: \"#fcd0c5\",\n    fontFamily: \"Itim\",\n    margin: \"0.5vh\",\n    fontSize: \"1.5em\",\n    paddingLeft: \"0.5em\",\n    paddingRight: \"0.5em\",\n    transition: \"0.3s\",\n    \"&:hover\": {\n      color: \"white\",\n      backgroundColor: \"#e6c3bb\",\n    },\n  },\n  accountButton: {\n    backgroundColor: \"#aedaa5\",\n    fontFamily: \"Itim\",\n    margin: \"0.5vh\",\n    fontSize: \"1.5em\",\n    paddingLeft: \"0.5em\",\n    paddingRight: \"0.5em\",\n    transition: \"0.3s\",\n    \"&:hover\": {\n      color: \"white\",\n      backgroundColor: \"#a2bb9d\",\n    },\n=======\n    backgroundColor: '#fee2b1',\n    fontFamily: 'Itim',\n    margin: '0.5vh',\n    fontSize: '1.5em',\n    paddingLeft: '0.5em',\n    paddingRight: '0.5em',\n    boxShadow: '0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)',\n    color: 'grey',\n    '&:hover': {\n      backgroundColor: '#dbc6a1',\n      color: 'white',\n    }\n  },\n  collectionButton: {\n    backgroundColor: '#fcd0c5',\n    fontFamily: 'Itim',\n    margin: '0.5vh',\n    fontSize: '1.5em',\n    paddingLeft: '0.5em',\n    paddingRight: '0.5em',\n    boxShadow: '0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)',\n    color: 'grey',\n    '&:hover': {\n      backgroundColor: '#e6c3bb',\n      color: 'white',\n    }\n  },\n  accountButton: {\n    backgroundColor: '#aedaa5',\n    fontFamily: 'Itim',\n    margin: '0.5vh',\n    fontSize: '1.5em',\n    paddingLeft: '0.5em',\n    paddingRight: '0.5em',\n    boxShadow: '0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)',\n    color: 'grey',\n    '&:hover': {\n      backgroundColor: '#a2bb9d',\n      color: 'white',\n    }\n  },\n  inventoryButton: {\n    backgroundColor: '#e0c8df',\n    fontFamily: 'Itim',\n    margin: '0.5vh',\n    fontSize: '1.5em',\n    paddingLeft: '0.5em',\n    paddingRight: '0.5em',\n    boxShadow: '0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)',\n    color: 'grey',\n    '&:hover': {\n      backgroundColor: '#c9bcc8',\n      color: 'white',\n    }\n>>>>>>> 5a092269b176e15e8fe78fac7c9665871ec758d9\n  },\n}));\n\nexport default function DashboardPage(props) {\n  const { state, streak, day, setDay, id, coins, setCoins } = props;\n  const { unlocked, actions } = state;\n  const classes = useStyles();\n  // const [coins, setCoins] = useState(streak * 100);\n\n  // Go to next day\n  const changeDay = () => {\n    if (day >= 1 && day < 3) {\n      setDay((prev) => prev + 1);\n    }\n  };\n\n  useEffect(() => {\n    if (id === 2) {\n      setCoins(0);\n    }\n  }, [id]);\n\n  // useEffect(() => {\n  //   const today = getCurrentDate();\n  //   // Get array of unlocked dates in \"yyyy-mm-dd\"\n  //   const currentUnlocked = unlocked.map(obj => obj.date_unlocked.slice(0, 10));\n  //   if (currentUnlocked.includes(today)) {\n  //     setCoins(prev => prev + 100);\n  //   } else {\n  //     setCoins(streak * 100)\n  //   }\n  // }, [streak])\n\n  return (\n    <div>\n      <header>\n        <NavBar />\n        {/* <h1>Welcome {props.state.account[0].name}!</h1> */}\n      </header>\n      <Grid container spacing={3} className={classes.root}>\n        <Grid item xs={4} className={classes.grid}>\n          {/* // <CalendarApp items={state.logDatas} /> */}\n          {/* <Card>\n              <CardContent>\n                <Weather />\n              </CardContent>\n            </Card> */}\n          <CalendarApp state={state} day={day} />\n          <Grid>\n            <IconButton onClick={changeDay}>\n<<<<<<< HEAD\n              <ForwardRoundedIcon className={classes.iconButton} />\n=======\n              <DoubleArrowRoundedIcon className={classes.iconButton}/>\n>>>>>>> 5a092269b176e15e8fe78fac7c9665871ec758d9\n            </IconButton>\n          </Grid>\n        </Grid>\n        <Grid item xs={4} className={classes.grid}>\n          <div className={classes.streakContainer}>\n            <h3>CURRENT STREAK IS</h3>\n            <div className={classes.streakNum}>\n              <h1>{streak}</h1>\n            </div>\n            <h4>DAYS</h4>\n          </div>\n          <Card>\n            <CardContent>\n              <Grid item>\n                <Button\n                  className={classes.listButton}\n                  component={Link}\n                  to=\"/lists\"\n                >\n                  My Lists\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  className={classes.collectionButton}\n                  component={Link}\n                  to=\"/cats\"\n                >\n                  My Collection\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  className={classes.accountButton}\n                  component={Link}\n                  to=\"/account\"\n                >\n                  My Account\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button className={classes.inventoryButton} component={Link} to=\"/inventory\">\n                  My Inventory\n                </Button>\n              </Grid>\n            </CardContent>\n          </Card>\n          <Card className={classes.margin}>\n            <CardContent className={classes.coinstyle}>\n              <h3 className={classes.numOfCoins}>{coins}</h3>\n              <img\n                className={classes.coin}\n                src=\"https://meowtivate.s3-us-west-2.amazonaws.com/miscellaneous/meowcoin.png\"\n                alt=\"meowcoin\"\n              />\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={4} className={classes.grid}>\n          <Grid>\n            <Card>\n              <CardContent>\n                <Weather />\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid className={classes.margin}>\n            <Card>\n              <CardContent>\n                <CatPlant actions={actions} />\n              </CardContent>\n            </Card>\n            <SMSForm />\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/ag/lighthouse/meowtivate/front-end/src/pages/ListsPage.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/pages/LoginPage.jsx",["152"],"/Users/ag/lighthouse/meowtivate/front-end/src/pages/CatsPage.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/pages/WelcomePage.jsx",["153"],"/Users/ag/lighthouse/meowtivate/front-end/src/pages/RegisterPage.jsx",["154"],"/Users/ag/lighthouse/meowtivate/front-end/src/pages/InventoryPage.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/pages/ShopPage.jsx",["155","156","157"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport NavBar from '../components/NavBar';\nimport ShopItem from '../components/ShopItem';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    paddingLeft: '5vw',\n    paddingRight: '5vw',\n  },\n}));\n\nexport default function ShopPage(props) {\n  const classes = useStyles();\n  const { state } = props;\n  const shopInventory = state.shopInventory;\n  // console.log('shopInven', shopInventory)\n  \n  return (\n    <>\n      <header>\n        <NavBar/>\n        <h1>Welcome to the Shop!</h1>\n      </header>\n      <body className={classes.root}>\n        <Grid container spacing={3}>\n          {shopInventory.map((items) => {\n            return (\n              <ShopItem \n              key={items.id}\n              name={items.pot_name}\n              image={items.image_url}\n              description={items.description}\n              price={items.price}\n              // style={props.style}\n              />\n            );\n          })}\n        </Grid>\n      </body>\n    </>\n  );\n}\n","/Users/ag/lighthouse/meowtivate/front-end/src/pages/AccountPage.jsx",["158","159"],"/Users/ag/lighthouse/meowtivate/front-end/src/helpers/stateHelpers.js",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/Weather.js",["160"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./styles/weather.css\";\n\nconst api = {\n  key: process.env.REACT_APP_WEATHER_API_KEY,\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\n// api.openweathermap.org/data/2.5/\n// weather?lat={lat}&lon={lon}&appid={API key}\n\nexport const Weather = () => {\n  // const [city, setCity] = useState(\"\");\n  const [weather, setWeather] = useState(\"\");\n\n  // const search = (event) => {\n  //   if (event.key === \"Enter\") {\n  //     fetch(`${api.base}weather?q=${city}&units=metric&APPID=${api.key}`)\n  //       .then((res) => res.json())\n  //       .then((result) => {\n  //         setWeather(result);\n  //         console.log(result);\n  //       });\n  //   }\n  // };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      fetch(`${api.base}weather?lat=${position.coords.latitude}&lon=${position.coords.longitude}&units=metric&appid=${api.key}`)\n      .then((res) => res.json())\n      .then((result) => {\n        setWeather(result);\n        // console.log(result);\n      });\n    });\n  }, [])\n  return (\n    <div\n      className={\n        typeof weather.main != \"undefined\"\n          ? weather.weather[0].main.includes(\"Cloud\")\n            ? \"weather Clouds\"\n            : \"weather\"\n          : \"weather\"\n      }\n    >\n      <section className=\"weather\">\n        {/* <div className=\"weather-search-box\">\n          <input\n            type=\"text\"\n            className=\"city-search-bar\"\n            placeholder=\"City...\"\n            onChange={(e) => setCity(e.target.value)}\n            value={city}\n            onKeyPress={search}\n          />\n        </div> */}\n        {typeof weather.main != \"undefined\" ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location\">\n                {weather.name}, {weather.sys.country}\n              </div>\n            </div>\n            <div className=\"temp\">{Math.round(weather.main.temp)}&deg;c</div>\n            <div className=\"weather\">{weather.weather[0].main}</div>\n            <div><img \n            className={weather.weather[0].main} \n            style={{display: 'block'}} \n            src={`https://meowtivate.s3-us-west-2.amazonaws.com/weather/${weather.weather[0].main}.png`} \n            alt=\"weather-image\"/>\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </section>\n    </div>\n  );\n};\n","/Users/ag/lighthouse/meowtivate/front-end/src/components/Calendar-import.js",["161","162"],"import React, { useState, useEffect } from \"react\";\n\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\nimport { Calendar } from \"react-modern-calendar-datepicker\";\nimport \"./styles/calendar.css\";\nimport getCurrentDate from \"../helpers/getCurrentDate\";\n\nexport const CalendarApp = (props) => {\n  // const defaultValue = {\n  //   year: 2021,\n  //   month: 1,\n  //   day: 1,\n  // };\n  // const [selectedDay, setSelectedDay] = useState(defaultValue);\n  // // console.log(\"calender\", props.items);\n\n  // // const logDatas = { props };\n  // // console.log(\"logDatas\", logDatas);\n  // const date = props.items.filter((item) => item.is_completed === true);\n  // let dayDates = date.map((item) => item.date_created.substring(8, 10));\n  // const parseIntDayArray = dayDates.map((item) => parseInt(item));\n\n  // // [\n  // // here we add some CSS classes\n  // //   { year: 2021, month: 1, day: 4, className: \"purpleDay\" },\n  // // ]\n\n  // let dayObject = parseIntDayArray.map((item) => ({\n  //   year: 2021,\n  //   month: 1,\n  //   day: item,\n  //   className: \"purpleDay\",\n  // }));\n\n  // return (\n  //   <>\n  //     <Calendar\n  //       value={selectedDay}\n  //       onChange={setSelectedDay}\n  //       shouldHighlightWeekends\n  //       customDaysClassName={dayObject}\n  //     />\n  //   </>\n\n  // Show different streak length depending on user id\n  const { state, day } = props;\n  console.log(\"state in calendar\", state);\n  const { account, unlocked } = state;\n  // console.log(\"account\", account)\n  const id = day ? day : 0;\n  // const id = 4;\n\n  const streak1 = {\n    from: {\n      year: 2021,\n      month: 1,\n      day: 24,\n    },\n    to: {\n      year: 2021,\n      month: 1,\n      day: 26,\n    },\n  };\n  const streak1Add = {\n    from: {\n      year: 2021,\n      month: 1,\n      day: 24,\n    },\n    to: {\n      year: 2021,\n      month: 1,\n      day: 27,\n    },\n  };\n  const streak2 = {\n    from: {\n      year: 2021,\n      month: 1,\n      day: 24,\n    },\n    to: {\n      year: 2021,\n      month: 1,\n      day: 27,\n    },\n  };\n  const streak3 = [];\n  const streaksArray = [streak1, streak2, streak3, streak1Add];\n  const initialStreak = streaksArray[id - 1];\n\n  // Show different today selection depending on user id\n  const today1 = { year: 2021, month: 1, day: 27, className: \"todaySelect\" };\n  const today2 = { year: 2021, month: 1, day: 28, className: \"todaySelect\" };\n  const today3 = { year: 2021, month: 1, day: 29, className: \"todaySelect\" };\n  const todayArray = [today1, today2, today3];\n  const initialToday = todayArray[id - 1];\n\n  useEffect(() => {\n    setSelectedDayRange(streaksArray[id - 1]);\n    setToday(todayArray[id - 1]);\n    console.log(\"id in useEffect\", id);\n  }, [account]);\n\n  const [selectedDayRange, setSelectedDayRange] = useState(initialStreak);\n  const [today, setToday] = useState(initialToday);\n\n  useEffect(() => {\n    const today = getCurrentDate();\n    const currentUnlocked = unlocked.map((obj) =>\n      obj.date_unlocked.slice(0, 10)\n    );\n    const todayUnlockExists = currentUnlocked.includes(today);\n\n    console.log(\"calendar id\", id === 1);\n    console.log(\"calendar todayUnlockExists\", todayUnlockExists);\n    if (id === 1 && todayUnlockExists) {\n      setSelectedDayRange(streak1Add);\n    }\n  }, [unlocked]);\n\n  return (\n    <Calendar\n      value={selectedDayRange}\n      onChange={setSelectedDayRange}\n      // colorPrimary=\"#0fbcf9\" // Range start and end\n      // colorPrimaryLight=\"rgba(75, 207, 250, 0.4)\" // Range middle\n      calendarTodayClassName=\"custom-today-day\"\n      shouldHighlightWeekends\n      customDaysClassName={[\n        // here we add some CSS classes\n        today,\n      ]}\n      renderFooter={() => (\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            padding: \"1rem 2rem\",\n          }}\n          className=\"footer\"\n        >\n          🌱 CURRENT STREAK\n        </div>\n      )}\n    />\n  );\n};\n","/Users/ag/lighthouse/meowtivate/front-end/src/components/NavBar.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/CatPlant.jsx",["163","164","165"],"import React, {useState, useEffect} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles(theme => ({\n  pot: {\n    display: 'block',\n    width: '12vw',\n    position:'absolute',\n    bottom: '0px',\n    left: 'calc(50% - 6vw)',\n    zIndex: 2,\n  },\n  plant: {\n    opacity: 0,\n    width: '13vw',\n    position:'relative',\n    zIndex: 1,\n  },\n  plantContainer: {\n  position: 'relative',\n\n  },\n  animatedItem: {\n    animation: `$myEffect 1500ms ${theme.transitions.easing.easeInOut}`,\n\n  },\n\n  \"@keyframes myEffect\": {\n    '0%': {\n      transform: 'translateY(30%)',\n      opacity: 0,\n\n    },\n    '16%': {\n      transform: 'translateY(-3%)',\n      opacity: 1,\n\n    },\n    '28%': {\n      transform: 'translateY(5%)',\n\n    },\n    '44%': {\n      transform: 'translateY(-2%)'\n    },\n    '59%': {\n      transform: 'translateY(0%)'\n    },\n    '73%': {\n      transform: 'translateY(0%)'\n    },\n    '88%': {\n      transform: 'translateY(0%)'\n    },\n    '100%': {\n      transform: 'translateY(0%)'\n    }, \n  }\n}));\n\nexport default function CatPlant(props) {\n  const classes = useStyles();\n  const { actions } = props;\n  const [start, setStart] = React.useState(false);\n  let timer;\n\n  // Calculate percentage\n  const totalAmount = actions.length;\n  const totalCompleted = actions.filter(obj => obj.is_completed === true).length;\n  const initial = ( totalCompleted / totalAmount ) * 100;\n  const num = Math.floor(initial / 10) * 10;\n\n  // const [percentage, setPercentage] = useState(initial);\n  \n  useEffect(() => {\n    setStart(true);\n    timer = setTimeout(() => setStart(false), 1500);\n  }, [actions])\n\n  useEffect(() => {\n    return () => clearInterval(timer);\n  }, [start])\n\n  return (\n      <div className={classes.plantContainer}>\n        <img className={clsx(classes.plant,\n          {[classes.animatedItem]: start}\n        )} src={`https://meowtivate.s3-us-west-2.amazonaws.com/plants/${num}plant.png`} alt=\"plant\" style={{opacity: 1}}/>\n        <img className={classes.pot} src=\"https://meowtivate.s3-us-west-2.amazonaws.com/pots/01pot.png\" alt=\"pot\"/>\n      </div>\n);\n}","/Users/ag/lighthouse/meowtivate/front-end/src/components/GalleryContainer.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/ShopItem.jsx",["166","167","168","169"],"import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    height: '10rem',\n  },\n  card: {\n    minHeight: '22rem',\n    minWidth: '12rem',\n  }\n}));\n\n\nexport default function ShopItem(props) {\n  const classes = useStyles();\n\n  return (\n    <Grid item xs={6} sm={3}>\n      <Card className={classes.card}>\n        <CardContent>\n          <header className=\"meow-item-header\">\n            <img\n              className={classes.root}\n              src={props.image}\n              alt={props.name}\n              price={props.price}\n              style={props.style}\n            />\n            <h2 className=\"meow-item-header-name\">{props.name}</h2>\n          </header>\n          <main className=\"meow-item-description\">\n            <p>{props.description}</p>\n          </main>\n          <footer className=\"meow-item-footer\">\n            <p>{props.price} Meowcoins</p>\n          </footer>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n}\n","/Users/ag/lighthouse/meowtivate/front-end/src/components/InventoryItem.jsx",["170"],"/Users/ag/lighthouse/meowtivate/front-end/src/components/ListsContainer.jsx",["171"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ActionList from \"./ActionList\";\nimport CatPlant from './CatPlant'\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Progress from \"./Progress\";\nimport UnlockBadge from \"./UnlockBadge\";\nimport calculateChecked from \"../helpers/calculateChecked\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    minWidth: '10vw',\n    minHeight: '25vh',\n    paddingLeft: '5vw',\n    paddingRight: '5vw',\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"8px\",\n  },\n  plantbox: {\n    position:'static',\n    zIndex: 1,\n    minWidth: '10vw',\n    minHeight: '40vh',\n    paddingLeft: '5vw',\n    paddingRight: '5vw',\n  },\n  lists: {\n    minWidth: '10vw',\n    minHeight: '50vh',\n  }\n\n}));\n\nexport default function ListContainer(props) {\n  const { state, actionFunctions, catFunctions } = props;\n  const { actions, todos, habits, unlocked } = state;\n  const classes = useStyles();\n\n  // console.log(\"habits in ListsContainer\", habits);\n\n  const completed = actions.filter(obj => obj.is_completed === true);\n  const checkedHabits = completed.filter(obj => obj.category_id === 2);\n  const checkedTodos = completed.filter(obj => obj.category_id === 1);\n  const habitIDs = calculateChecked(checkedHabits);\n  const todoIDs = calculateChecked(checkedTodos);\n\n  // console.log(\"completed\", completed)\n  // console.log(\"checkedHabits\", checkedHabits);\n  // console.log(\"checkedTodos\", checkedTodos);\n  \n  return (\n    <>\n    <UnlockBadge state={state} catFunctions={catFunctions} />\n    <div className={classes.root}>\n      <h2 className={classes.header}>LET'S GET LOTS DONE TODAY</h2>\n      <Grid container spacing={4}>\n        <Grid item xs={4}>\n          <Card className={classes.lists}>\n            <CardContent>\n              <h3>Daily Habits</h3>\n              <ActionList \n                items={habits} \n                category={2} \n                actionFunctions={actionFunctions}\n                initChecked={habitIDs} />\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={4}>\n          <Card className={classes.lists}>\n            <CardContent>\n              <h3>To-Do Today</h3>\n              <ActionList \n                items={todos} \n                category={1} \n                actionFunctions={actionFunctions}\n                initChecked={todoIDs} />\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={4}>\n          <Card>\n            <CardContent>\n              {/* <div>\n              </div> */}\n              <div className={classes.plantbox}>\n                <h3>Today's Progress</h3>\n                <CatPlant actions={actions} />\n              </div>\n            </CardContent>\n          </Card>\n        </Grid>\n      <Progress\n        todos={todos}\n        habits={habits}\n        actions={actions}\n        />\n        </Grid>\n    </div>\n    </>\n  );\n}\n","/Users/ag/lighthouse/meowtivate/front-end/src/components/GalleryItem.js",[],"/Users/ag/lighthouse/meowtivate/front-end/src/helpers/calculateChecked.js",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/Menu.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/UnlockBadge.jsx",["172","173","174","175","176","177","178"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport getCurrentDate from '../helpers/getCurrentDate';\n\nconst useStyles = makeStyles((theme) => ({\n  // display: {\n  //   display: 'block',\n  // },\n  root: {\n    flexGrow: 1,\n    maxHeight: '20rem',\n    position: 'absolute',\n    top: 'calc(50% - 10rem)',\n    left: 'calc(50% - 10rem)',\n    zIndex: 100,\n  },\n  cat: {\n    height: '15rem',\n    position: 'absolute',\n    top: 'calc(50% - 7rem)',\n    left: 'calc(50% - 5rem)',\n    zIndex: 101,\n  },\n  text: {\n    color: '#a0cdca',\n    fontFamily: 'Itim',\n    fontSize: '3.5em',\n    position: 'absolute',\n    top: 'calc(50% + 3rem)',\n    left: 'calc(50% - 4.25em)',\n    zIndex: 102,\n    WebkitTextStroke: 'darksalmon',\n    WebkitTextStrokeWidth: 'thin',\n  }\n}));\n\n\nexport default function UnlockBadge(props) {\n  const classes = useStyles();\n  const { state, catFunctions } = props;\n  const { actions, unlocked, allCats } = state;\n  const { addUnlocked } = catFunctions;\n  const [display, setDisplay] = useState({display: \"none\"});\n  const [catID, setCatID] = useState(\"01\");\n\n  //click away hook\n  const [open, setOpen] = React.useState(false);\n\n  // Calculate percentage of actions done\n  const totalAmount = actions.length;\n  const totalCompleted = actions.filter(obj => obj.is_completed === true).length;\n  const initial = ( totalCompleted / totalAmount ) * 100;\n  const percentage = Math.floor(initial / 10) * 10;\n\n  // Get current date\n  // let today = new Date();\n  // const dd = String(today.getDate()).padStart(2, '0');\n  // const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0\n  // const yyyy = today.getFullYear();\n  // today = `${yyyy}-${mm}-${dd}`;\n  const today = getCurrentDate();\n\n  // console.log(\"date (unlocked)\", today)\n  // console.log(\"unlocked\", unlocked);\n\n  const currentUnlocked = unlocked.map(obj => obj.date_unlocked.slice(0, 10));\n  const todayUnlockExists = currentUnlocked.includes(today);\n\n  //Decide whether to display badge \n  const decideDisplay = (percentage) => {\n    console.log(\"does unlock exist today?\", todayUnlockExists);\n\n    // If 100% complete and an unlock for today doesn't exist, unlock a cat\n    if (percentage === 100 && !todayUnlockExists) {\n      // Get locked cats IDs array\n      const unlockedCatsIDs = unlocked.map(obj => obj.id);\n      const lockedCats = allCats.filter(obj => !unlockedCatsIDs.includes(obj.id));\n      const lockedCatsIDs = lockedCats.map(obj => obj.id);\n\n      // Randomly choose one from a range\n      const randomCatID = lockedCatsIDs[Math.floor(Math.random() * lockedCatsIDs.length)];\n\n      // If cat_id is single digit, convert to string with 0 in front\n      if (randomCatID <= 9) {\n        setCatID(`0${randomCatID.toString()}`);\n      } else {\n        setCatID(randomCatID.toString());\n      }\n\n      setDisplay({display: \"block\"});\n      setOpen(true);\n\n      // console.log(\"catID\", catID);\n      // console.log(\"display\", display);\n    } \n  }\n\n  // Run function to decide display\n  useEffect(() => {\n    // console.log(\"CURRENT PERCENTAGE IN USEEFFECT\", percentage);\n    if (percentage < 100) {\n      setDisplay({display: \"none\"});\n    }\n    decideDisplay(percentage);\n  }, [actions])\n\n  useEffect(() => {\n    // Call function to send POST req + change 'unlocked' state\n    // Takes in a cat_id and user_id\n    // console.log(\"display in useEffect\", display);\n    if (display.display === \"block\") {\n      addUnlocked(Number(catID), 1);\n    }\n  }, [display])\n\n  const handleClickAway = () => {\n    setOpen(false);\n  };\n\n  return (\n    <ClickAwayListener onClickAway={handleClickAway}>\n      <div className={classes.display} style={display}>\n      {open ? (<>\n        <img \n          className={classes.root} \n          src='https://meowtivate.s3-us-west-2.amazonaws.com/unlock_badge.png' \n          alt='unlock_badge'/>\n        <img \n          className={classes.cat} \n          src={`https://meowtivate.s3-us-west-2.amazonaws.com/${catID}cat.png`}/>\n        <h2 className={classes.text}> CONGRATULATIONS!</h2>\n        </>) : null}\n      </div>\n    </ClickAwayListener>\n  );\n}\n","/Users/ag/lighthouse/meowtivate/front-end/src/components/Progress.jsx",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/ActionList.jsx",["179"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport DeleteRoundedIcon from \"@material-ui/icons/DeleteRounded\";\nimport UnfoldMoreRoundedIcon from \"@material-ui/icons/UnfoldMoreRounded\";\nimport SaveRoundedIcon from \"@material-ui/icons/SaveRounded\";\nimport Popup from \"./Popup\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    fontFamily: \"Varela Round\",\n  },\n}));\n\nexport default function ActionList(props) {\n  const { items, category, actionFunctions, initChecked } = props;\n  const {\n    deleteAction,\n    addAction,\n    editActionName,\n    editCompletedState,\n  } = actionFunctions; // State changing funcs from useApplicationData\n  const classes = useStyles();\n\n  console.log(\"checked in ActionList\", initChecked);\n\n  // Toggle between VIEW and EDIT modes\n  const [isEditable, setIsEditable] = useState(false);\n  const modeToggle = () => setIsEditable(!isEditable);\n\n  // Toggle checkbox\n  // checked is an array of numbers that represent checked actionIDs\n  const [checked, setChecked] = useState(initChecked);\n\n  const handleToggle = (value, evt) => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      // if value isn't in checked, add it\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1); // else remove from checked\n    }\n\n    setChecked(newChecked);\n    editCompletedState(value, evt.target.checked); // Update state\n  };\n\n  // Popup state\n  const [popupState, setPopupState] = useState({\n    open: false,\n    type: \"\",\n    actionID: 0, // action_id for EDITING, otherwise 0 for ADDING\n    actionName: \"\",\n  });\n\n  // Popup functions\n  const handleClickOpen = (type, id, name) => {\n    setPopupState((prev) => ({\n      ...prev,\n      open: true,\n      type: type,\n      actionID: id,\n      actionName: name,\n    }));\n  };\n\n  const cancel = () => {\n    setPopupState((prev) => ({\n      ...prev,\n      open: false,\n    }));\n  };\n\n  const confirmDelete = (actionID) => {\n    deleteAction(actionID);\n    setPopupState((prev) => ({\n      ...prev,\n      open: false,\n    }));\n  };\n\n  const confirmAdd = (name, categoryID) => {\n    addAction(name, categoryID);\n    setPopupState((prev) => ({\n      ...prev,\n      open: false,\n    }));\n  };\n\n  const confirmEdit = (actionID, name) => {\n    editActionName(actionID, name);\n    setPopupState((prev) => ({\n      ...prev,\n      open: false,\n    }));\n  };\n\n  return (\n    <List className={classes.root}>\n      {items\n        .sort(function (a, b) {\n          return a.id - b.id;\n        })\n        .map((obj) => {\n          const labelId = `checkbox-list-label-${obj.id}`;\n          return (\n            <ListItem\n              key={obj.id}\n              role={undefined}\n              dense\n              button\n              onClick={(evt) => handleToggle(obj.id, evt)}\n            >\n              <ListItemIcon>\n                <Checkbox\n                  edge=\"start\"\n                  checked={obj.is_completed}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ \"aria-labelledby\": labelId }}\n                />\n              </ListItemIcon>\n              <ListItemText id={labelId} primary={obj.action_name} />\n              {isEditable && (\n                <ListItemSecondaryAction>\n                  <IconButton edge=\"end\" aria-label=\"drag\">\n                    <UnfoldMoreRoundedIcon />\n                  </IconButton>\n                  <IconButton edge=\"end\" aria-label=\"delete\">\n                    <DeleteRoundedIcon\n                      onClick={() =>\n                        handleClickOpen(\"Delete\", obj.id, obj.action_name)\n                      }\n                    />\n                  </IconButton>\n                  <IconButton edge=\"end\" aria-label=\"edit\">\n                    <EditRoundedIcon\n                      onClick={() =>\n                        handleClickOpen(\"Edit\", obj.id, obj.action_name)\n                      }\n                    />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              )}\n            </ListItem>\n          );\n        })}\n\n      {isEditable ? (\n        <>\n          <IconButton>\n            <AddCircleIcon onClick={() => handleClickOpen(\"Add\", 0, \"\")} />\n          </IconButton>\n          <IconButton onClick={modeToggle}>\n            <SaveRoundedIcon />\n          </IconButton>\n        </>\n      ) : (\n        <IconButton onClick={modeToggle}>\n          <EditRoundedIcon />\n        </IconButton>\n      )}\n\n      <Popup\n        cancel={cancel}\n        confirmDelete={confirmDelete}\n        confirmAdd={confirmAdd}\n        confirmEdit={confirmEdit}\n        popupState={popupState}\n        category={category}\n      />\n    </List>\n  );\n}\n","/Users/ag/lighthouse/meowtivate/front-end/src/components/Popup.jsx",["180"],"import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nexport default function Popup(props) {\n  const { \n    confirmDelete, \n    confirmAdd, \n    confirmEdit, \n    cancel, \n    popupState, \n    category } = props;\n  const { open, type, actionID, actionName } = popupState;\n  const listType = category === 1 ? \"to-do\" : \"habit\";\n\n  // Making form a controlled component\n  const [name, setName] = useState(actionName);\n\n  // Prevent stale props by re-rendering when actionName changes in parent\n  useEffect(() => {\n    setName(actionName)\n  }, [actionName])\n\n  const clearAndCancel = () => {\n    setName(\"\");\n    cancel();\n  }\n\n  const clearAndConfirmAdd = () => {\n    setName(\"\");\n    confirmAdd(name, category);\n  }\n\n  console.log(\"actionName\", actionName);\n\n  return (\n    <div>\n      { type === \"Delete\" && (\n        <Dialog\n        open={open}\n        onClose={cancel}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{type} {listType}?</DialogTitle>\n        <DialogContent>\n          {/* <DialogContentText>\n          {actionID}\n          </DialogContentText> */}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => confirmDelete(actionID)} color=\"primary\">\n            Confirm\n          </Button>\n          <Button onClick={cancel} color=\"primary\" autoFocus>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n      )}\n\n      { type === \"Edit\" && (\n        <Dialog open={open} onClose={cancel} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">{type} a {listType}</DialogTitle>\n        <DialogContent>\n          {/* <DialogContentText>\n            {actionID}\n          </DialogContentText> */}\n          <form autoComplete=\"off\" onSubmit={(event) => event.preventDefault()}>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={(event) => setName(event.target.value)}\n              fullWidth\n            />\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={cancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={() => confirmEdit(actionID, name)} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n      )}\n\n      { type === \"Add\" && (\n        <Dialog open={open} onClose={cancel} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">{type} a {listType}</DialogTitle>\n        <DialogContent>\n          {/* <DialogContentText>\n            {actionID}\n          </DialogContentText> */}\n          <form autoComplete=\"off\" onSubmit={(event) => event.preventDefault()}>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={(event) => setName(event.target.value)}\n              fullWidth\n            />\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={clearAndCancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={clearAndConfirmAdd} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n      )}\n    </div>\n  );\n}\n","/Users/ag/lighthouse/meowtivate/front-end/src/components/reportWebVitals.js",[],"/Users/ag/lighthouse/meowtivate/front-end/src/components/SMSForm.js",["181","182","183","184"],"import React, { Component, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport \"./SMSForm.css\";\n\nclass SMSForm extends Component {\n  constructor(props) {\n    console.log(\"props\", props);\n    super(props);\n\n    this.state = {\n      tasks: [],\n      timer: \"\",\n      message: {\n        to: \"\",\n        body: \"\",\n      },\n      submitting: false,\n      error: false,\n      currentTime: \"\",\n      alarmTime: \"\",\n    };\n    // this.onSubmit = this.onSubmit.bind(this);\n    this.setAlarmTime = this.setAlarmTime.bind(this);\n  }\n  componentDidMount() {\n    axios.get(`/api/actions/1`).then((res) => {\n      console.log(res.data);\n      const tasks = [...res.data];\n      const undone = tasks.filter((item) => item.is_completed !== true);\n      const undoneList = undone.map((item) => \"\\n 🐈 \" + item.action_name);\n      const msg =\n        \"_________________\" +\n        \"\\n ⏰  Reminder from Meowtivate. 🐈  \\nHere are your \" +\n        undoneList.length +\n        \" unfinished tasks for today: \" +\n        undoneList;\n      this.setState({\n        message: { ...this.state.message, body: msg },\n      });\n    });\n    this.clock = setInterval(() => this.setCurrentTime(), 1000);\n    this.interval = setInterval(() => this.checkAlarmClock(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.clock);\n    clearInterval(this.interval);\n  }\n\n  setCurrentTime() {\n    this.setState({\n      currentTime: new Date().toLocaleTimeString(\"en-US\", { hour12: false }),\n    });\n  }\n\n  setAlarmTime(event) {\n    event.preventDefault();\n    const inputAlarmTimeModified = event.target.value + \":00\";\n    this.setState({\n      alarmTime: inputAlarmTimeModified,\n    });\n  }\n\n  checkAlarmClock() {\n    if (this.state.alarmTime == \"undefined\" || !this.state.alarmTime) {\n      this.alarmMessage = \"If you want a reminder, you can set up time here:\";\n    } else {\n      this.alarmMessage = \"Your alarm is set for \" + this.state.alarmTime + \".\";\n      if (this.state.currentTime === this.state.alarmTime) {\n        this.setState({ submitting: true });\n        fetch(\"/api/messages\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(this.state.message),\n        })\n          .then((res) => res.json())\n          .then((data) => {\n            if (data.success) {\n              this.setState({\n                error: false,\n                submitting: false,\n                message: {\n                  body: \"\",\n                },\n              });\n            } else {\n              this.setState({\n                error: true,\n                submitting: false,\n              });\n            }\n          });\n        alert(this.state.message.body);\n      } else {\n        console.log(\"Still have some time\");\n      }\n    }\n  }\n\n  render() {\n    const { tasks } = this.state;\n    const undone = tasks.filter((item) => item.is_completed !== true);\n    // // console.log(\"undone\", undone);\n    // console.log(\"this.setState\", this.state.message);\n    // console.log(JSON.stringify(this.state.message));\n    const undoneList = undone.length ? (\n      undone.map((item) => {\n        return (\n          <div>\n            <li key={item.id}>{item.action_name}</li>\n          </div>\n        );\n      })\n    ) : (\n      <div>All done for today</div>\n    );\n    return (\n      <form\n        onSubmit={this.onSubmit}\n        className={this.state.error ? \"error sms-form\" : \"sms-form\"}\n      >\n        <div>\n          <h2>Current Time {this.state.currentTime}.</h2>\n          <p>{this.alarmMessage}</p>\n          <form>\n            <input type=\"time\" onChange={this.setAlarmTime}></input>\n          </form>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default SMSForm;\n",{"ruleId":"185","severity":1,"message":"186","line":39,"column":21,"nodeType":"187","messageId":"188","endLine":39,"endColumn":28},{"ruleId":"189","severity":1,"message":"190","line":66,"column":6,"nodeType":"191","endLine":66,"endColumn":13,"suggestions":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"185","severity":1,"message":"197","line":219,"column":9,"nodeType":"187","messageId":"188","endLine":219,"endColumn":18},{"ruleId":"185","severity":1,"message":"198","line":1,"column":17,"nodeType":"187","messageId":"188","endLine":1,"endColumn":25},{"ruleId":"185","severity":1,"message":"199","line":21,"column":8,"nodeType":"187","messageId":"188","endLine":21,"endColumn":22},{"ruleId":"185","severity":1,"message":"200","line":112,"column":11,"nodeType":"187","messageId":"188","endLine":112,"endColumn":19},{"ruleId":"189","severity":1,"message":"201","line":127,"column":6,"nodeType":"191","endLine":127,"endColumn":10,"suggestions":"202"},{"ruleId":"185","severity":1,"message":"203","line":62,"column":11,"nodeType":"187","messageId":"188","endLine":62,"endColumn":16},{"ruleId":"185","severity":1,"message":"204","line":6,"column":8,"nodeType":"187","messageId":"188","endLine":6,"endColumn":21},{"ruleId":"185","severity":1,"message":"204","line":6,"column":8,"nodeType":"187","messageId":"188","endLine":6,"endColumn":21},{"ruleId":"185","severity":1,"message":"205","line":33,"column":5,"nodeType":"187","messageId":"188","endLine":33,"endColumn":9},{"ruleId":"185","severity":1,"message":"206","line":34,"column":5,"nodeType":"187","messageId":"188","endLine":34,"endColumn":16},{"ruleId":"185","severity":1,"message":"207","line":35,"column":5,"nodeType":"187","messageId":"188","endLine":35,"endColumn":17},{"ruleId":"185","severity":1,"message":"208","line":1,"column":27,"nodeType":"187","messageId":"188","endLine":1,"endColumn":36},{"ruleId":"185","severity":1,"message":"204","line":11,"column":8,"nodeType":"187","messageId":"188","endLine":11,"endColumn":21},{"ruleId":"209","severity":1,"message":"210","line":68,"column":18,"nodeType":"211","endLine":72,"endColumn":34},{"ruleId":"189","severity":1,"message":"212","line":104,"column":6,"nodeType":"191","endLine":104,"endColumn":15,"suggestions":"213"},{"ruleId":"189","severity":1,"message":"214","line":121,"column":6,"nodeType":"191","endLine":121,"endColumn":16,"suggestions":"215"},{"ruleId":"185","severity":1,"message":"198","line":1,"column":16,"nodeType":"187","messageId":"188","endLine":1,"endColumn":24},{"ruleId":"189","severity":1,"message":"216","line":78,"column":13,"nodeType":"217","endLine":78,"endColumn":52},{"ruleId":"189","severity":1,"message":"218","line":83,"column":6,"nodeType":"191","endLine":83,"endColumn":13,"suggestions":"219"},{"ruleId":"185","severity":1,"message":"208","line":1,"column":27,"nodeType":"187","messageId":"188","endLine":1,"endColumn":36},{"ruleId":"185","severity":1,"message":"205","line":39,"column":5,"nodeType":"187","messageId":"188","endLine":39,"endColumn":9},{"ruleId":"185","severity":1,"message":"206","line":40,"column":5,"nodeType":"187","messageId":"188","endLine":40,"endColumn":16},{"ruleId":"185","severity":1,"message":"207","line":41,"column":5,"nodeType":"187","messageId":"188","endLine":41,"endColumn":17},{"ruleId":"185","severity":1,"message":"204","line":6,"column":8,"nodeType":"187","messageId":"188","endLine":6,"endColumn":21},{"ruleId":"185","severity":1,"message":"200","line":47,"column":35,"nodeType":"187","messageId":"188","endLine":47,"endColumn":43},{"ruleId":"185","severity":1,"message":"206","line":49,"column":32,"nodeType":"187","messageId":"188","endLine":49,"endColumn":43},{"ruleId":"185","severity":1,"message":"207","line":49,"column":51,"nodeType":"187","messageId":"188","endLine":49,"endColumn":63},{"ruleId":"185","severity":1,"message":"220","line":51,"column":11,"nodeType":"187","messageId":"188","endLine":51,"endColumn":15},{"ruleId":"185","severity":1,"message":"221","line":51,"column":17,"nodeType":"187","messageId":"188","endLine":51,"endColumn":22},{"ruleId":"189","severity":1,"message":"222","line":147,"column":6,"nodeType":"191","endLine":147,"endColumn":15,"suggestions":"223"},{"ruleId":"189","severity":1,"message":"224","line":156,"column":6,"nodeType":"191","endLine":156,"endColumn":15,"suggestions":"225"},{"ruleId":"226","severity":1,"message":"227","line":172,"column":13,"nodeType":"211","endLine":175,"endColumn":15},{"ruleId":"185","severity":1,"message":"208","line":1,"column":27,"nodeType":"187","messageId":"188","endLine":1,"endColumn":36},{"ruleId":"185","severity":1,"message":"228","line":8,"column":8,"nodeType":"187","messageId":"188","endLine":8,"endColumn":25},{"ruleId":"185","severity":1,"message":"198","line":1,"column":28,"nodeType":"187","messageId":"188","endLine":1,"endColumn":36},{"ruleId":"185","severity":1,"message":"208","line":1,"column":38,"nodeType":"187","messageId":"188","endLine":1,"endColumn":47},{"ruleId":"229","severity":1,"message":"230","line":66,"column":30,"nodeType":"231","messageId":"232","endLine":66,"endColumn":32},{"ruleId":"185","severity":1,"message":"233","line":109,"column":11,"nodeType":"187","messageId":"188","endLine":109,"endColumn":21},"no-unused-vars","'account' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["234"],"no-native-reassign",["235"],"no-negated-in-lhs",["236"],"'checkUser' is assigned a value but never used.","'useState' is defined but never used.","'getCurrentDate' is defined but never used.","'unlocked' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setCoins'. Either include it or remove the dependency array.",["237"],"'state' is assigned a value but never used.","'useMediaQuery' is defined but never used.","'data' is assigned a value but never used.","'postLogData' is assigned a value but never used.","'updateStreak' is assigned a value but never used.","'useEffect' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'id', 'streaksArray', and 'todayArray'. Either include them or remove the dependency array.",["238"],"React Hook useEffect has missing dependencies: 'id' and 'streak1Add'. Either include them or remove the dependency array.",["239"],"Assignments to the 'timer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has a missing dependency: 'timer'. Either include it or remove the dependency array.",["240"],"'logs' is assigned a value but never used.","'rolls' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'decideDisplay' and 'percentage'. Either include them or remove the dependency array.",["241"],"React Hook useEffect has missing dependencies: 'addUnlocked' and 'catID'. Either include them or remove the dependency array.",["242"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'DialogContentText' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'undoneList' is assigned a value but never used.",{"desc":"243","fix":"244"},"no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},"Update the dependencies array to be: [id, state]",{"range":"257","text":"258"},"Update the dependencies array to be: [id, setCoins]",{"range":"259","text":"260"},"Update the dependencies array to be: [account, id, streaksArray, todayArray]",{"range":"261","text":"262"},"Update the dependencies array to be: [id, streak1Add, unlocked]",{"range":"263","text":"264"},"Update the dependencies array to be: [start, timer]",{"range":"265","text":"266"},"Update the dependencies array to be: [actions, decideDisplay, percentage]",{"range":"267","text":"268"},"Update the dependencies array to be: [addUnlocked, catID, display]",{"range":"269","text":"270"},[1860,1867],"[id, state]",[2898,2902],"[id, setCoins]",[2693,2702],"[account, id, streaksArray, todayArray]",[3247,3257],"[id, streak1Add, unlocked]",[1723,1730],"[start, timer]",[4557,4566],"[actions, decideDisplay, percentage]",[4831,4840],"[addUnlocked, catID, display]"]