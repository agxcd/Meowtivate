[{"/home/minty/lighthouse/meowtivate/front-end/src/index.js":"1","/home/minty/lighthouse/meowtivate/front-end/src/components/App.js":"2","/home/minty/lighthouse/meowtivate/front-end/src/helpers/getCurrentDate.js":"3","/home/minty/lighthouse/meowtivate/front-end/src/hooks/useApplicationData.js":"4","/home/minty/lighthouse/meowtivate/front-end/src/components/404.jsx":"5","/home/minty/lighthouse/meowtivate/front-end/src/pages/RegisterPage.jsx":"6","/home/minty/lighthouse/meowtivate/front-end/src/pages/WelcomePage.jsx":"7","/home/minty/lighthouse/meowtivate/front-end/src/pages/LoginPage.jsx":"8","/home/minty/lighthouse/meowtivate/front-end/src/pages/ListsPage.jsx":"9","/home/minty/lighthouse/meowtivate/front-end/src/pages/CatsPage.jsx":"10","/home/minty/lighthouse/meowtivate/front-end/src/pages/ShopPage.jsx":"11","/home/minty/lighthouse/meowtivate/front-end/src/pages/InventoryPage.jsx":"12","/home/minty/lighthouse/meowtivate/front-end/src/pages/AccountPage.jsx":"13","/home/minty/lighthouse/meowtivate/front-end/src/pages/DashboardPage.jsx":"14","/home/minty/lighthouse/meowtivate/front-end/src/helpers/stateHelpers.js":"15","/home/minty/lighthouse/meowtivate/front-end/src/components/NavBar.jsx":"16","/home/minty/lighthouse/meowtivate/front-end/src/components/ShopItem.jsx":"17","/home/minty/lighthouse/meowtivate/front-end/src/components/GalleryContainer.jsx":"18","/home/minty/lighthouse/meowtivate/front-end/src/components/InventoryItem.jsx":"19","/home/minty/lighthouse/meowtivate/front-end/src/components/Weather.js":"20","/home/minty/lighthouse/meowtivate/front-end/src/components/Calendar-import.js":"21","/home/minty/lighthouse/meowtivate/front-end/src/components/ListsContainer.jsx":"22","/home/minty/lighthouse/meowtivate/front-end/src/components/SMSForm.js":"23","/home/minty/lighthouse/meowtivate/front-end/src/components/CatPlant.jsx":"24","/home/minty/lighthouse/meowtivate/front-end/src/components/GalleryItem.js":"25","/home/minty/lighthouse/meowtivate/front-end/src/helpers/calculateChecked.js":"26","/home/minty/lighthouse/meowtivate/front-end/src/components/Menu.jsx":"27","/home/minty/lighthouse/meowtivate/front-end/src/components/Progress.jsx":"28","/home/minty/lighthouse/meowtivate/front-end/src/components/UnlockBadge.jsx":"29","/home/minty/lighthouse/meowtivate/front-end/src/components/ActionList.jsx":"30","/home/minty/lighthouse/meowtivate/front-end/src/components/Popup.jsx":"31"},{"size":248,"mtime":1611546638111,"results":"32","hashOfConfig":"33"},{"size":3860,"mtime":1611613539242,"results":"34","hashOfConfig":"33"},{"size":533,"mtime":1611545201155,"results":"35","hashOfConfig":"33"},{"size":8249,"mtime":1611613539250,"results":"36","hashOfConfig":"33"},{"size":228,"mtime":1611350970315,"results":"37","hashOfConfig":"33"},{"size":2172,"mtime":1611614475859,"results":"38","hashOfConfig":"33"},{"size":2321,"mtime":1611644338728,"results":"39","hashOfConfig":"33"},{"size":1962,"mtime":1611614570155,"results":"40","hashOfConfig":"33"},{"size":461,"mtime":1611546638111,"results":"41","hashOfConfig":"33"},{"size":1675,"mtime":1611648444077,"results":"42","hashOfConfig":"33"},{"size":2295,"mtime":1611631486164,"results":"43","hashOfConfig":"33"},{"size":1477,"mtime":1611624800460,"results":"44","hashOfConfig":"33"},{"size":3234,"mtime":1611637091770,"results":"45","hashOfConfig":"33"},{"size":7546,"mtime":1611656485370,"results":"46","hashOfConfig":"33"},{"size":4871,"mtime":1611613539250,"results":"47","hashOfConfig":"33"},{"size":627,"mtime":1611614969727,"results":"48","hashOfConfig":"33"},{"size":3772,"mtime":1611633265428,"results":"49","hashOfConfig":"33"},{"size":839,"mtime":1611648594225,"results":"50","hashOfConfig":"33"},{"size":1565,"mtime":1611633093679,"results":"51","hashOfConfig":"33"},{"size":2416,"mtime":1611546292749,"results":"52","hashOfConfig":"33"},{"size":4064,"mtime":1611653538538,"results":"53","hashOfConfig":"33"},{"size":5487,"mtime":1611652046939,"results":"54","hashOfConfig":"33"},{"size":3768,"mtime":1611547597157,"results":"55","hashOfConfig":"33"},{"size":2563,"mtime":1611646379148,"results":"56","hashOfConfig":"33"},{"size":1235,"mtime":1611648685727,"results":"57","hashOfConfig":"33"},{"size":375,"mtime":1611350970363,"results":"58","hashOfConfig":"33"},{"size":4672,"mtime":1611615189987,"results":"59","hashOfConfig":"33"},{"size":545,"mtime":1611638035195,"results":"60","hashOfConfig":"33"},{"size":4707,"mtime":1611547698653,"results":"61","hashOfConfig":"33"},{"size":5290,"mtime":1611644578143,"results":"62","hashOfConfig":"33"},{"size":3665,"mtime":1611547611346,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"v3sst6",{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"/home/minty/lighthouse/meowtivate/front-end/src/index.js",[],["138","139"],"/home/minty/lighthouse/meowtivate/front-end/src/components/App.js",["140","141"],"/*\nApp.js is responsible for containing all the routes and passing state as props\n*/\nimport React, { useEffect, useState } from \"react\";\n\nimport \"./styles/App.css\";\nimport \"@fontsource/itim\";\nimport \"@fontsource/varela-round\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport getCurrentDate from \"../helpers/getCurrentDate\";\n\n// Hooks\nimport useApplicationData from \"../hooks/useApplicationData\";\n// import useAuth from \"../hooks/useAuth\";\n\n// Pages imported from src/pages dir\nimport WelcomePage from \"../pages/WelcomePage\";\nimport LoginPage from \"../pages/LoginPage\";\nimport RegisterPage from \"../pages/RegisterPage\";\nimport DashboardPage from \"../pages/DashboardPage\";\nimport ListsPage from \"../pages/ListsPage\";\nimport CatsPage from \"../pages/CatsPage\";\nimport AccountPage from \"../pages/AccountPage\";\nimport InventoryPage from \"../pages/InventoryPage\";\nimport ShopPage from \"../pages/ShopPage\";\n\nimport NotFoundPage from \"./404\";\n\nfunction App() {\n  const {\n    state,\n    actionFunctions,\n    catFunctions,\n    day,\n    setDay,\n    addPot,\n    potFunctions\n   } = useApplicationData();\n  const { unlocked, account } = state;\n  const id = day ? day : 0;\n  // const id = 1;\n\n  const [streak, setStreak] = useState(3); // Hardcode initial streak value\n  const [coins, setCoins] = useState(streak * 100);\n\n\n  // Add 1 to current streak if a cat was unlocked today\n  useEffect(() => {\n    const today = getCurrentDate();\n    // Get array of unlocked dates in \"yyyy-mm-dd\"\n    const currentUnlocked = unlocked.map((obj) =>\n      obj.date_unlocked.slice(0, 10)\n    );\n    if (currentUnlocked.includes(today)) {\n      setStreak((prev) => prev + 1);\n    }\n  }, [unlocked]);\n\n  // Change streak depending on user\n  useEffect(() => {\n    if (id === 2) {\n      setStreak(4);\n    } else if (id === 3) {\n      setStreak(0);\n    }\n  }, [state]);\n\n  // Update streak whenever reloading\n  useEffect(() => {\n    setCoins(streak * 100);\n  }, [streak])\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          {/* Define route paths and nest page components inside */}\n          <Route exact path=\"/\" component={WelcomePage}>\n            <WelcomePage state={state} />\n          </Route>\n          <Route exact path=\"/login\" component={LoginPage}>\n            <LoginPage state={state} />\n          </Route>\n          <Route exact path=\"/register\" component={RegisterPage}>\n            <RegisterPage state={state} />\n          </Route>\n          <Route exact path=\"/dashboard\" component={DashboardPage}>\n            {/* <DashboardPage state={state} /> */}\n            <DashboardPage\n              state={state}\n              streak={streak}\n              day={day}\n              setDay={setDay}\n              id={id}\n              coins={coins}\n              setCoins={setCoins} />\n          </Route>\n          <Route exact path=\"/lists\" component={ListsPage}>\n            <ListsPage\n              state={state}\n              actionFunctions={actionFunctions}\n              catFunctions={catFunctions}\n            />\n          </Route>\n          <Route exact path=\"/cats\" component={CatsPage}>\n            <CatsPage state={state} />\n          </Route>\n          <Route exact path=\"/account\" component={AccountPage}>\n            <AccountPage state={state} />\n          </Route>\n          <Route exact path=\"/inventory\" component={InventoryPage}>\n            <InventoryPage \n              state={state}\n              potFunctions={potFunctions} />\n          </Route>\n          <Route exact path=\"/shop\" component={ShopPage}>\n            <ShopPage \n              state={state}\n              coins={coins}\n              setCoins={setCoins}\n              addPot={addPot} />\n          </Route>\n          <Route exact path=\"*\" component={NotFoundPage} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\nexport default App;\n","/home/minty/lighthouse/meowtivate/front-end/src/helpers/getCurrentDate.js",[],"/home/minty/lighthouse/meowtivate/front-end/src/hooks/useApplicationData.js",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/404.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/pages/RegisterPage.jsx",["142"],"import TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport DoubleArrowRoundedIcon from '@material-ui/icons/DoubleArrowRounded';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: \"Varela Round\",\n    '& > *': {\n      margin: theme.spacing(3),\n    },\n  },\n  container: {\n    display: 'inline-flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    backgroundColor: 'rgb(201,188,200, 0.4)',\n    borderRadius: '2rem',\n    width: '80vw',\n    paddingTop: '5em',\n    paddingBottom: '5em',\n    marginTop: '15vh'   \n  },\n  logo: {\n    fontFamily: \"itim\",\n    letterSpacing: \"8px\",\n    fontSize: '4em',\n    color: 'antiquewhite',\n    lineHeight: '0',\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n    color: 'grey',\n  },\n  loginButton: {\n    fontFamily: \"Varela Round\",\n\n    backgroundColor: '#a0cdca',\n    '&:hover': {\n      backgroundColor: '#78aca8',\n    }\n  },\n  icon: {\n    color: 'white',\n    fontSize: '2.7em',\n    paddingLeft: '1rem',\n    paddingRight: '1rem',\n  }\n}));\n\nexport default function RegisterPage(props) {\n  const classes = useStyles();\n  const { state } = props;\n\n  return (\n    <div className={classes.container}>\n      <h1 className={classes.logo}>MEOWTIVATE</h1>\n      <h2 className={classes.header}>REGISTER</h2>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" />\n        </div>\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" />\n        </div>\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" />\n        </div>\n        <div>\n          <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" />\n        </div>\n        <Button\n        className={classes.loginButton}\n        variant=\"contained\" \n        component={Link}\n        to='/dashboard'>\n        <DoubleArrowRoundedIcon className={classes.icon}/>\n      </Button>\n      </form>\n    </div>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/pages/WelcomePage.jsx",["143"],"import axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport LocalFloristIcon from '@material-ui/icons/LocalFlorist';\nimport EcoIcon from '@material-ui/icons/Eco';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    fontSize: '1.3em',\n  },\n  container: {\n    display: 'inline-flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    backgroundColor: 'rgb(201,188,200, 0.4)',\n    borderRadius: '2rem',\n    width: '80vw',\n    paddingTop: '5em',\n    paddingBottom: '5em',\n    marginTop: '15vh'   \n  },\n  logo: {\n    fontFamily: \"Itim\",\n    letterSpacing: \"8px\",\n    fontSize: '5em',\n    lineHeight: '0',\n    color: '#5c5c5c'\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n    fontSize: '3em',\n    color: 'grey',\n    lineHeight: '0'\n  },\n  signUpButton: {\n    fontFamily: \"Varela Round\",\n    margin: '2rem',\n    backgroundColor: '#ebcb8a',\n    fontSize: '2em',\n    '&:hover': {\n      backgroundColor: '#ceba93',\n    }\n  },\n  loginButton: {\n    fontFamily: \"Varela Round\",\n    margin: '2rem',\n    fontSize: '2em',\n    backgroundColor: '#a0cdca',\n    '&:hover': {\n      backgroundColor: '#78aca8',\n    }\n  },\n}));\n\nexport default function WelcomePage(props) {\n  let history = useHistory();\n\n  const login = () => {\n    axios.get(\"/api/login/1\").then((res) => {\n      // console.log(res);\n      history.push(\"/dashboard\");\n    });\n  };\n  // const { state } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <h2 className={classes.header}>Welcome to </h2>\n      <h1 className={classes.logo}>MEOWIVATE!</h1>\n      <div>\n        <Button\n          className={classes.signUpButton}\n          variant=\"contained\"\n          color=\"primary\"\n          component={Link}\n          to=\"/register\"\n        >\n          <EcoIcon className={classes.icon}/>\n          Sign Up\n        </Button>\n        <Button\n          className={classes.loginButton}\n          variant=\"contained\"\n          color=\"secondary\"\n          component={Link}\n          to=\"/login\"\n        >\n        <LocalFloristIcon className={classes.icon}/>\n          Login\n        </Button>\n      </div>\n    </div>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/pages/LoginPage.jsx",["144"],"import TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport DoubleArrowRoundedIcon from '@material-ui/icons/DoubleArrowRounded';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: \"Varela Round\",\n    '& > *': {\n      margin: theme.spacing(3),\n    },\n  },\n  container: {\n    display: 'inline-flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    backgroundColor: 'rgb(201,188,200, 0.4)',\n    borderRadius: '2rem',\n    width: '80vw',\n    paddingTop: '5em',\n    paddingBottom: '5em',\n    marginTop: '15vh'   \n  },\n  logo: {\n    fontFamily: \"itim\",\n    letterSpacing: \"8px\",\n    fontSize: '4em',\n    color: 'antiquewhite',\n    lineHeight: '0',\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n    color: 'grey',\n  },\n  loginButton: {\n    fontFamily: \"Varela Round\",\n\n    backgroundColor: '#a0cdca',\n    '&:hover': {\n      backgroundColor: '#78aca8',\n    }\n  },\n  icon: {\n    color: 'white',\n    fontSize: '2.7em',\n    paddingLeft: '1rem',\n    paddingRight: '1rem',\n  }\n}));\n\nexport default function LoginPage(props) {\n  const classes = useStyles();\n  const { state } = props;\n\n  return (\n    <div className={classes.container}>\n      <h2 className={classes.logo}>MEOWTIVATE</h2>\n      <h2 className={classes.header}>LOGIN</h2>\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <div>\n        <TextField id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" value=\"Pawthos\" />\n      </div>\n      <div>\n      <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" value=\"****\"/>\n      </div>\n      <Button\n        className={classes.loginButton}\n        variant=\"contained\" \n        component={Link}\n        to='/dashboard'>\n        <DoubleArrowRoundedIcon className={classes.icon}/>\n      </Button>\n    </form>\n    </div>\n  )\n};","/home/minty/lighthouse/meowtivate/front-end/src/pages/ListsPage.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/pages/CatsPage.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/pages/ShopPage.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/pages/InventoryPage.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/pages/AccountPage.jsx",["145","146","147","148"],"import React, { useState, useEffect } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport NavBar from \"../components/NavBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport SaveRoundedIcon from \"@material-ui/icons/SaveRounded\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Widgets } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'inline-flex',\n    flexDirection: 'column',\n    width: '40vw',\n    justifyContent: 'center',\n  },\n  header: {\n    fontFamily: \"Varela Round\",\n    letterSpacing: \"6px\",\n    color: 'grey',\n    lineHeight: 0,\n    paddingTop: '2rem',\n    paddingBottom: '2rem',\n    fontSize: '2em'\n  },\n  infoCard: {\n    color: '#5c5c5c',\n    fontSize: '1.5em',\n    backgroundColor: 'rgb(201,188,200, 0.4)',\n    borderRadius: '2rem',\n    padding: '2em',\n    display: 'inline-flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    marginBottom: '2rem',\n  },\n  icon:{\n    fontSize: '2em',\n    padding: '0.25rem',\n  },\n  form: {\n    padding: '1rem',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    width: '30vw',\n  },\n}));\n\nexport default function AccountPage(props) {\n  // const user = props.state.account[0];\n  // console.log(\"AccountPage\", user);\n  // const { username, email } = user;\n\n  const classes = useStyles();\n\n  // Toggle between VIEW and EDIT modes\n  const [isEditable, setIsEditable] = useState(false);\n  const modeToggle = () => setIsEditable(!isEditable);\n\n  return (\n    <>\n      <header>\n        <NavBar />\n        <h1 className={classes.header}>my Account</h1>\n      </header>\n\n      <section>\n        <article className={classes.container}>\n          {props && (\n            <div className={classes.infoCard}>\n              <p>Username: Pawthos</p>\n              <p>Email: pawthos@gmail.com</p>\n              <p>Password: ********* </p>{\" \"}\n            </div>\n          )}\n        </article>\n        <article>\n          <IconButton onClick={modeToggle}>\n            <EditRoundedIcon className={classes.icon}/>\n          </IconButton>\n        </article>\n        {isEditable && (\n          <section>\n            <form className={classes.form} noValidate autoComplete=\"off\">\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Username\"\n                variant=\"outlined\"\n                style={{margin: '0.5rem'}}\n              />\n              <TextField \n                id=\"outlined-basic\" \n                label=\"Email\" \n                variant=\"outlined\" \n                style={{margin: '0.5rem'}}/>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Password\"\n                variant=\"outlined\"\n                style={{margin: '0.5rem'}}/>\n              <div>\n                <IconButton>\n                  <SaveRoundedIcon className={classes.icon} onClick={modeToggle} />\n                </IconButton>\n              </div>\n            </form>\n          </section>\n        )}\n      </section>\n    </>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/pages/DashboardPage.jsx",["149","150","151","152","153","154","155"],"/home/minty/lighthouse/meowtivate/front-end/src/helpers/stateHelpers.js",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/NavBar.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/ShopItem.jsx",["156"],"import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport MonetizationOnRoundedIcon from '@material-ui/icons/MonetizationOnRounded';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '7rem',\n  },\n  card: {\n    height: '24rem',\n    minWidth: '14rem',\n    paddingBottom: '1rem',\n    paddingTop: '1rem',\n  },\n  footer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  price: {\n    paddingRight: '0.5rem',\n    fontFamily: 'Itim', \n    fontSize: '1.5em',\n    color: 'grey',\n  },\n  buyButton: {\n    backgroundColor: '#e2568e',\n    fontFamily: 'Varela Round',\n    marginLeft: '1rem',\n    paddingLeft: '0.75em',\n    paddingRight: '1em',\n    boxShadow: '0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)',\n    color: 'white',\n    '&:hover': {\n      backgroundColor: '#aa5879',\n      color: 'white',\n    }\n  },\n  warning: {\n    color: 'indianred', \n    fontFamily: 'Itim', \n    position: 'relative',\n    bottom: '18rem',\n    transform: 'rotate(-15deg)',\n    fontSize: '3vw',\n  },\n  pot: {\n    width: '8rem',\n    position: \"relative\",\n    bottom: 0,\n    left: 0,\n  },\n  isPurchased: {\n\n  }\n}));\n\n\nexport default function ShopItem(props) {\n  const classes = useStyles();\n  const { addPot, id, price, coins, setCoins, inventory } = props;\n  const [isSold, setIsSold] = useState(false);\n\n  const buyItem = (user_id, pot_id) => {\n    setCoins(prev => prev - price);\n    setIsSold(true);\n    addPot(user_id, pot_id);\n  }\n\n  // Build array of inventory pot_ids\n  const potIDs = inventory.map(obj => obj.pot_id);\n\n  console.log(`Coin in pot ${id}:`, coins)\n  // useEffect(() => {\n  //   if (isSold) {\n  //     setCoins(prev => prev - price)\n  //   }\n  // }, [isSold])\n\n  return (\n    <Grid item xs={6} sm={3}>\n      <Card className={classes.card}>\n        <CardContent>\n          <header className=\"meow-item-header\">\n            <img\n              className={classes.pot}\n              src={props.image}\n              alt={props.name}\n              price={props.price}\n              // style={props.style}\n            />\n            <h2 className=\"meow-item-header-name\" style={{color: '#5c5c5c'}}>{props.name}</h2>\n          </header>\n          <main className=\"meow-item-description\">\n            <p>{props.description}</p>\n          </main>\n          <footer className={classes.footer} style={{lineHeight: '0.25em'}}>\n            <h2 className={classes.price}>{props.price}</h2>\n            <img className={classes.coin} src='https://meowtivate.s3-us-west-2.amazonaws.com/miscellaneous/meowcoin.png' alt='meowcoin' style={{height: '2.5rem'}}/>\n          {price > coins ? (\n            <Button\n              className={classes.buyButton} \n              variant=\"contained\" \n              disabled>\n              <MonetizationOnRoundedIcon style={{paddingRight: '0.25em'}}/>\n              BUY\n          </Button>\n          ) : (\n            <Button \n              className={classes.buyButton} \n              variant=\"contained\" \n              color=\"secondary\"\n              onClick={() => buyItem(1, id)}>              \n            <MonetizationOnRoundedIcon style={{paddingRight: '0.25em'}}/>\n              BUY\n            </Button>\n          )}\n          </footer>\n\n          {potIDs.includes(id) ? (\n            <h2 className={classes.warning}>ALREADY IN INVENTORY</h2>\n          ) : (isSold ? (<h2 className={classes.warning}>ALREADY IN INVENTORY</h2>) : \"\")}\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/components/GalleryContainer.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/InventoryItem.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/Weather.js",["157"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./styles/weather.css\";\n\nconst api = {\n  key: process.env.REACT_APP_WEATHER_API_KEY,\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\n// api.openweathermap.org/data/2.5/\n// weather?lat={lat}&lon={lon}&appid={API key}\n\nexport const Weather = () => {\n  // const [city, setCity] = useState(\"\");\n  const [weather, setWeather] = useState(\"\");\n\n  // const search = (event) => {\n  //   if (event.key === \"Enter\") {\n  //     fetch(`${api.base}weather?q=${city}&units=metric&APPID=${api.key}`)\n  //       .then((res) => res.json())\n  //       .then((result) => {\n  //         setWeather(result);\n  //         console.log(result);\n  //       });\n  //   }\n  // };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      fetch(`${api.base}weather?lat=${position.coords.latitude}&lon=${position.coords.longitude}&units=metric&appid=${api.key}`)\n      .then((res) => res.json())\n      .then((result) => {\n        setWeather(result);\n        // console.log(result);\n      });\n    });\n  }, [])\n  return (\n    <div\n      className={\n        typeof weather.main != \"undefined\"\n          ? weather.weather[0].main.includes(\"Cloud\")\n            ? \"weather Clouds\"\n            : \"weather\"\n          : \"weather\"\n      }\n    >\n      <section className=\"weather\">\n        {/* <div className=\"weather-search-box\">\n          <input\n            type=\"text\"\n            className=\"city-search-bar\"\n            placeholder=\"City...\"\n            onChange={(e) => setCity(e.target.value)}\n            value={city}\n            onKeyPress={search}\n          />\n        </div> */}\n        {typeof weather.main != \"undefined\" ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location\">\n                {weather.name}, {weather.sys.country}\n              </div>\n            </div>\n            <div className=\"temp\">{Math.round(weather.main.temp)}&deg;c</div>\n            <div className=\"weather\">{weather.weather[0].main}</div>\n            <div><img \n            className={weather.weather[0].main} \n            style={{display: 'block'}} \n            src={`https://meowtivate.s3-us-west-2.amazonaws.com/weather/${weather.weather[0].main}.png`} \n            alt=\"weather-image\"/>\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </section>\n    </div>\n  );\n};\n","/home/minty/lighthouse/meowtivate/front-end/src/components/Calendar-import.js",["158","159","160"],"/home/minty/lighthouse/meowtivate/front-end/src/components/ListsContainer.jsx",["161","162","163","164","165","166","167"],"/home/minty/lighthouse/meowtivate/front-end/src/components/SMSForm.js",["168","169","170","171"],"import React, { Component, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport \"./SMSForm.css\";\n\nclass SMSForm extends Component {\n  constructor(props) {\n    // console.log(\"props\", props);\n    super(props);\n\n    this.state = {\n      tasks: [],\n      timer: \"\",\n      message: {\n        to: \"\",\n        body: \"\",\n      },\n      submitting: false,\n      error: false,\n      currentTime: \"\",\n      alarmTime: \"\",\n    };\n    // this.onSubmit = this.onSubmit.bind(this);\n    this.setAlarmTime = this.setAlarmTime.bind(this);\n  }\n  componentDidMount() {\n    axios.get(`/api/actions/1`).then((res) => {\n      // console.log(res.data);\n      const tasks = [...res.data];\n      const undone = tasks.filter((item) => item.is_completed !== true);\n      const undoneList = undone.map((item) => \"\\n 🐈 \" + item.action_name);\n      const msg =\n        \"_________________\" +\n        \"\\n ⏰  Reminder from Meowtivate. 🐈  \\nHere are your \" +\n        undoneList.length +\n        \" unfinished tasks for today: \" +\n        undoneList;\n      this.setState({\n        message: { ...this.state.message, body: msg },\n      });\n    });\n    this.clock = setInterval(() => this.setCurrentTime(), 1000);\n    this.interval = setInterval(() => this.checkAlarmClock(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.clock);\n    clearInterval(this.interval);\n  }\n\n  setCurrentTime() {\n    this.setState({\n      currentTime: new Date().toLocaleTimeString(\"en-US\", { hour12: false }),\n    });\n  }\n\n  setAlarmTime(event) {\n    event.preventDefault();\n    const inputAlarmTimeModified = event.target.value + \":00\";\n    this.setState({\n      alarmTime: inputAlarmTimeModified,\n    });\n  }\n\n  checkAlarmClock() {\n    if (this.state.alarmTime == \"undefined\" || !this.state.alarmTime) {\n      this.alarmMessage = \"If you want a reminder, you can set up time here:\";\n    } else {\n      this.alarmMessage = \"Your alarm is set for \" + this.state.alarmTime + \".\";\n      if (this.state.currentTime === this.state.alarmTime) {\n        this.setState({ submitting: true });\n        fetch(\"/api/messages\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(this.state.message),\n        })\n          .then((res) => res.json())\n          .then((data) => {\n            if (data.success) {\n              this.setState({\n                error: false,\n                submitting: false,\n                message: {\n                  body: \"\",\n                },\n              });\n            } else {\n              this.setState({\n                error: true,\n                submitting: false,\n              });\n            }\n          });\n        alert(this.state.message.body);\n      } else {\n        // console.log(\"Still have some time\");\n      }\n    }\n  }\n\n  render() {\n    const { tasks } = this.state;\n    const undone = tasks.filter((item) => item.is_completed !== true);\n    // console.log(\"undone\", undone);\n    // console.log(\"this.setState\", this.state.message);\n    // console.log(JSON.stringify(this.state.message));\n    const undoneList = undone.length ? (\n      undone.map((item) => {\n        return (\n          <div>\n            <li key={item.id}>{item.action_name}</li>\n          </div>\n        );\n      })\n    ) : (\n      <div>All done for today</div>\n    );\n    return (\n      <form\n        onSubmit={this.onSubmit}\n        className={this.state.error ? \"error sms-form\" : \"sms-form\"}\n      >\n        <div>\n          <h2>Current Time {this.state.currentTime}.</h2>\n          <p>{this.alarmMessage}</p>\n          <form>\n            <input type=\"time\" onChange={this.setAlarmTime}></input>\n          </form>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default SMSForm;\n","/home/minty/lighthouse/meowtivate/front-end/src/components/CatPlant.jsx",["172","173","174"],"/home/minty/lighthouse/meowtivate/front-end/src/components/GalleryItem.js",[],"/home/minty/lighthouse/meowtivate/front-end/src/helpers/calculateChecked.js",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/Menu.jsx",["175","176"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Drawer, List, Divider, ListItem, IconButton } from '@material-ui/core';\nimport { MenuRounded, HomeRounded, AppsRounded, FormatListBulletedRounded, StorefrontRounded, AccountBoxRounded, SubdirectoryArrowLeftRounded, SpaRounded } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  menuItem: {\n    fontFamily: 'Varela Round',\n    color: 'dimgrey',\n    paddingTop: '0.5em',\n    fontSize: '1.2em'\n  },\n  menuIcon: {\n    fontSize: \"2em\",\n    color: '#fcd0c5',\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n}));\n\nexport default function SimpleMenu() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [state, setState] = React.useState({\n    left: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n  \n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        <ListItem className={classes.menuItem} component={Link} to=\"/dashboard\">\n          <HomeRounded style={{paddingRight: '0.25em'}}/>\n            My DashBoard\n        </ListItem>\n        <ListItem className={classes.menuItem} component={Link} to=\"/account\">\n          <AccountBoxRounded style={{paddingRight: '0.25em'}}/>\n            My Account\n        </ListItem>\n        <ListItem className={classes.menuItem} component={Link} to=\"/cats\" >\n          <AppsRounded style={{paddingRight: '0.25em'}}/>\n            My Collection\n        </ListItem>\n        <ListItem className={classes.menuItem} component={Link} to=\"/lists\">\n          <FormatListBulletedRounded style={{paddingRight: '0.25em'}}/>\n            My Lists\n        </ListItem>\n        <ListItem className={classes.menuItem} component={Link} to=\"/inventory\">\n          <SpaRounded style={{paddingRight: '0.25em'}}/>\n            My Inventory\n        </ListItem>\n        <Divider style={{margin: '0.5em'}}/>\n        <ListItem className={classes.menuItem} component={Link} to=\"/shop\">\n          <StorefrontRounded style={{paddingRight: '0.25em'}}/>\n            Shop\n        </ListItem>\n        <ListItem className={classes.menuItem} component={Link} to=\"/\">\n          <SubdirectoryArrowLeftRounded style={{paddingRight: '0.25em'}}/>\n            Logout\n        </ListItem>\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n      {['left'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <IconButton onClick={toggleDrawer(anchor, true)}>\n            <MenuRounded className={classes.menuIcon}/>\n          </IconButton>\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n            {list(anchor)}\n          </Drawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n\n  // const handleClick = (event) => {\n  //   setAnchorEl(event.currentTarget);\n  // };\n\n  // const handleClose = () => {\n  //   setAnchorEl(null);\n  // };\n\n  // return (\n\n    // <div>\n    //   <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n    //     <MenuRoundedIcon className={classes.menuIcon}/>\n    //   </Button>\n    //   <Menu\n    //     id=\"simple-menu\"\n    //     anchorEl={anchorEl}\n    //     keepMounted\n    //     open={Boolean(anchorEl)}\n    //     onClose={handleClose}\n    //   >\n    //     <MenuItem className={classes.menuItem} component={Link} to=\"/dashboard\">\n    //         My DashBoard\n    //     </MenuItem>\n    //     <MenuItem className={classes.menuItem} component={Link} to=\"/account\">\n    //         My Account\n    //     </MenuItem>\n    //     <MenuItem className={classes.menuItem} component={Link} to=\"/cats\" >\n    //         My Collection\n    //     </MenuItem>\n    //     <MenuItem className={classes.menuItem}  component={Link} to=\"/lists\">\n    //         My Lists\n    //     </MenuItem>\n    //     <MenuItem className={classes.menuItem} component={Link} to=\"/inventory\">\n    //         My Inventory\n    //     </MenuItem>\n    //     <MenuItem className={classes.menuItem} component={Link} to=\"/shop\">\n    //         Shop\n    //     </MenuItem>\n    //     <MenuItem className={classes.menuItem} component={Link} to=\"/\">\n    //         Logout\n    //     </MenuItem>\n    //   </Menu>\n    // </div>\n  // );\n}","/home/minty/lighthouse/meowtivate/front-end/src/components/Progress.jsx",["177","178","179"],"import React from \"react\";\nimport \"./progress.css\";\n\nfunction Progress(props) {\n  // console.log(\"currentStreaks\", props);\n\n  const {\n    completedPercentage,\n    completedAmount,\n    totalAmount,\n    currentStreaks,\n  } = props;\n\n  return (\n    <div className=\"progress\">\n      <div\n        className=\"todos-completed\"\n        style={{ height: `${completedPercentage * 100}%` }}\n      ></div>\n      {/* <h2>Today's Progress</h2> */}\n      {/* <p>Here is your current streak: {currentStreaks}</p> */}\n    </div>\n  );\n}\n\nexport default Progress;\n","/home/minty/lighthouse/meowtivate/front-end/src/components/UnlockBadge.jsx",["180","181","182"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport getCurrentDate from '../helpers/getCurrentDate';\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    maxHeight: \"20rem\",\n    position: \"absolute\",\n    top: \"calc(50% - 10rem)\",\n    left: \"calc(50% - 10rem)\",\n    zIndex: 100,\n  },\n  cat: {\n    height: \"15rem\",\n    position: \"absolute\",\n    top: \"calc(50% - 7rem)\",\n    left: \"calc(50% - 5rem)\",\n    zIndex: 101,\n  },\n  text: {\n    color: \"#a0cdca\",\n    fontFamily: \"Itim\",\n    fontSize: \"3.5em\",\n    position: \"absolute\",\n    top: \"calc(50% + 3rem)\",\n    left: \"calc(50% - 4.25em)\",\n    zIndex: 102,\n    WebkitTextStroke: 'darksalmon',\n    WebkitTextStrokeWidth: 'thin',\n  },\n  animatedItem: {\n    animation: `$myEffect 10000ms infinite linear`,\n\n  },\n  \"@keyframes myEffect\": {\n    '0%': {\n      transform: 'rotate(0deg)',\n    },\n    '100%': {\n      transform: 'rotate(360deg)',\n    }, \n  }\n}));\n\nexport default function UnlockBadge(props) {\n  const classes = useStyles();\n  const { state, catFunctions } = props;\n  const { actions, unlocked, allCats } = state;\n  const { addUnlocked } = catFunctions;\n  const [display, setDisplay] = useState({ display: \"none\" });\n  const [catID, setCatID] = useState(\"01\");\n\n  //click away hook\n  const [open, setOpen] = React.useState(false);\n\n  // Calculate percentage of actions done\n  const totalAmount = actions.length;\n  const totalCompleted = actions.filter((obj) => obj.is_completed === true)\n    .length;\n  const initial = (totalCompleted / totalAmount) * 100;\n  const percentage = Math.floor(initial / 10) * 10;\n\n  // Get current date\n  // let today = new Date();\n  // const dd = String(today.getDate()).padStart(2, \"0\");\n  // const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0\n  // const yyyy = today.getFullYear();\n  // today = `${yyyy}-${mm}-${dd}`;\n  // let today = new Date();\n  // const dd = String(today.getDate()).padStart(2, '0');\n  // const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0\n  // const yyyy = today.getFullYear();\n  // today = `${yyyy}-${mm}-${dd}`;\n  const today = getCurrentDate();\n\n  // console.log(\"date (unlocked)\", today)\n  // console.log(\"unlocked\", unlocked);\n\n  const currentUnlocked = unlocked.map((obj) => obj.date_unlocked.slice(0, 10));\n  const todayUnlockExists = currentUnlocked.includes(today);\n\n  //Decide whether to display badge\n  const decideDisplay = (percentage) => {\n    console.log(\"does unlock exist today?\", todayUnlockExists);\n\n    // If 100% complete and an unlock for today doesn't exist, unlock a cat\n    if (percentage === 100 && !todayUnlockExists) {\n      // Get locked cats IDs array\n      const unlockedCatsIDs = unlocked.map((obj) => obj.id);\n      const lockedCats = allCats.filter(\n        (obj) => !unlockedCatsIDs.includes(obj.id)\n      );\n      const lockedCatsIDs = lockedCats.map((obj) => obj.id);\n\n      // Randomly choose one from a range\n      const randomCatID =\n        lockedCatsIDs[Math.floor(Math.random() * lockedCatsIDs.length)];\n\n      // If cat_id is single digit, convert to string with 0 in front\n      if (randomCatID <= 9) {\n        setCatID(`0${randomCatID.toString()}`);\n      } else {\n        setCatID(randomCatID.toString());\n      }\n\n      setDisplay({ display: \"block\" });\n      setOpen(true);\n\n      // console.log(\"catID\", catID);\n      // console.log(\"display\", display);\n    }\n  };\n\n  // Run function to decide display\n  useEffect(() => {\n    // console.log(\"CURRENT PERCENTAGE IN USEEFFECT\", percentage);\n    if (percentage < 100) {\n      setDisplay({ display: \"none\" });\n    }\n    decideDisplay(percentage);\n  }, [actions]);\n\n  useEffect(() => {\n    // Call function to send POST req + change 'unlocked' state\n    // Takes in a cat_id and user_id\n    // console.log(\"display in useEffect\", display);\n    if (display.display === \"block\") {\n      addUnlocked(Number(catID), 1);\n    }\n  }, [display]);\n\n  const handleClickAway = () => {\n    setOpen(false);\n  };\n\n  return (\n    <ClickAwayListener onClickAway={handleClickAway}>\n      <div className={classes.display} style={display}>\n      {open ? (<>\n        <img \n          className={clsx(classes.root,classes.animatedItem)} \n          src='https://meowtivate.s3-us-west-2.amazonaws.com/unlock_badge.png' \n          alt='unlock_badge'/>\n        <img \n          className={classes.cat} \n          src={`https://meowtivate.s3-us-west-2.amazonaws.com/${catID}cat.png`}/>\n        <h2 className={classes.text}> CONGRATULATIONS!</h2>\n        </>) : null}\n      </div>\n    </ClickAwayListener>\n  );\n}\n","/home/minty/lighthouse/meowtivate/front-end/src/components/ActionList.jsx",[],"/home/minty/lighthouse/meowtivate/front-end/src/components/Popup.jsx",[],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":39,"column":21,"nodeType":"189","messageId":"190","endLine":39,"endColumn":28},{"ruleId":"191","severity":1,"message":"192","line":66,"column":6,"nodeType":"193","endLine":66,"endColumn":13,"suggestions":"194"},{"ruleId":"187","severity":1,"message":"195","line":55,"column":11,"nodeType":"189","messageId":"190","endLine":55,"endColumn":16},{"ruleId":"187","severity":1,"message":"196","line":61,"column":9,"nodeType":"189","messageId":"190","endLine":61,"endColumn":14},{"ruleId":"187","severity":1,"message":"195","line":55,"column":11,"nodeType":"189","messageId":"190","endLine":55,"endColumn":16},{"ruleId":"187","severity":1,"message":"197","line":1,"column":27,"nodeType":"189","messageId":"190","endLine":1,"endColumn":36},{"ruleId":"187","severity":1,"message":"198","line":6,"column":8,"nodeType":"189","messageId":"190","endLine":6,"endColumn":12},{"ruleId":"187","severity":1,"message":"199","line":7,"column":8,"nodeType":"189","messageId":"190","endLine":7,"endColumn":19},{"ruleId":"187","severity":1,"message":"200","line":11,"column":10,"nodeType":"189","messageId":"190","endLine":11,"endColumn":17},{"ruleId":"187","severity":1,"message":"201","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":25},{"ruleId":"187","severity":1,"message":"198","line":2,"column":36,"nodeType":"189","messageId":"190","endLine":2,"endColumn":40},{"ruleId":"187","severity":1,"message":"199","line":2,"column":42,"nodeType":"189","messageId":"190","endLine":2,"endColumn":53},{"ruleId":"187","severity":1,"message":"202","line":11,"column":8,"nodeType":"189","messageId":"190","endLine":11,"endColumn":15},{"ruleId":"187","severity":1,"message":"203","line":14,"column":8,"nodeType":"189","messageId":"190","endLine":14,"endColumn":22},{"ruleId":"187","severity":1,"message":"204","line":170,"column":11,"nodeType":"189","messageId":"190","endLine":170,"endColumn":19},{"ruleId":"191","severity":1,"message":"205","line":185,"column":6,"nodeType":"193","endLine":185,"endColumn":10,"suggestions":"206"},{"ruleId":"187","severity":1,"message":"197","line":1,"column":27,"nodeType":"189","messageId":"190","endLine":1,"endColumn":36},{"ruleId":"207","severity":1,"message":"208","line":68,"column":18,"nodeType":"209","endLine":72,"endColumn":34},{"ruleId":"187","severity":1,"message":"210","line":8,"column":10,"nodeType":"189","messageId":"190","endLine":8,"endColumn":29},{"ruleId":"191","severity":1,"message":"211","line":106,"column":6,"nodeType":"193","endLine":106,"endColumn":15,"suggestions":"212"},{"ruleId":"191","severity":1,"message":"213","line":123,"column":6,"nodeType":"193","endLine":123,"endColumn":16,"suggestions":"214"},{"ruleId":"187","severity":1,"message":"198","line":6,"column":8,"nodeType":"189","messageId":"190","endLine":6,"endColumn":12},{"ruleId":"187","severity":1,"message":"199","line":7,"column":8,"nodeType":"189","messageId":"190","endLine":7,"endColumn":19},{"ruleId":"187","severity":1,"message":"215","line":56,"column":49,"nodeType":"189","messageId":"190","endLine":56,"endColumn":53},{"ruleId":"187","severity":1,"message":"204","line":57,"column":35,"nodeType":"189","messageId":"190","endLine":57,"endColumn":43},{"ruleId":"187","severity":1,"message":"216","line":57,"column":45,"nodeType":"189","messageId":"190","endLine":57,"endColumn":52},{"ruleId":"187","severity":1,"message":"217","line":57,"column":54,"nodeType":"189","messageId":"190","endLine":57,"endColumn":62},{"ruleId":"187","severity":1,"message":"218","line":74,"column":9,"nodeType":"189","messageId":"190","endLine":74,"endColumn":21},{"ruleId":"187","severity":1,"message":"201","line":1,"column":28,"nodeType":"189","messageId":"190","endLine":1,"endColumn":36},{"ruleId":"187","severity":1,"message":"197","line":1,"column":38,"nodeType":"189","messageId":"190","endLine":1,"endColumn":47},{"ruleId":"219","severity":1,"message":"220","line":66,"column":30,"nodeType":"221","messageId":"222","endLine":66,"endColumn":32},{"ruleId":"187","severity":1,"message":"223","line":109,"column":11,"nodeType":"189","messageId":"190","endLine":109,"endColumn":21},{"ruleId":"191","severity":1,"message":"224","line":66,"column":9,"nodeType":"225","endLine":66,"endColumn":49},{"ruleId":"191","severity":1,"message":"226","line":88,"column":13,"nodeType":"227","endLine":88,"endColumn":52},{"ruleId":"191","severity":1,"message":"228","line":93,"column":6,"nodeType":"193","endLine":93,"endColumn":13,"suggestions":"229"},{"ruleId":"187","severity":1,"message":"230","line":29,"column":10,"nodeType":"189","messageId":"190","endLine":29,"endColumn":18},{"ruleId":"187","severity":1,"message":"231","line":29,"column":20,"nodeType":"189","messageId":"190","endLine":29,"endColumn":31},{"ruleId":"187","severity":1,"message":"232","line":9,"column":5,"nodeType":"189","messageId":"190","endLine":9,"endColumn":20},{"ruleId":"187","severity":1,"message":"233","line":10,"column":5,"nodeType":"189","messageId":"190","endLine":10,"endColumn":16},{"ruleId":"187","severity":1,"message":"234","line":11,"column":5,"nodeType":"189","messageId":"190","endLine":11,"endColumn":19},{"ruleId":"191","severity":1,"message":"235","line":124,"column":6,"nodeType":"193","endLine":124,"endColumn":15,"suggestions":"236"},{"ruleId":"191","severity":1,"message":"237","line":133,"column":6,"nodeType":"193","endLine":133,"endColumn":15,"suggestions":"238"},{"ruleId":"239","severity":1,"message":"240","line":147,"column":9,"nodeType":"209","endLine":149,"endColumn":82},"no-native-reassign",["241"],"no-negated-in-lhs",["242"],"no-unused-vars","'account' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["243"],"'state' is assigned a value but never used.","'login' is assigned a value but never used.","'useEffect' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'Widgets' is defined but never used.","'useState' is defined but never used.","'SMSForm' is defined but never used.","'getCurrentDate' is defined but never used.","'unlocked' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setCoins'. Either include it or remove the dependency array.",["244"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'responsiveFontSizes' is defined but never used.","React Hook useEffect has missing dependencies: 'id', 'streaksArray', and 'todayArray'. Either include them or remove the dependency array.",["245"],"React Hook useEffect has missing dependencies: 'id' and 'streak1Add'. Either include them or remove the dependency array.",["246"],"'user' is assigned a value but never used.","'streaks' is assigned a value but never used.","'logDatas' is assigned a value but never used.","'undoneAmount' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'undoneList' is assigned a value but never used.","The 'inventory' conditional could make the dependencies of useEffect Hook (at line 84) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'inventory' in its own useMemo() Hook.","VariableDeclarator","Assignments to the 'timer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has a missing dependency: 'timer'. Either include it or remove the dependency array.",["247"],"'anchorEl' is assigned a value but never used.","'setAnchorEl' is assigned a value but never used.","'completedAmount' is assigned a value but never used.","'totalAmount' is assigned a value but never used.","'currentStreaks' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'decideDisplay' and 'percentage'. Either include them or remove the dependency array.",["248"],"React Hook useEffect has missing dependencies: 'addUnlocked' and 'catID'. Either include them or remove the dependency array.",["249"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},"Update the dependencies array to be: [id, state]",{"range":"264","text":"265"},"Update the dependencies array to be: [id, setCoins]",{"range":"266","text":"267"},"Update the dependencies array to be: [account, id, streaksArray, todayArray]",{"range":"268","text":"269"},"Update the dependencies array to be: [id, streak1Add, unlocked]",{"range":"270","text":"271"},"Update the dependencies array to be: [start, timer]",{"range":"272","text":"273"},"Update the dependencies array to be: [actions, decideDisplay, percentage]",{"range":"274","text":"275"},"Update the dependencies array to be: [addUnlocked, catID, display]",{"range":"276","text":"277"},[1860,1867],"[id, state]",[4564,4568],"[id, setCoins]",[2807,2816],"[account, id, streaksArray, todayArray]",[3367,3377],"[id, streak1Add, unlocked]",[2210,2217],"[start, timer]",[3776,3785],"[actions, decideDisplay, percentage]",[4050,4059],"[addUnlocked, catID, display]"]